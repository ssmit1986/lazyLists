Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"$HistoryLength", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"\"\<lazyLists`*\>\"", ",", "\"\<lazyLists`Private`*\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "lazyLists`"}]}], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"2d6a87cf-3ef1-4832-b8b9-0995d6d1b646"],

Cell[CellGroupData[{

Cell["Usage messages for lazy list constructors and other symbols", \
"Section",ExpressionUUID->"ec4cc4aa-b2ff-4f5e-9ddc-c3f207f96586"],

Cell[CellGroupData[{

Cell["Constructors", \
"Subsection",ExpressionUUID->"270e0702-e686-4de6-bae4-7c5c59474557"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "lazyList"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyGenerator"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyRange"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyPowerRange"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyNestList"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyPeriodicList"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyStream"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyTuples"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyConstantArray"}]}], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"8f1d3194-9e73-46ae-83d7-5e7cad595285"],

Cell[CellGroupData[{

Cell[BoxData["\<\"lazyList is linked list data structure that should contain \
2 elements: the first is the first element, the second a held expression that \
will generate the next linked list when evaluated.\\nYou can extract these \
elements explicitely with First and Last/Rest. Part and Take will not work \
because they have been overloaded with special functionalities when used on \
lazyList.\\nlazyList[list] or lazyList[Hold[var]] is a special constructor \
that generates a lazyList from an ordinary list\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info43746534490-7546211",ExpressionUUID->"ebee8793-2e61-4f59-a922-\
3f033098bd08"],

Cell[BoxData["\<\"lazyGenerator[f, start, min, max, step] generates a \
lazyList that applies f to values {start, start + step, start + 2 step, ...} \
for values between min and max (which are allowed to be infinite).\\nWhen min \
and max are both infinite, symbolic values for start and step are \
allowed\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info53746534490-7546211",ExpressionUUID->"a8501418-3ac4-4208-aad1-\
f27a168e40d5"],

Cell[BoxData["\<\"lazyRange[] is a lazy representation of the Integers from 1 \
to \[Infinity]. lazyRange[min, delta] represents values values from min \
onwards in steps of delta.\\nlazyRange has no upper limit and is generally \
slightly faster than lazyGenerator\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info63746534490-7546211",ExpressionUUID->"82981971-b263-4a1a-98d0-\
c7e26f6d6823"],

Cell[BoxData["\<\"lazyPowerRange[min, r] is the infinite list {min, r \
\[Times] min, r^2 \[Times] min, ...}\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info73746534490-7546211",ExpressionUUID->"ccb520de-7e8e-4c5f-8b48-\
0d6c2a09c5d1"],

Cell[BoxData["\<\"lazyNestList[f, elem] is the infinite list {elem, f[elem], \
f[f[elem]], ...} starting with elem and generated by iterating f repeatedly\"\
\>"], "Print", "PrintUsage",
 CellTags->
  "Info83746534490-7546211",ExpressionUUID->"fe1d74c3-080b-48ed-b08e-\
f82cefa5d703"],

Cell[BoxData["\<\"lazyPeriodicList[list] is an infinite lazyList that cycles \
through the values in list periodically\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info93746534490-7546211",ExpressionUUID->"9b85c1cc-38bf-46bb-b805-\
2ab7733d10c6"],

Cell[BoxData["\<\"lazyStream[streamObject] creates a lazyList that streams \
from streamObject. These streams will stop automatically when EndOfFile is \
reached\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info103746534490-7546211",ExpressionUUID->"83aeaed5-3a3d-4b6f-907a-\
e16d3387e4c1"],

Cell[BoxData["\<\"lazyTuples is a lazy version of Tuples\"\>"], "Print", \
"PrintUsage",
 CellTags->
  "Info113746534491-7546211",ExpressionUUID->"fe138545-5395-47e3-ba63-\
c3e25fbc75d2"],

Cell[BoxData["\<\"lazyConstantArray[elem] produces an infinite list of copies \
of elem\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info123746534491-7546211",ExpressionUUID->"4b0c4c49-8ec9-462d-aac1-\
b742d99ee746"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Operations on finite lazyLists", \
"Subsection",ExpressionUUID->"6d5d1031-631a-41cb-8e58-264d57f52254"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "lazyFiniteTake"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyFinitePart"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazySetState"}]}], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"0937c9c9-1b4b-4347-a8ce-1b460d985208"],

Cell[CellGroupData[{

Cell[BoxData["\<\"lazyFiniteTake[lz, spec] directly applies Take to finite \
lazyLists and periodic lazyLists without having to traverse the lazyList \
element-by-element. \\nIt is equivalent to Take[list, spec]\"\>"], "Print", \
"PrintUsage",
 CellTags->
  "Info133746534491-7546211",ExpressionUUID->"6cd98d34-5d46-42aa-8cbc-\
cd48e2f0aca4"],

Cell[BoxData["\<\"lazyFinitePart[lz, i, j, k,...] directly extracts Part from \
finite and periodic lazyLists without having to traverse the lazyList \
element-by-element. \\nIt is equivalent to Part[list, i, j, k, ...]\"\>"], \
"Print", "PrintUsage",
 CellTags->
  "Info143746534491-7546211",ExpressionUUID->"bcf036ad-2b59-4f0c-9102-\
8d6bb05dcc49"],

Cell[BoxData["\<\"lazySetState[lz, state] with lz a supported lazyList \
returns a lazyList at the specified state. \\nFinite lists, lazyPeriodicList, \
lists generated with lazyGenerator, lazy(Power)Range, and lazyNestList are \
supported.\\nMaps over supported lists are also supported\"\>"], "Print", \
"PrintUsage",
 CellTags->
  "Info153746534491-7546211",ExpressionUUID->"86324e07-c415-448a-8546-\
5d8d5ee8359c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Special functions", \
"Subsection",ExpressionUUID->"8161cb60-2662-464e-bd05-1ed7918a050f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "lazyMapThread"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyTranspose"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyPartMap"}]}], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"966ecd04-15a3-4c9a-b904-32be5271d7a0"],

Cell[CellGroupData[{

Cell[BoxData["\<\"lazyMapThread[f, {lz1, lz2, ...}] is similar to MapThread, \
except all elements from the lazyLists are fed to the first slot of f as a \
regular List\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info163746534491-7546211",ExpressionUUID->"b95b4cdd-b44b-4ea9-af2f-\
b1d9db2fe6c4"],

Cell[BoxData["\<\"lazyTranspose[{lz1, lz2, ...}] creates a lazyList with \
tuples of elements from lz1, lz2, etc. \\nEquivalent to \
lazyMapThread[Identity, {lz1, lz2, ...}]\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info173746534491-7546211",ExpressionUUID->"384b6b1a-9e54-49e0-8115-\
23d2ee5262ba"],

Cell[BoxData["\<\"lazyPartMap[l, {i, j, k, ...}] is equivalent to Map[Part[l, \
{#}]&, {i, j, k, ...}] but faster\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info183746534491-7546211",ExpressionUUID->"738579a6-73d2-4bf0-97b2-\
e13dbca4fa5a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Implementation details and other functions", \
"Subsection",ExpressionUUID->"2afa4dd0-09a8-4f37-b66b-767769b7a1f0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", 
  "$lazyIterationLimit"}], "\[IndentingNewLine]", "$lazyIterationLimit"}], \
"Input",
 CellLabel->"In[19]:=",ExpressionUUID->"d8833260-c2e5-4791-808b-7f6f92e54cfe"],

Cell[BoxData["\<\"Iteration limit used for finding successive elements in a \
lazy list\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info193746534492-7546211",ExpressionUUID->"e0e3f965-f700-4c7f-8559-\
9063cedd259b"],

Cell[BoxData["\[Infinity]"], "Output",
 CellLabel->"Out[20]=",ExpressionUUID->"2850f1ac-8ee6-4eec-9cb5-d04f7a81a705"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "bulkExtractElementsUsingIndexList"}], "\[IndentingNewLine]", 
 RowBox[{"?", "rangeTuplesAtPositions"}]}], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"cb70b7ac-11e0-4c24-9c10-811140f4999d"],

Cell[CellGroupData[{

Cell[BoxData["\<\"bulkExtractElementsUsingIndexList[lists, indices] converts \
elements from Tuples[Range /@ Length /@ lists] into elements from \
Tuples[lists]\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info213746534492-7546211",ExpressionUUID->"5651d735-2ef9-445e-a7ac-\
7d3ccf02664a"],

Cell[BoxData["\<\"\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info223746534492-7546211",ExpressionUUID->"184bbfcb-4ca3-42f9-88f5-\
b68947df24c8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Usage examples", \
"Section",ExpressionUUID->"79b459a2-40b2-4d85-ad2a-91269059057f"],

Cell[CellGroupData[{

Cell["Creating lazyLists and extracting elements from them", \
"Subsection",ExpressionUUID->"9cdf5a73-58b8-496b-a090-8a5dfff3450d"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"lazyRange", "[", 
     RowBox[{"start", ",", " ", "step"}], "]"}],
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "995a7677-cbcb-4c20-957f-a733d117f3e4"],
 " are the basic constructor for equally-space infinite lazyLists. Both \
arguments of lazyRange default to 1 when omitted. Thus,",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"lazyRange", "[", "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a8408cdc-c5a0-4bfa-8e2e-8c21d5eb651f"],
 " represents the positive integers. Successive integers can be extracted by \
repeatedly applying ",
 StyleBox["Last",
  FontWeight->"Bold"],
 " or ",
 StyleBox["Rest",
  FontWeight->"Bold"],
 ":"
}], "Text",ExpressionUUID->"1a112eb4-0971-4789-9386-f0b04d8aa1e0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lazyRange", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Last", "@", "%"}], "\[IndentingNewLine]", 
 RowBox[{"Rest", "@", "%"}]}], "Input",
 CellLabel->"In[23]:=",ExpressionUUID->"dab87c82-c933-47c1-b843-edd59f2e403c"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"1", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"1", "+", "1"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[23]=",ExpressionUUID->"17b8faf4-7bb9-49b5-8031-ac4fc109f965"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"2", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"1", "+", "2"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[24]=",ExpressionUUID->"97fd89d1-11ce-4dfc-bc81-05a3c86c373d"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"3", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"1", "+", "3"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[25]=",ExpressionUUID->"acf0d2d9-80a9-438a-9b8b-9c54ce6dffaa"]
}, Open  ]],

Cell[TextData[{
 StyleBox["lazyPowerRange[start, r]",
  FontWeight->"Bold"],
 " similarly creates a range of powers. Both lazyRange and lazyPowerRange can \
be symbolic:"
}], "Text",ExpressionUUID->"d47e9905-2b75-4b30-8f46-e31f3b1be6a7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lazyRange", "[", 
  RowBox[{"start", ",", "step"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Last", "@", "%"}], "\[IndentingNewLine]", 
 RowBox[{"lazyPowerRange", "[", 
  RowBox[{"start", ",", "r"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Last", "@", "%"}]}], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"430bd9f9-0ffd-4088-bed6-c2b3221739b1"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"start", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"step", "+", "start"}], ",", "step"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[26]=",ExpressionUUID->"a709d56d-3899-42af-a611-a15c00c9316d"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"start", "+", "step"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"step", "+", 
      RowBox[{"(", 
       RowBox[{"start", "+", "step"}], ")"}]}], ",", "step"}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[27]=",ExpressionUUID->"6523bf5e-970a-4023-bc88-0eac92aa6a5a"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"start", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", " ", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"r", " ", "start"}], ",", "r"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[28]=",ExpressionUUID->"8c3a4558-ebb7-4dfa-835f-dfa77bfbf72c"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"r", " ", "start"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", " ", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"r", " ", 
      RowBox[{"(", 
       RowBox[{"r", " ", "start"}], ")"}]}], ",", "r"}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[29]=",ExpressionUUID->"75920f5f-b37c-4561-9142-d5d0b8c49baa"]
}, Open  ]],

Cell[TextData[{
 "Nesting Last is not very efficient. Instead, use special functionalities of \
",
 StyleBox["Take",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Part",
  FontWeight->"Bold"],
 " to continuously evaluate the tail of lazy list until the required elements \
have been found. "
}], "Text",ExpressionUUID->"c60618e2-1470-4fc2-98cd-8097bfc68e7d"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"Part", "[", 
     RowBox[{"lz", ",", " ", "n"}], "]"}],
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "530b8710-c51f-4480-95ea-a1943c15abd7"],
 " of a lazyList returns the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]],ExpressionUUID->
  "a2ee4c5a-3790-4c4f-b079-8c24b67948cc"],
 " element, whereas",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{" ", 
     RowBox[{"Part", "[", 
      RowBox[{"lz", ",", " ", 
       RowBox[{"{", "n", "}"}]}], "]"}]}],
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "621ebb6e-42a3-498a-992e-31a2370d61bf"],
 " returns a lazyList containing the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]],ExpressionUUID->
  "9e85a72e-cd2e-472d-b039-32d152c5d678"],
 " element and the tail of the lazyList. This allows you to keep extracting \
further elements from the returned lazyList without losing progress. The \
lazyList does not keep track of position for efficiency reasons. This is up \
to the user."
}], "Text",ExpressionUUID->"7f5f6d4d-7f2f-4fb4-958f-2fabd9c6b849"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", "]"}], ",", "4"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", "]"}], ",", 
   RowBox[{"{", "4", "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Last", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Rest", "[", "%%", "]"}]}], "Input",
 CellLabel->"In[30]:=",ExpressionUUID->"62f4563c-892f-4239-8057-70dc5511ffaf"],

Cell[BoxData["4"], "Output",
 CellLabel->"Out[30]=",ExpressionUUID->"9295751f-c96c-4e1d-ba43-84448f8df084"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"4", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"1", "+", "4"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[31]=",ExpressionUUID->"06c81d1f-59e8-4060-a39d-53fe1c1e8d4c"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"5", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"1", "+", "5"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[32]=",ExpressionUUID->"f6143cf2-ef14-4c34-aa83-d08eeeeb94a7"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"5", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"1", "+", "5"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[33]=",ExpressionUUID->"a8dadf85-f9d1-4cd0-b78e-95ea3890e699"]
}, Open  ]],

Cell[TextData[{
 "Multiple indices can be extracted in one go. In this case, the extracted \
elements will go in the first element of the returned lazyList while the tail \
will be left in the state of the highest visited index. ",
 StyleBox["Span",
  FontWeight->"Bold"],
 " is also supported for integers:"
}], "Text",ExpressionUUID->"b80e232f-0514-4341-9156-760672a0e40a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", " ", "10", ",", " ", "5"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", "]"}], ",", 
   RowBox[{"10", ";;", "2", ";;", 
    RowBox[{"-", "2"}]}]}], "]"}]}], "Input",
 CellLabel->"In[34]:=",ExpressionUUID->"34dac2ad-2f9f-4764-b2c2-1e8b2142915d"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "10", ",", "5"}], "}"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"10", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "10"}], ",", "1"}], "]"}]}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[34]=",ExpressionUUID->"2e16fa60-c2ed-4e51-b1ad-62f1ad3cfcc1"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "8", ",", "6", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"10", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "10"}], ",", "1"}], "]"}]}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[35]=",ExpressionUUID->"9a59f5b2-f27d-49d0-8613-b584a91be6c6"]
}, Open  ]],

Cell[TextData[{
 StyleBox["lazyPartMap",
  FontWeight->"Bold"],
 " extracts values at particular indices while also retaining the tails at \
those positions:"
}], "Text",ExpressionUUID->"e9468ffe-b246-46a6-82e3-cce5359f2e50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lazyPartMap", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", "]"}], ",", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "22", ",", "4"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"f1a4df16-3571-403e-9fa6-237293e18a55"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"lazyList", "[", 
    RowBox[{"2", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "2"}], ",", "1"}], "]"}]}], "]"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"6", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "6"}], ",", "1"}], "]"}]}], "]"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"10", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "10"}], ",", "1"}], "]"}]}], "]"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"14", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "14"}], ",", "1"}], "]"}]}], "]"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"18", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "18"}], ",", "1"}], "]"}]}], "]"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"22", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "22"}], ",", "1"}], "]"}]}], "]"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[36]=",ExpressionUUID->"ed2d2c32-87a6-4671-bf2f-667f4d851fa2"]
}, Open  ]],

Cell["\<\
Attempting to extract a part that doesn\[CloseCurlyQuote]t exist from a \
finite lazyList will yield a message and return $Failed:\
\>", "Text",ExpressionUUID->"3989a517-8b84-4212-9e72-43c697532a27"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lz", " ", "=", " ", 
   RowBox[{"lazyList", "[", 
    RowBox[{"Range", "[", "4", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"lz", "[", 
  RowBox[{"[", "5", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"lz", "[", 
  RowBox[{"[", 
   RowBox[{"{", "5", "}"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"lz", "[", 
  RowBox[{"[", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"lz", "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;", "5"}], "]"}], "]"}]}], "Input",
 CellLabel->"In[37]:=",ExpressionUUID->"32163113-6f5c-4fd9-8bf8-56f7acf65b56"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"5\\\"}]\\) of \\!\\(\\*RowBox[{\\\"lazyList\\\
\", \\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", \
RowBox[{\\\"lazyLists`Private`lazyFiniteList\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"\[LeftSkeleton]\\\", \\\"31\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"1\\\", \\\"+\\\", \\\"1\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}]\\) \
does not exist.\"",2,38,1,16512819851982701234,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"a67e2798-d520-423d-bfcf-211dc02925ea"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->"Out[38]=",ExpressionUUID->"7f994304-6f33-40ee-945a-d1c8d7212928"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"5\\\"}]\\) of \\!\\(\\*RowBox[{\\\"lazyList\\\
\", \\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", \
RowBox[{\\\"lazyLists`Private`lazyFiniteList\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"\[LeftSkeleton]\\\", \\\"31\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"1\\\", \\\"+\\\", \\\"1\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}]\\) \
does not exist.\"",2,39,2,16512819851982701234,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"411eff66-a0cc-4b11-8ede-1aa346ee8602"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->"Out[39]=",ExpressionUUID->"bae8ff60-2058-4cdf-a60a-a71628ba61ad"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"4\\\"}]\\) of \\!\\(\\*RowBox[{\\\"lazyList\\\
\", \\\"[\\\", RowBox[{\\\"2\\\", \\\",\\\", \
RowBox[{\\\"lazyLists`Private`lazyFiniteList\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"\[LeftSkeleton]\\\", \\\"31\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"+\\\", \\\"1\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}]\\) \
does not exist.\"",2,40,3,16512819851982701234,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"be4ec95b-4919-439d-a7cd-7599b4b48185"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->"Out[40]=",ExpressionUUID->"180693ab-4298-4831-9433-0c8bf5be57cc"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"5\\\"}]\\) of \\!\\(\\*RowBox[{\\\"lazyList\\\
\", \\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", \
RowBox[{\\\"lazyLists`Private`lazyFiniteList\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"\[LeftSkeleton]\\\", \\\"31\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"1\\\", \\\"+\\\", \\\"1\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}]\\) \
does not exist.\"",2,41,4,16512819851982701234,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"e2b4ecce-4b29-4aa7-9e37-e649f6f6b24c"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->"Out[41]=",ExpressionUUID->"ec12b595-8b5b-43b3-8aac-ca99df05b747"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Take",
  FontWeight->"Bold"],
 " of lazyList returns lazyList. The first element is a list of the extracted \
elements. The tail is a lazyList at the point where take stopped. Note that \
there will be an overlap of 1 if you continue extracting elements form the \
returned lazyList (this is necessary to avoid unnecessary evaluations of \
elements)."
}], "Text",ExpressionUUID->"66aa0271-c1d7-444e-bd61-b1bc2b426edf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"lazyRange", "[", "]"}], ",", "4"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"First", "[", "list", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Last", "[", "list", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"Last", "[", "list", "]"}], ",", "5"}], "]"}]}], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"0deb31ae-48a0-4c10-b1c5-60e740712aa2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellLabel->"Out[43]=",ExpressionUUID->"3b156604-bf27-4a5e-8e55-f6ae2f648cb1"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"4", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"1", "+", "4"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[44]=",ExpressionUUID->"2395902c-429e-4423-9210-8ff8d0f23ca7"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"8", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "8"}], ",", "1"}], "]"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[45]=",ExpressionUUID->"9d6d46fd-a5d4-4b5e-b268-e2e1041c6e50"]
}, Open  ]],

Cell["It is possible to specify a lower and upper index for Take:", \
"Text",ExpressionUUID->"8a0ddc07-8ca8-415e-9861-4912dc4f0514"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "10"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[46]:=",ExpressionUUID->"65961842-2921-4b5c-bbac-e02cfc7d40ba"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10"}], "}"}], 
   ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"10", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "10"}], ",", "1"}], "]"}]}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[46]=",ExpressionUUID->"baed2758-2a6d-41fb-8d08-84e056940695"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5"}], "}"}], 
   ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"10", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "10"}], ",", "1"}], "]"}]}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[47]=",ExpressionUUID->"56d8af88-0076-4861-b3af-041491f00d93"]
}, Open  ]],

Cell["\<\
Take will not issue a message if indices are requested beyond the length of \
the lazyList:\
\>", "Text",ExpressionUUID->"54f32590-2da2-49e5-b01e-8657a6c320f2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Take", "[", 
  RowBox[{"lz", ",", "5"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{"lz", ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{"lz", ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "10"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{"lz", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[48]:=",ExpressionUUID->"ab6d13e6-fbcc-488f-9ed1-1029e38d203f"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"lazyList", "[", "]"}]}], "]"}]], "Output",
 CellLabel->"Out[48]=",ExpressionUUID->"c5be5fde-1899-4698-93fe-8fcdd4ee7c5b"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"lazyList", "[", "]"}]}], "]"}]], "Output",
 CellLabel->"Out[49]=",ExpressionUUID->"18bfc0e0-1858-4d48-bf2e-67bbd62dce66"],

Cell[BoxData[
 RowBox[{"lazyList", "[", "]"}]], "Output",
 CellLabel->"Out[50]=",ExpressionUUID->"86f2bcd1-bdb2-44ec-a0af-dc0c69c577e5"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}], ",", 
   RowBox[{"lazyList", "[", "]"}]}], "]"}]], "Output",
 CellLabel->"Out[51]=",ExpressionUUID->"ba08f8ce-0aa1-4ba4-81a8-01cbb7e3ed5e"]
}, Open  ]],

Cell[TextData[{
 StyleBox["TakeWhile",
  FontWeight->"Bold"],
 " also works with lazyLists. Note that the tail of the returned lazyList \
contains the first element that didn\[CloseCurlyQuote]t pass the test:"
}], "Text",ExpressionUUID->"d9a560d3-261a-4f9c-bb6c-955eabdcb76c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TakeWhile", "[", 
  RowBox[{
   RowBox[{"lazyPowerRange", "[", 
    RowBox[{"2", ",", "2"}], "]"}], ",", 
   RowBox[{
    RowBox[{"#", "<", "100"}], "&"}]}], "]"}]], "Input",
 CellLabel->"In[52]:=",ExpressionUUID->"81c528c1-fbff-4d04-adb4-9a8335001936"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "8", ",", "16", ",", "32", ",", "64"}], "}"}],
    ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"128", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", " ", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"2", " ", "128"}], ",", "2"}], "]"}]}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[52]=",ExpressionUUID->"8e2473cc-0efc-4d5a-a6d5-2bffde451d59"]
}, Open  ]],

Cell["\<\
Normal lists can be converted into lazyLists by wrapping lazyList around \
them. The list is stored in a variable and is streamed element-by-element:\
\>", "Text",ExpressionUUID->"115e41b9-6140-442b-806c-1dc1bda77a77"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"lazyList", "[", 
     RowBox[{"Fibonacci", "[", 
      RowBox[{"Range", "[", "10", "]"}], "]"}], "]"}], ",", "5"}], 
   "]"}]}]], "Input",
 CellLabel->"In[53]:=",ExpressionUUID->"a71ae506-2558-4576-96a7-cd81d08eff10"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}]], "Output",
 CellLabel->"Out[53]=",ExpressionUUID->"300ac61f-fa24-4997-bcb7-c3c47d164ae6"]
}, Open  ]],

Cell["\<\
It is also possible to turn a symbol that refers to a list into a lazyList by \
wrapping Hold around it:\
\>", "Text",ExpressionUUID->"49cab4cf-9bc5-40f6-b882-1a4b1090df44"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Fibonacci", "[", 
    RowBox[{"Range", "[", "10", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"finiteLz", "=", 
  RowBox[{"lazyList", "[", 
   RowBox[{"Hold", "[", "list", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"finiteLz", ",", "5"}], "]"}]}]}], "Input",
 CellLabel->"In[54]:=",ExpressionUUID->"ddb15fbb-3cb6-4cd4-933f-c1f27036e5d5"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"1", ",", 
   RowBox[{"lazyLists`Private`lazyFiniteList", "[", 
    RowBox[{"list", ",", 
     RowBox[{"1", "+", "1"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[55]=",ExpressionUUID->"e17bc042-2518-4d3d-9e31-ddd1a4c7a54f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}]], "Output",
 CellLabel->"Out[56]=",ExpressionUUID->"9515876d-c3b6-45dd-8ff4-5ce4fe0f0485"]
}, Open  ]],

Cell[TextData[{
 StyleBox["lazyFinitePart",
  FontWeight->"Bold"],
 " and ",
 StyleBox["lazyFiniteTake",
  FontWeight->"Bold"],
 " can be used to extract parts from lazyLists directly from the underlying \
symbol without having to traverse the lazyList:"
}], "Text",ExpressionUUID->"faf5e77f-060d-427c-a054-f7015d144306"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lazyFinitePart", "[", 
   RowBox[{"finiteLz", ",", "4"}], "]"}], " ", "===", " ", 
  RowBox[{"Part", "[", 
   RowBox[{"list", ",", "4"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lazyFiniteTake", "[", 
   RowBox[{"finiteLz", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}]}], "]"}], "===", 
  RowBox[{"Take", "[", 
   RowBox[{"list", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}]}], "]"}]}]}], "Input",
 CellLabel->"In[57]:=",ExpressionUUID->"1e24ba46-7d8b-4e06-87a9-4207f4abd148"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[57]=",ExpressionUUID->"6e8d49d7-78f9-4dbc-94e0-a5e815b5b379"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[58]=",ExpressionUUID->"bfec0093-93cf-4452-bd95-20d7c58c5a06"]
}, Open  ]],

Cell[TextData[{
 StyleBox["lazySetState",
  FontWeight->"Bold"],
 " can be used to directly move a finite lazyList to a given index without \
traversing. Also supports going to the last index directly:"
}], "Text",ExpressionUUID->"804de8df-4c8c-44d9-9302-8e8e55b8935d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lazySetState", "[", 
  RowBox[{"finiteLz", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellLabel->"In[59]:=",ExpressionUUID->"823d9361-a12a-41f0-94a7-227f8178948c"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"55", ",", 
   RowBox[{"lazyLists`Private`lazyFiniteList", "[", 
    RowBox[{"list", ",", 
     RowBox[{"10", "+", "1"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[59]=",ExpressionUUID->"e82567ac-debf-42ba-956c-923a09036376"]
}, Open  ]],

Cell[TextData[{
 "lazyLists can be transposed with ",
 StyleBox["lazyTranspose",
  FontWeight->"Bold"],
 ":"
}], "Text",ExpressionUUID->"c76a374a-4a99-4e7e-89a6-b031331f12d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lazyTranspose", "[", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lazyRange", "[", "]"}], ",", 
       RowBox[{"lazyConstantArray", "[", "0", "]"}]}], "}"}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "5"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[60]:=",ExpressionUUID->"01271068-9a2f-4f9f-bdc4-c0b467f0c7b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[60]=",ExpressionUUID->"38661b7b-c661-4421-94ff-f6cd87db8bb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lazy generator", \
"Subsubsection",ExpressionUUID->"26898ac6-d54e-450a-a936-857ee5fc5b92"],

Cell[TextData[{
 StyleBox["lazyGenerator",
  FontWeight->"Bold"],
 " is used to generate lazyLists from a generating function in much the same \
way as Table. It has 5 arguments: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"lazyGenerator", "[", 
    RowBox[{
    "fun", ",", " ", "start", ",", " ", "min", ",", " ", "max", ",", " ", 
     "step"}], "]"}], TraditionalForm]],ExpressionUUID->
  "4d0fa8ac-3001-48d3-90e0-697b8ca3e5a3"]
}], "Text",ExpressionUUID->"091a7650-9a36-4c83-987b-e4b754a39857"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["fun", TraditionalForm]],ExpressionUUID->
  "0224669c-b117-4ae9-b79e-00a105d14d99"],
 " the generating function"
}], "Item",ExpressionUUID->"127b423b-e334-4122-8740-ad04296ed7c5"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["start", TraditionalForm]],ExpressionUUID->
  "03d24386-0c6c-4a65-8c91-4cb9f816d482"],
 " the starting value to apply the function to. Defaults to 1"
}], "Item",ExpressionUUID->"28bd2c1a-daa5-4650-a0b8-ee46a1046a75"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"min", ",", " ", "max"}], TraditionalForm]],ExpressionUUID->
  "7ef99663-e50a-454e-8161-f090c09e8f65"],
 " The minimum values fun can be applied to. Default to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "\[Infinity]"}], TraditionalForm]],ExpressionUUID->
  "7d85d512-abf4-4551-aa9e-950b8128004d"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"+", "\[Infinity]"}], TraditionalForm]],ExpressionUUID->
  "21231119-7098-4895-b137-49b3daa5ccb4"]
}], "Item",ExpressionUUID->"507dfb61-60fe-4375-94ae-bbda9b21f2cd"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["step", TraditionalForm]],ExpressionUUID->
  "dc5325ce-8947-4333-9383-014dd4cbe392"],
 " the step size with which to increase the iterator of the table after each \
step. Defaults to 1"
}], "Item",ExpressionUUID->"a64d6517-5c3f-4592-88c7-50f1c70777c8"]
}, Open  ]],

Cell["\<\
The simplest form of lazyGenerator just specifies the function:\
\>", "Text",ExpressionUUID->"bd0674b1-8f96-4da1-9da1-6a8c201faba7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"infiniteInBothDirections", " ", "=", " ", 
  RowBox[{"lazyGenerator", "[", "f", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"infiniteInBothDirections", ",", "5"}], "]"}]}]}], "Input",
 CellLabel->"In[61]:=",ExpressionUUID->"cdb0de3c-6d7d-45d4-b18d-c463f687a508"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"lazyLists`Private`twoSidedGenerator", "[", 
    RowBox[{"f", ",", 
     RowBox[{"1", "+", "1"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[61]=",ExpressionUUID->"2bc87537-7250-495d-aec7-2f55c996838f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}], ",", 
   RowBox[{"f", "[", "5", "]"}]}], "}"}]], "Output",
 CellLabel->"Out[62]=",ExpressionUUID->"d67df2c3-c7a7-4989-b60f-9442f49d7a86"]
}, Open  ]],

Cell["\<\
If the min and max limits are infinite, you can do symbolic steps:\
\>", "Text",ExpressionUUID->"2ee55deb-c936-404c-9dfc-eb155afb151a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"symbolicGenerator", " ", "=", " ", 
  RowBox[{"lazyGenerator", "[", 
   RowBox[{"f", ",", " ", "start", ",", " ", 
    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]", ",", "step"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"symbolicGenerator", ",", " ", "5"}], "]"}]}]}], "Input",
 CellLabel->"In[63]:=",ExpressionUUID->"1fa6793f-bf16-4356-b0a4-72b0956494dc"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"f", "[", "start", "]"}], ",", 
   RowBox[{"lazyLists`Private`twoSidedGenerator", "[", 
    RowBox[{"f", ",", 
     RowBox[{"start", "+", "step"}], ",", "step"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[63]=",ExpressionUUID->"21b0b1e0-3926-48fc-b8c9-5a44b6040aa2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "start", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"start", "+", "step"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"start", "+", 
     RowBox[{"2", " ", "step"}]}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"start", "+", 
     RowBox[{"3", " ", "step"}]}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"start", "+", 
     RowBox[{"4", " ", "step"}]}], "]"}]}], "}"}]], "Output",
 CellLabel->"Out[64]=",ExpressionUUID->"308fde85-82d0-458f-b037-b2d8af56a052"]
}, Open  ]],

Cell["\<\
If limits are specified, the start and step have to be numeric. Take will \
automatically stop when a limit is reached:\
\>", "Text",ExpressionUUID->"ec412910-8086-4f94-8383-07ef4488ff6c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lazyGenerator", "[", 
     RowBox[{"f", ",", " ", "2", ",", " ", "1", ",", "10", ",", "2"}], "]"}], 
    ",", "\[IndentingNewLine]", "50"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->"In[65]:=",ExpressionUUID->"5f275465-d56b-4871-b8e1-19eda807544d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}], ",", 
   RowBox[{"f", "[", "6", "]"}], ",", 
   RowBox[{"f", "[", "8", "]"}], ",", 
   RowBox[{"f", "[", "10", "]"}]}], "}"}]], "Output",
 CellLabel->"Out[65]=",ExpressionUUID->"c831416a-a146-4167-a424-f0af31bdcdea"]
}, Open  ]],

Cell[TextData[{
 StyleBox["lazySetState",
  FontWeight->"Bold"],
 " can be used with lazyGenerator lists. It override the current position of \
the generator and reset it to the given value. Notice that this means that \
this can create a completely different generator if it is set to a value the \
original would never visit. The step size and min/max values are retained:"
}], "Text",ExpressionUUID->"1e034299-8ca5-4d23-a766-3a7fb63544ce"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"l", " ", "=", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"lazyGenerator", "[", 
     RowBox[{"f", ",", " ", "2", ",", " ", "1", ",", "10", ",", "2"}], "]"}], 
    ",", "3"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"lazySetState", "[", 
    RowBox[{
     RowBox[{"Last", "[", "l", "]"}], ",", "3"}], "]"}], ",", 
   "\[IndentingNewLine]", "3"}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[66]:=",ExpressionUUID->"cd734a99-8091-4dc1-8e3e-b6f7adc74e54"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "2", "]"}], ",", 
     RowBox[{"f", "[", "4", "]"}], ",", 
     RowBox[{"f", "[", "6", "]"}]}], "}"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{
     RowBox[{"f", "[", "6", "]"}], ",", 
     RowBox[{"lazyLists`Private`finiteGenerator", "[", 
      RowBox[{"f", ",", 
       RowBox[{"6", "+", "2"}], ",", "1", ",", "10", ",", "2"}], "]"}]}], 
    "]"}]}], "]"}]], "Output",
 CellLabel->"Out[66]=",ExpressionUUID->"c8ed5bd9-f94a-42bf-86fc-1260d1db4491"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "3", "]"}], ",", 
     RowBox[{"f", "[", "5", "]"}], ",", 
     RowBox[{"f", "[", "7", "]"}]}], "}"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{
     RowBox[{"f", "[", "7", "]"}], ",", 
     RowBox[{"lazyLists`Private`finiteGenerator", "[", 
      RowBox[{"f", ",", 
       RowBox[{"7", "+", "2"}], ",", "1", ",", "10", ",", "2"}], "]"}]}], 
    "]"}]}], "]"}]], "Output",
 CellLabel->"Out[67]=",ExpressionUUID->"6bd1e3de-ba72-4c62-8a17-cb1452a401ed"]
}, Open  ]],

Cell["\<\
This also works with lazyRange, lazyPowerRange, and lazyNestList. \
lazySetState effectively re-creates these lists with a new starting value:\
\>", "Text",ExpressionUUID->"75e339ce-7d36-4821-a9c4-78a0c90eccd1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lazySetState", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", 
    RowBox[{"start", ",", " ", "step"}], "]"}], ",", "newStart"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"lazySetState", "[", 
  RowBox[{
   RowBox[{"lazyPowerRange", "[", 
    RowBox[{"start", ",", "r"}], "]"}], ",", "newStart"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"lazySetState", "[", 
  RowBox[{
   RowBox[{"lazyNestList", "[", 
    RowBox[{"f", ",", "start"}], "]"}], ",", "newStart"}], "]"}]}], "Input",
 CellLabel->"In[68]:=",ExpressionUUID->"49d0ed21-a0e9-422e-975e-ec265be2c6ac"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"newStart", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"step", "+", "newStart"}], ",", "step"}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[68]=",ExpressionUUID->"ae3438f7-1baa-424e-be43-16258bff1528"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"newStart", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", " ", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"r", " ", "newStart"}], ",", "r"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[69]=",ExpressionUUID->"6820799c-ef26-4279-861c-2cbbc9412c4b"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"newStart", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"f", "[", "#1", "]"}], ",", 
          RowBox[{"#2", "+", "1"}]}], "]"}]}], "]"}], "&"}], ")"}], "[", 
    RowBox[{
     RowBox[{"f", "[", "newStart", "]"}], ",", 
     RowBox[{"2", "+", "1"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[70]=",ExpressionUUID->"a098ee60-042a-4f15-8ecc-741de2c148ca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lazy Tuples", \
"Subsubsection",ExpressionUUID->"7a197ea5-ea97-4df5-882d-2ec92934d03b"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"lazyTuples", "[", 
     RowBox[{"{", 
      RowBox[{"list1", ",", " ", "list2", ",", " ", "..."}], "}"}], "]"}],
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "0a9c259e-ec44-4809-aff7-cfacdf98b639"],
 " generates a lazyList form of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{"list1", ",", " ", "list2", ",", " ", "..."}], "}"}], "]"}],
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b7d74634-6d98-4401-b345-6ccbd5062c08"],
 ". It is generated with a lazyGenerator, so ",
 StyleBox["lazySetState",
  FontWeight->"Bold"],
 " works with ",
 StyleBox["lazyTuples",
  FontWeight->"Bold"],
 ":"
}], "Text",ExpressionUUID->"be3b7eb7-42ab-4d0b-b67a-268bc608ec98"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lists", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "u", ",", " ", "v", ",", "w", ",", "x", ",", " ", "y", ",", " ", "z"}], 
      "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lzTup", " ", "=", " ", 
   RowBox[{"lazyTuples", "[", "lists", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"lzTup", ",", "10"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"Tuples", "[", "lists", "]"}], ",", "10"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"lazySetState", "[", 
  RowBox[{"lzTup", ",", "20"}], "]"}]}], "Input",
 CellLabel->"In[71]:=",ExpressionUUID->"5c822fe4-d3b7-4570-97dc-39b7f55775af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "z"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "x"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[73]=",ExpressionUUID->"67dcc6e3-afac-46df-8ff8-cf1613d30406"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "z"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "x"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[74]=",ExpressionUUID->"3e431923-7caf-462c-b6c5-56030cfb7211"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"b", ",", "2", ",", "v"}], "}"}], ",", 
   RowBox[{"lazyLists`Private`finiteGenerator", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Extract", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "v", ",", "w", ",", "x", ",", "y", ",", "z"}], 
            "}"}]}], "}"}], ",", 
         RowBox[{
         "lazyLists`Private`extractSpecFromIndexList", "[", "#1", "]"}]}], 
        "]"}], "&"}], "@*", 
      InterpretationBox[
       RowBox[{
        TagBox["CompiledFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                  Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", "_Integer", "}"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                  Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", "_Integer", "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "lazyLists`Private`n", "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}]}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}]}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"lazyLists`Private`n", ",", 
                    "lazyLists`Private`d"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"lazyLists`Private`c", "=", 
                    RowBox[{"lazyLists`Private`n", "-", "1"}]}], ",", 
                    "lazyLists`Private`q"}], "}"}], ",", 
                    RowBox[{"1", "+", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"lazyLists`Private`q", "=", 
                    RowBox[{"Quotient", "[", 
                    
                    RowBox[{"lazyLists`Private`c", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    RowBox[{"lazyLists`Private`c", "=", 
                    RowBox[{"Mod", "[", 
                    
                    RowBox[{"lazyLists`Private`c", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    "lazyLists`Private`q"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"lazyLists`Private`i", ",", 
                    "lazyLists`Private`d"}], "}"}]}], "]"}]}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{10, 11.3, 5596}, {
                    Blank[Integer], {
                    Blank[Integer], 1}}, {{2, 0, 0}, {2, 1, 0}, {2, 1, 
                    3}}, {{0, {2, 0, 8}}, {-1, {2, 0, 1}}, {1, {2, 0, 3}}}, {
                    0, 11, 0, 0, 
                    4}, {{12, 0, 1, 9}, {33, 0, 2}, {6, 8, 6}, {35, 2, 2, 
                    1}, {6, 8, 4}, {3, 6}, {37, 0, 4, 2, 7}, {41, 262, 2, 0, 
                    9, 2, 0, 7, 2, 0, 5}, {41, 261, 2, 0, 9, 2, 0, 7, 2, 0, 
                    10}, {6, 10, 9}, {36, 6, 5, 2, 1}, {4, 4, 2, -5}, {41, 
                    257, 2, 0, 3, 2, 1, 1, 2, 1, 3}, {1}}, 
                    Function[{lazyLists`Private`n, lazyLists`Private`d}, 
                    Module[{lazyLists`Private`c = lazyLists`Private`n - 1, 
                    lazyLists`Private`q}, 1 + 
                    Table[lazyLists`Private`q = 
                    Quotient[lazyLists`Private`c, lazyLists`Private`i]; 
                    lazyLists`Private`c = 
                    Mod[lazyLists`Private`c, lazyLists`Private`i]; 
                    lazyLists`Private`q, {
                    lazyLists`Private`i, lazyLists`Private`d}]], Listable], 
                    Evaluate], Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "[", 
                    RowBox[{"lazyLists`Private`n", ",", 
                    RowBox[{"{", 
                    RowBox[{"12", ",", "6", ",", "1"}], "}"}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       CompiledFunction[{10, 11.3, 7644}, {
         Blank[Integer]}, {{2, 0, 0}, {2, 1, 1}}, {{{12, 6, 1}, {2, 1, 0}}}, {
        0, 1, 0, 0, 2}, {{43, 
          CompiledFunction[{10, 11.3, 5596}, {
            Blank[Integer], {
             Blank[Integer], 1}}, {{2, 0, 0}, {2, 1, 0}, {2, 1, 
           3}}, {{0, {2, 0, 8}}, {-1, {2, 0, 1}}, {1, {2, 0, 3}}}, {0, 11, 0, 
           0, 4}, {{12, 0, 1, 9}, {33, 0, 2}, {6, 8, 6}, {35, 2, 2, 1}, {6, 8,
             4}, {3, 6}, {37, 0, 4, 2, 7}, {41, 262, 2, 0, 9, 2, 0, 7, 2, 0, 
            5}, {41, 261, 2, 0, 9, 2, 0, 7, 2, 0, 10}, {6, 10, 9}, {36, 6, 5, 
            2, 1}, {4, 4, 2, -5}, {41, 257, 2, 0, 3, 2, 1, 1, 2, 1, 3}, {1}}, 
           Function[{lazyLists`Private`n, lazyLists`Private`d}, 
            
            Module[{lazyLists`Private`c = lazyLists`Private`n - 1, 
              lazyLists`Private`q}, 1 + 
             Table[lazyLists`Private`q = 
                Quotient[lazyLists`Private`c, lazyLists`Private`i]; 
               lazyLists`Private`c = 
                Mod[lazyLists`Private`c, lazyLists`Private`i]; 
               lazyLists`Private`q, {
               lazyLists`Private`i, lazyLists`Private`d}]], Listable], 
           Evaluate], 2, 0, 0, 2, 1, 0, 2, 1, 1}, {1}}, 
        Function[{lazyLists`Private`n}, 
         CompiledFunction[{10, 11.3, 5596}, {
           Blank[Integer], {
            Blank[Integer], 1}}, {{2, 0, 0}, {2, 1, 0}, {2, 1, 
          3}}, {{0, {2, 0, 8}}, {-1, {2, 0, 1}}, {1, {2, 0, 3}}}, {0, 11, 0, 
          0, 4}, {{12, 0, 1, 9}, {33, 0, 2}, {6, 8, 6}, {35, 2, 2, 1}, {6, 8, 
           4}, {3, 6}, {37, 0, 4, 2, 7}, {41, 262, 2, 0, 9, 2, 0, 7, 2, 0, 
           5}, {41, 261, 2, 0, 9, 2, 0, 7, 2, 0, 10}, {6, 10, 9}, {36, 6, 5, 
           2, 1}, {4, 4, 2, -5}, {41, 257, 2, 0, 3, 2, 1, 1, 2, 1, 3}, {1}}, 
          Function[{lazyLists`Private`n, lazyLists`Private`d}, 
           
           Module[{lazyLists`Private`c = lazyLists`Private`n - 1, 
             lazyLists`Private`q}, 1 + 
            Table[lazyLists`Private`q = 
               Quotient[lazyLists`Private`c, lazyLists`Private`i]; 
              lazyLists`Private`c = 
               Mod[lazyLists`Private`c, lazyLists`Private`i]; 
              lazyLists`Private`q, {
              lazyLists`Private`i, lazyLists`Private`d}]], Listable], 
          Evaluate][lazyLists`Private`n, {12, 6, 1}], Listable], Evaluate],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}], ",", 
     RowBox[{"20", "+", "1"}], ",", "1", ",", "36", ",", "1"}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[75]=",ExpressionUUID->"0b4ed3b7-a3f3-47ca-a370-a5751dc3cf89"]
}, Open  ]],

Cell["\<\
lazyTuples works with held symbols, which is useful when dealing with large \
lists since this will prevent large amounts of data from being copied over \
and also prevents the full list from being displayed in the tail of the \
lazyList:\
\>", "Text",ExpressionUUID->"572d1fac-1428-4fd3-bf76-3511a3d4043c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"largeLists", " ", "=", " ", 
   RowBox[{"Range", "/@", 
    RowBox[{"{", 
     RowBox[{"50000", ",", "40000", ",", "60000", ",", "80000"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"lazyTuples", "[", "largeLists", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lazyTuples", "[", 
  RowBox[{"Hold", "[", "largeLists", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "10"}], "]"}]}]}], "Input",
 CellLabel->"In[76]:=",ExpressionUUID->"64d9a187-5a22-4ad8-aeb6-78eb11f9595a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"lazyList", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
           RowBox[{"lazyLists`Private`finiteGenerator", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Extract", "[", 
                RowBox[{
                 RowBox[{"{", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"], "}"}], ",", 
                 RowBox[{
                 "lazyLists`Private`extractSpecFromIndexList", "[", "#1", 
                  "]"}]}], "]"}], "&"}], "@*", 
              InterpretationBox[
               RowBox[{
                TagBox["CompiledFunction",
                 "SummaryHead"], "[", 
                
                DynamicModuleBox[{Typeset`open$$ = False, 
                 Typeset`embedState$$ = "Ready"}, 
                 TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", "_Integer", "}"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]), 
                    ImageSizeCache -> {45., {0., 9.}}]}, Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", "_Integer", "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "lazyLists`Private`n", "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]), 
                    ImageSizeCache -> {45., {0., 9.}}]}, Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}]}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}]}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"lazyLists`Private`n", ",", 
                    "lazyLists`Private`d"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"lazyLists`Private`c", "=", 
                    RowBox[{"lazyLists`Private`n", "-", "1"}]}], ",", 
                    "lazyLists`Private`q"}], "}"}], ",", 
                    RowBox[{"1", "+", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"lazyLists`Private`q", "=", 
                    RowBox[{"Quotient", "[", 
                    
                    RowBox[{"lazyLists`Private`c", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    RowBox[{"lazyLists`Private`c", "=", 
                    RowBox[{"Mod", "[", 
                    
                    RowBox[{"lazyLists`Private`c", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    "lazyLists`Private`q"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"lazyLists`Private`i", ",", 
                    "lazyLists`Private`d"}], "}"}]}], "]"}]}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{10, 11.3, 5596}, {
                    Blank[Integer], {
                    Blank[Integer], 1}}, {{2, 0, 0}, {2, 1, 0}, {2, 1, 
                    3}}, {{0, {2, 0, 8}}, {-1, {2, 0, 1}}, {1, {2, 0, 3}}}, {
                    0, 11, 0, 0, 4}, {{12, 0, 1, 9}, {33, 0, 2}, {6, 8, 6}, {
                    35, 2, 2, 1}, {6, 8, 4}, {3, 6}, {37, 0, 4, 2, 7}, {41, 
                    262, 2, 0, 9, 2, 0, 7, 2, 0, 5}, {41, 261, 2, 0, 9, 2, 0, 
                    7, 2, 0, 10}, {6, 10, 9}, {36, 6, 5, 2, 1}, {4, 4, 
                    2, -5}, {41, 257, 2, 0, 3, 2, 1, 1, 2, 1, 3}, {1}}, 
                    Function[{lazyLists`Private`n, lazyLists`Private`d}, 
                    
                    Module[{lazyLists`Private`c = lazyLists`Private`n - 1, 
                    lazyLists`Private`q}, 1 + 
                    Table[lazyLists`Private`q = 
                    Quotient[lazyLists`Private`c, lazyLists`Private`i]; 
                    lazyLists`Private`c = Mod[
                    lazyLists`Private`c, lazyLists`Private`i]; 
                    lazyLists`Private`q, {
                    lazyLists`Private`i, lazyLists`Private`d}]], Listable], 
                    Evaluate], Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "[", 
                    RowBox[{"lazyLists`Private`n", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"192000000000000", ",", "4800000000", ",", 
                    "80000", ",", "1"}], "}"}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                  "SummaryPanel"],
                 DynamicModuleValues:>{}], "]"}],
               CompiledFunction[{10, 11.3, 7644}, {
                 Blank[Integer]}, {{2, 0, 0}, {2, 1, 
                1}}, {{{192000000000000, 4800000000, 80000, 1}, {2, 1, 0}}}, {
                0, 1, 0, 0, 2}, {{43, 
                  CompiledFunction[{10, 11.3, 5596}, {
                    Blank[Integer], {
                    Blank[Integer], 1}}, {{2, 0, 0}, {2, 1, 0}, {2, 1, 
                   3}}, {{0, {2, 0, 8}}, {-1, {2, 0, 1}}, {1, {2, 0, 3}}}, {0,
                    11, 0, 0, 
                   4}, {{12, 0, 1, 9}, {33, 0, 2}, {6, 8, 6}, {35, 2, 2, 1}, {
                    6, 8, 4}, {3, 6}, {37, 0, 4, 2, 7}, {41, 262, 2, 0, 9, 2, 
                    0, 7, 2, 0, 5}, {41, 261, 2, 0, 9, 2, 0, 7, 2, 0, 10}, {6,
                     10, 9}, {36, 6, 5, 2, 1}, {4, 4, 2, -5}, {41, 257, 2, 0, 
                    3, 2, 1, 1, 2, 1, 3}, {1}}, 
                   Function[{lazyLists`Private`n, lazyLists`Private`d}, 
                    
                    Module[{
                    lazyLists`Private`c = lazyLists`Private`n - 1, 
                    lazyLists`Private`q}, 1 + 
                    Table[lazyLists`Private`q = 
                    Quotient[lazyLists`Private`c, lazyLists`Private`i]; 
                    lazyLists`Private`c = 
                    Mod[lazyLists`Private`c, lazyLists`Private`i]; 
                    lazyLists`Private`q, {
                    lazyLists`Private`i, lazyLists`Private`d}]], Listable], 
                   Evaluate], 2, 0, 0, 2, 1, 0, 2, 1, 1}, {1}}, 
                Function[{lazyLists`Private`n}, 
                 CompiledFunction[{10, 11.3, 5596}, {
                   Blank[Integer], {
                    Blank[Integer], 1}}, {{2, 0, 0}, {2, 1, 0}, {2, 1, 
                  3}}, {{0, {2, 0, 8}}, {-1, {2, 0, 1}}, {1, {2, 0, 3}}}, {0, 
                  11, 0, 0, 
                  4}, {{12, 0, 1, 9}, {33, 0, 2}, {6, 8, 6}, {35, 2, 2, 1}, {
                   6, 8, 4}, {3, 6}, {37, 0, 4, 2, 7}, {41, 262, 2, 0, 9, 2, 
                   0, 7, 2, 0, 5}, {41, 261, 2, 0, 9, 2, 0, 7, 2, 0, 10}, {6, 
                   10, 9}, {36, 6, 5, 2, 1}, {4, 4, 2, -5}, {41, 257, 2, 0, 3,
                    2, 1, 1, 2, 1, 3}, {1}}, 
                  Function[{lazyLists`Private`n, lazyLists`Private`d}, 
                   
                   Module[{
                    lazyLists`Private`c = lazyLists`Private`n - 1, 
                    lazyLists`Private`q}, 1 + 
                    Table[lazyLists`Private`q = 
                    Quotient[lazyLists`Private`c, lazyLists`Private`i]; 
                    lazyLists`Private`c = 
                    Mod[lazyLists`Private`c, lazyLists`Private`i]; 
                    lazyLists`Private`q, {
                    lazyLists`Private`i, lazyLists`Private`d}]], Listable], 
                  Evaluate][
                 lazyLists`Private`n, {192000000000000, 4800000000, 80000, 
                  1}], Listable], Evaluate],
               Editable->False,
               SelectWithContents->True,
               Selectable->False]}], ",", 
             RowBox[{"1", "+", "1"}], ",", "1", ",", "9600000000000000000", 
             ",", "1"}], "]"}]}], "]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{85., {4., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{72., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 16512819851982701234, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{84., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 16512819851982701234, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{63., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 16512819851982701234, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{107., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16512819851982701234 === $SessionID, 
   Out[77], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[77]=",ExpressionUUID->"add2b72b-68ec-4596-8f68-db69ef1201e3"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"lazyLists`Private`finiteGenerator", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Extract", "[", 
        RowBox[{"largeLists", ",", 
         RowBox[{
         "lazyLists`Private`extractSpecFromIndexList", "[", "#1", "]"}]}], 
        "]"}], "&"}], "@*", 
      InterpretationBox[
       RowBox[{
        TagBox["CompiledFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0},
                     {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                    0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                  Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", "_Integer", "}"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                  Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", "_Integer", "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "lazyLists`Private`n", "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}]}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}]}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"lazyLists`Private`n", ",", 
                    "lazyLists`Private`d"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"lazyLists`Private`c", "=", 
                    RowBox[{"lazyLists`Private`n", "-", "1"}]}], ",", 
                    "lazyLists`Private`q"}], "}"}], ",", 
                    RowBox[{"1", "+", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"lazyLists`Private`q", "=", 
                    RowBox[{"Quotient", "[", 
                    
                    RowBox[{"lazyLists`Private`c", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    RowBox[{"lazyLists`Private`c", "=", 
                    RowBox[{"Mod", "[", 
                    
                    RowBox[{"lazyLists`Private`c", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    "lazyLists`Private`q"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"lazyLists`Private`i", ",", 
                    "lazyLists`Private`d"}], "}"}]}], "]"}]}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{10, 11.3, 5596}, {
                    Blank[Integer], {
                    Blank[Integer], 1}}, {{2, 0, 0}, {2, 1, 0}, {2, 1, 
                    3}}, {{0, {2, 0, 8}}, {-1, {2, 0, 1}}, {1, {2, 0, 3}}}, {
                    0, 11, 0, 0, 
                    4}, {{12, 0, 1, 9}, {33, 0, 2}, {6, 8, 6}, {35, 2, 2, 
                    1}, {6, 8, 4}, {3, 6}, {37, 0, 4, 2, 7}, {41, 262, 2, 0, 
                    9, 2, 0, 7, 2, 0, 5}, {41, 261, 2, 0, 9, 2, 0, 7, 2, 0, 
                    10}, {6, 10, 9}, {36, 6, 5, 2, 1}, {4, 4, 2, -5}, {41, 
                    257, 2, 0, 3, 2, 1, 1, 2, 1, 3}, {1}}, 
                    Function[{lazyLists`Private`n, lazyLists`Private`d}, 
                    
                    Module[{lazyLists`Private`c = lazyLists`Private`n - 1, 
                    lazyLists`Private`q}, 1 + 
                    Table[lazyLists`Private`q = 
                    Quotient[lazyLists`Private`c, lazyLists`Private`i]; 
                    lazyLists`Private`c = 
                    Mod[lazyLists`Private`c, lazyLists`Private`i]; 
                    lazyLists`Private`q, {
                    lazyLists`Private`i, lazyLists`Private`d}]], Listable], 
                    Evaluate], Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "[", 
                    RowBox[{"lazyLists`Private`n", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"192000000000000", ",", "4800000000", ",", 
                    "80000", ",", "1"}], "}"}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       CompiledFunction[{10, 11.3, 7644}, {
         Blank[Integer]}, {{2, 0, 0}, {2, 1, 
        1}}, {{{192000000000000, 4800000000, 80000, 1}, {2, 1, 0}}}, {0, 1, 0,
         0, 2}, {{43, 
          CompiledFunction[{10, 11.3, 5596}, {
            Blank[Integer], {
             Blank[Integer], 1}}, {{2, 0, 0}, {2, 1, 0}, {2, 1, 
           3}}, {{0, {2, 0, 8}}, {-1, {2, 0, 1}}, {1, {2, 0, 3}}}, {0, 11, 0, 
           0, 4}, {{12, 0, 1, 9}, {33, 0, 2}, {6, 8, 6}, {35, 2, 2, 1}, {6, 8,
             4}, {3, 6}, {37, 0, 4, 2, 7}, {41, 262, 2, 0, 9, 2, 0, 7, 2, 0, 
            5}, {41, 261, 2, 0, 9, 2, 0, 7, 2, 0, 10}, {6, 10, 9}, {36, 6, 5, 
            2, 1}, {4, 4, 2, -5}, {41, 257, 2, 0, 3, 2, 1, 1, 2, 1, 3}, {1}}, 
           Function[{lazyLists`Private`n, lazyLists`Private`d}, 
            
            Module[{lazyLists`Private`c = lazyLists`Private`n - 1, 
              lazyLists`Private`q}, 1 + 
             Table[lazyLists`Private`q = 
                Quotient[lazyLists`Private`c, lazyLists`Private`i]; 
               lazyLists`Private`c = 
                Mod[lazyLists`Private`c, lazyLists`Private`i]; 
               lazyLists`Private`q, {
               lazyLists`Private`i, lazyLists`Private`d}]], Listable], 
           Evaluate], 2, 0, 0, 2, 1, 0, 2, 1, 1}, {1}}, 
        Function[{lazyLists`Private`n}, 
         CompiledFunction[{10, 11.3, 5596}, {
           Blank[Integer], {
            Blank[Integer], 1}}, {{2, 0, 0}, {2, 1, 0}, {2, 1, 
          3}}, {{0, {2, 0, 8}}, {-1, {2, 0, 1}}, {1, {2, 0, 3}}}, {0, 11, 0, 
          0, 4}, {{12, 0, 1, 9}, {33, 0, 2}, {6, 8, 6}, {35, 2, 2, 1}, {6, 8, 
           4}, {3, 6}, {37, 0, 4, 2, 7}, {41, 262, 2, 0, 9, 2, 0, 7, 2, 0, 
           5}, {41, 261, 2, 0, 9, 2, 0, 7, 2, 0, 10}, {6, 10, 9}, {36, 6, 5, 
           2, 1}, {4, 4, 2, -5}, {41, 257, 2, 0, 3, 2, 1, 1, 2, 1, 3}, {1}}, 
          Function[{lazyLists`Private`n, lazyLists`Private`d}, 
           
           Module[{lazyLists`Private`c = lazyLists`Private`n - 1, 
             lazyLists`Private`q}, 1 + 
            Table[lazyLists`Private`q = 
               Quotient[lazyLists`Private`c, lazyLists`Private`i]; 
              lazyLists`Private`c = 
               Mod[lazyLists`Private`c, lazyLists`Private`i]; 
              lazyLists`Private`q, {
              lazyLists`Private`i, lazyLists`Private`d}]], Listable], 
          Evaluate][
         lazyLists`Private`n, {192000000000000, 4800000000, 80000, 1}], 
         Listable], Evaluate],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}], ",", 
     RowBox[{"1", "+", "1"}], ",", "1", ",", "9600000000000000000", ",", 
     "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[78]=",ExpressionUUID->"0865c83a-2f02-4afa-931f-137905deb7c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[79]=",ExpressionUUID->"d57d20e5-b3f7-4401-9a39-ed14e6e0244e"]
}, Open  ]],

Cell["Performance is roughly equal:", \
"Text",ExpressionUUID->"6ad83d6f-b3eb-4d9b-8d0a-d4803fce9d2d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"lazyTuples", "[", "largeLists", "]"}], ",", "100000"}], "]"}], 
   ";"}], "//", "RepeatedTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"lazyTuples", "[", 
      RowBox[{"Hold", "[", "largeLists", "]"}], "]"}], ",", "100000"}], "]"}],
    ";"}], "//", "RepeatedTiming"}]}], "Input",
 CellLabel->"In[80]:=",ExpressionUUID->"7797c505-283e-44fe-8288-25de541eb115"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8721757059352446273`4.", ",", "Null"}], "}"}]], "Output",
 CellLabel->"Out[80]=",ExpressionUUID->"837f271d-dfed-46c5-9f56-2e2a3dff3ec8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8932737633392486831`3.", ",", "Null"}], "}"}]], "Output",
 CellLabel->"Out[81]=",ExpressionUUID->"926db7f7-1403-432a-8b07-dcd9a716203e"]
}, Open  ]],

Cell[TextData[{
 "Additionally, ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"lazyTuples", "[", 
     RowBox[{"{", 
      RowBox[{"int1", ",", " ", "int2", ",", "int3", ",", " ", "..."}], "}"}],
      "]"}],
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "4d1a323a-e9c4-466d-8d16-e3ee7cdb203a"],
 " generates the lazy form of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"Tuples", "[", 
     RowBox[{"Range", "/@", 
      RowBox[{"{", 
       RowBox[{"int1", ",", " ", "int2", ",", "int3", ",", " ", "..."}], 
       "}"}]}], "]"}],
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "721929f7-8144-4e39-ace1-4d839e9d7dc0"],
 ". This form is very handy, because the general case of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"lazyTuples", "[", 
     RowBox[{"{", 
      RowBox[{"list1", ",", " ", "list2", ",", " ", "..."}], "}"}], "]"}],
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "cbab4707-e095-4d05-8958-ac62e99f4141"],
 " can be easily reduced to this simpler form by substituting the integers \
with elements from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"list1", ",", " ", "list2", ",", " ", "..."}], "}"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e479e6ed-cd36-476f-9b15-d2a2f59aa3b6"]
}], "Text",ExpressionUUID->"af0b444f-eef9-4deb-a375-a8ce20bed78a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"integers", " ", "=", 
   RowBox[{"Length", "/@", "lists"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"integerLzTup", "=", 
  RowBox[{"lazyTuples", "[", "integers", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"indices", " ", "=", " ", 
  RowBox[{"First", "@", 
   RowBox[{"Take", "[", 
    RowBox[{"integerLzTup", ",", "10"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"Tuples", "[", 
    RowBox[{"Range", "/@", "integers"}], "]"}], ",", "10"}], "]"}]}], "Input",
 CellLabel->"In[82]:=",ExpressionUUID->"b2a2a167-b703-47ec-b403-e71deae5282a"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"lazyLists`Private`finiteGenerator", "[", 
    RowBox[{
     InterpretationBox[
      RowBox[{
       TagBox["CompiledFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Thickness[0.038461538461538464`], {
                   FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                 AspectRatio -> 1, ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                 Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", "_Integer", "}"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Thickness[0.038461538461538464`], {
                   FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                 AspectRatio -> 1, ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                 Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", "_Integer", "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "lazyLists`Private`n", "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}]}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}]}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"lazyLists`Private`n", ",", 
                    "lazyLists`Private`d"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"lazyLists`Private`c", "=", 
                    RowBox[{"lazyLists`Private`n", "-", "1"}]}], ",", 
                    "lazyLists`Private`q"}], "}"}], ",", 
                    RowBox[{"1", "+", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"lazyLists`Private`q", "=", 
                    RowBox[{"Quotient", "[", 
                    RowBox[{"lazyLists`Private`c", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    RowBox[{"lazyLists`Private`c", "=", 
                    RowBox[{"Mod", "[", 
                    
                    RowBox[{"lazyLists`Private`c", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    "lazyLists`Private`q"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"lazyLists`Private`i", ",", 
                    "lazyLists`Private`d"}], "}"}]}], "]"}]}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{10, 11.3, 5596}, {
                    Blank[Integer], {
                    Blank[Integer], 1}}, {{2, 0, 0}, {2, 1, 0}, {2, 1, 
                    3}}, {{0, {2, 0, 8}}, {-1, {2, 0, 1}}, {1, {2, 0, 3}}}, {
                    0, 11, 0, 0, 
                    4}, {{12, 0, 1, 9}, {33, 0, 2}, {6, 8, 6}, {35, 2, 2, 
                    1}, {6, 8, 4}, {3, 6}, {37, 0, 4, 2, 7}, {41, 262, 2, 0, 
                    9, 2, 0, 7, 2, 0, 5}, {41, 261, 2, 0, 9, 2, 0, 7, 2, 0, 
                    10}, {6, 10, 9}, {36, 6, 5, 2, 1}, {4, 4, 2, -5}, {41, 
                    257, 2, 0, 3, 2, 1, 1, 2, 1, 3}, {1}}, 
                    Function[{lazyLists`Private`n, lazyLists`Private`d}, 
                    
                    Module[{lazyLists`Private`c = lazyLists`Private`n - 1, 
                    lazyLists`Private`q}, 1 + 
                    Table[lazyLists`Private`q = 
                    Quotient[lazyLists`Private`c, lazyLists`Private`i]; 
                    lazyLists`Private`c = 
                    Mod[lazyLists`Private`c, lazyLists`Private`i]; 
                    lazyLists`Private`q, {
                    lazyLists`Private`i, lazyLists`Private`d}]], Listable], 
                    Evaluate], Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "[", 
                    RowBox[{"lazyLists`Private`n", ",", 
                    RowBox[{"{", 
                    RowBox[{"12", ",", "6", ",", "1"}], "}"}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      CompiledFunction[{10, 11.3, 7644}, {
        Blank[Integer]}, {{2, 0, 0}, {2, 1, 1}}, {{{12, 6, 1}, {2, 1, 0}}}, {
       0, 1, 0, 0, 2}, {{43, 
         CompiledFunction[{10, 11.3, 5596}, {
           Blank[Integer], {
            Blank[Integer], 1}}, {{2, 0, 0}, {2, 1, 0}, {2, 1, 
          3}}, {{0, {2, 0, 8}}, {-1, {2, 0, 1}}, {1, {2, 0, 3}}}, {0, 11, 0, 
          0, 4}, {{12, 0, 1, 9}, {33, 0, 2}, {6, 8, 6}, {35, 2, 2, 1}, {6, 8, 
           4}, {3, 6}, {37, 0, 4, 2, 7}, {41, 262, 2, 0, 9, 2, 0, 7, 2, 0, 
           5}, {41, 261, 2, 0, 9, 2, 0, 7, 2, 0, 10}, {6, 10, 9}, {36, 6, 5, 
           2, 1}, {4, 4, 2, -5}, {41, 257, 2, 0, 3, 2, 1, 1, 2, 1, 3}, {1}}, 
          Function[{lazyLists`Private`n, lazyLists`Private`d}, 
           
           Module[{lazyLists`Private`c = lazyLists`Private`n - 1, 
             lazyLists`Private`q}, 1 + 
            Table[lazyLists`Private`q = 
               Quotient[lazyLists`Private`c, lazyLists`Private`i]; 
              lazyLists`Private`c = 
               Mod[lazyLists`Private`c, lazyLists`Private`i]; 
              lazyLists`Private`q, {
              lazyLists`Private`i, lazyLists`Private`d}]], Listable], 
          Evaluate], 2, 0, 0, 2, 1, 0, 2, 1, 1}, {1}}, 
       Function[{lazyLists`Private`n}, 
        CompiledFunction[{10, 11.3, 5596}, {
          Blank[Integer], {
           Blank[Integer], 1}}, {{2, 0, 0}, {2, 1, 0}, {2, 1, 
         3}}, {{0, {2, 0, 8}}, {-1, {2, 0, 1}}, {1, {2, 0, 3}}}, {0, 11, 0, 0,
          4}, {{12, 0, 1, 9}, {33, 0, 2}, {6, 8, 6}, {35, 2, 2, 1}, {6, 8, 
          4}, {3, 6}, {37, 0, 4, 2, 7}, {41, 262, 2, 0, 9, 2, 0, 7, 2, 0, 
          5}, {41, 261, 2, 0, 9, 2, 0, 7, 2, 0, 10}, {6, 10, 9}, {36, 6, 5, 2,
           1}, {4, 4, 2, -5}, {41, 257, 2, 0, 3, 2, 1, 1, 2, 1, 3}, {1}}, 
         Function[{lazyLists`Private`n, lazyLists`Private`d}, 
          
          Module[{lazyLists`Private`c = lazyLists`Private`n - 1, 
            lazyLists`Private`q}, 1 + 
           Table[lazyLists`Private`q = 
              Quotient[lazyLists`Private`c, lazyLists`Private`i]; 
             lazyLists`Private`c = 
              Mod[lazyLists`Private`c, lazyLists`Private`i]; 
             lazyLists`Private`q, {
             lazyLists`Private`i, lazyLists`Private`d}]], Listable], 
         Evaluate][lazyLists`Private`n, {12, 6, 1}], Listable], Evaluate],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     RowBox[{"1", "+", "1"}], ",", "1", ",", "36", ",", "1"}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[83]=",ExpressionUUID->"9c70d868-93aa-4893-a809-990e60e1af30"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[84]=",ExpressionUUID->"907e2711-ea9f-486a-8e52-6f271818da6f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[85]=",ExpressionUUID->"0665bf9c-06f6-4461-b2fe-c5b7e87b1110"]
}, Open  ]],

Cell[TextData[{
 "Replacing the indices from ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"lazyTuples", "[", "integers", "]"}],
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d0c88d11-314f-421c-97d0-af85943f94e2"],
 " with elements from ",
 Cell[BoxData[
  FormBox["lists", TraditionalForm]],
  FormatType->"TraditionalForm",
  FontWeight->"Bold",ExpressionUUID->"9cbbab75-761e-4489-9d97-720899683120"],
 " can be done with ",
 StyleBox["bulkExtractElementsUsingIndexList",
  FontWeight->"Bold"],
 ", which uses ",
 StyleBox["Extract",
  FontWeight->"Bold"],
 ":"
}], "Text",ExpressionUUID->"4cff0ad7-883b-4e4a-aa83-d0bab0896d34"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"bulkExtractElementsUsingIndexList", "[", "\[IndentingNewLine]", 
  RowBox[{"lists", ",", "\[IndentingNewLine]", "indices"}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"Tuples", "[", "lists", "]"}], ",", "10"}], "]"}]}], "Input",
 CellLabel->"In[86]:=",ExpressionUUID->"30ab54c6-37c9-461d-a28a-d719e2850ac6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "z"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "x"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[86]=",ExpressionUUID->"2ff58aaf-9ca1-40de-8719-26b63c900ac3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "z"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "x"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[87]=",ExpressionUUID->"1abfb9d7-f5f9-4694-9370-1d536adf9b66"]
}, Open  ]],

Cell["This function also works with held symbols:", \
"Text",ExpressionUUID->"603e3c3d-5264-4b1d-8348-291899842c1a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bulkExtractElementsUsingIndexList", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Hold", "[", "lists", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Hold", "[", "indices", "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"In[88]:=",ExpressionUUID->"0945acd9-b6a3-4f88-acc3-75755590d6be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "z"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "x"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[88]=",ExpressionUUID->"1caf5520-33df-4309-9a33-3228b293de9e"]
}, Open  ]],

Cell["\<\
lazyTuples has options to specify the starting point in the list and the step \
size with which to traverse it:\
\>", "Text",ExpressionUUID->"3dfb3249-6b07-4b15-b052-1e556c742813"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Options", "[", "lazyTuples", "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"lazyTuples", "[", 
     RowBox[{"integers", ",", " ", 
      RowBox[{"\"\<Start\>\"", "\[Rule]", " ", "10"}], ",", " ", 
      RowBox[{"\"\<StepSize\>\"", "\[Rule]", " ", "2"}]}], "]"}], ",", "6"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"Tuples", "[", 
    RowBox[{"Range", "/@", "integers"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20", ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[89]:=",ExpressionUUID->"a018e5d0-7d7c-4b4d-ba6b-fda9b4773692"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"StepSize\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"Start\"\>", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellLabel->"Out[89]=",ExpressionUUID->"0ae160a5-3dfe-47ad-a55e-e6230b718a32"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[90]=",ExpressionUUID->"1bfe64ba-2e87-4454-839a-9b1c8766936b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[91]=",ExpressionUUID->"7b39b662-3aab-460f-ae08-26e5fd49a7a6"]
}, Open  ]],

Cell[TextData[{
 "The basis for lazyTuples is the function that generates the elements of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"lazyTuples", "[", "integers", "]"}],
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6f88da6e-fd5e-4edf-b7e3-8dd47465147c"],
 ". You can invoke it directly with ",
 StyleBox["rangeTuplesAtPositions",
  FontWeight->"Bold"],
 ", which returns a listable compiled function:"
}], "Text",ExpressionUUID->"45dd6e62-9a31-4e4f-9b7c-c6c204e476a4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tuplesGenerator", " ", "=", " ", 
  RowBox[{
  "rangeTuplesAtPositions", "[", "integers", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"randomPositions", " ", "=", " ", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"Times", "@@", "integers"}]}], "}"}], ",", "10"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"tuplesGenerator", "[", "randomPositions", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"Tuples", "[", 
    RowBox[{"Range", "/@", "integers"}], "]"}], ",", "randomPositions"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"%%", "\[Equal]", "%"}]}], "Input",
 CellLabel->"In[92]:=",ExpressionUUID->"2b0d041f-a811-4982-a9d5-1f40f27928db"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", "_Integer", "}"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                   LineBreakWithin -> False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", "_Integer", "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "lazyLists`Private`n", "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]), 
                    ImageSizeCache -> {45., {0., 9.}}]}, Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}]}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}]}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"lazyLists`Private`n", ",", 
                    "lazyLists`Private`d"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"lazyLists`Private`c", "=", 
                    RowBox[{"lazyLists`Private`n", "-", "1"}]}], ",", 
                    "lazyLists`Private`q"}], "}"}], ",", 
                    RowBox[{"1", "+", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"lazyLists`Private`q", "=", 
                    RowBox[{"Quotient", "[", 
                    
                    RowBox[{"lazyLists`Private`c", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    RowBox[{"lazyLists`Private`c", "=", 
                    RowBox[{"Mod", "[", 
                    
                    RowBox[{"lazyLists`Private`c", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    "lazyLists`Private`q"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"lazyLists`Private`i", ",", 
                    "lazyLists`Private`d"}], "}"}]}], "]"}]}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{10, 11.3, 5596}, {
                    Blank[Integer], {
                    Blank[Integer], 1}}, {{2, 0, 0}, {2, 1, 0}, {2, 1, 
                    3}}, {{0, {2, 0, 8}}, {-1, {2, 0, 1}}, {1, {2, 0, 3}}}, {
                    0, 11, 0, 0, 
                    4}, {{12, 0, 1, 9}, {33, 0, 2}, {6, 8, 6}, {35, 2, 2, 
                    1}, {6, 8, 4}, {3, 6}, {37, 0, 4, 2, 7}, {41, 262, 2, 0, 
                    9, 2, 0, 7, 2, 0, 5}, {41, 261, 2, 0, 9, 2, 0, 7, 2, 0, 
                    10}, {6, 10, 9}, {36, 6, 5, 2, 1}, {4, 4, 2, -5}, {41, 
                    257, 2, 0, 3, 2, 1, 1, 2, 1, 3}, {1}}, 
                    Function[{lazyLists`Private`n, lazyLists`Private`d}, 
                    
                    Module[{
                    lazyLists`Private`c = lazyLists`Private`n - 1, 
                    lazyLists`Private`q}, 1 + 
                    Table[lazyLists`Private`q = 
                    Quotient[lazyLists`Private`c, lazyLists`Private`i]; 
                    lazyLists`Private`c = 
                    Mod[lazyLists`Private`c, lazyLists`Private`i]; 
                    lazyLists`Private`q, {
                    lazyLists`Private`i, lazyLists`Private`d}]], Listable], 
                    Evaluate], Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "[", 
                    RowBox[{"lazyLists`Private`n", ",", 
                    RowBox[{"{", 
                    RowBox[{"12", ",", "6", ",", "1"}], "}"}]}], "]"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{10, 11.3, 7644}, {
    Blank[Integer]}, {{2, 0, 0}, {2, 1, 1}}, {{{12, 6, 1}, {2, 1, 0}}}, {0, 1,
    0, 0, 2}, {{43, 
     CompiledFunction[{10, 11.3, 5596}, {
       Blank[Integer], {
        Blank[Integer], 1}}, {{2, 0, 0}, {2, 1, 0}, {2, 1, 
      3}}, {{0, {2, 0, 8}}, {-1, {2, 0, 1}}, {1, {2, 0, 3}}}, {0, 11, 0, 0, 
      4}, {{12, 0, 1, 9}, {33, 0, 2}, {6, 8, 6}, {35, 2, 2, 1}, {6, 8, 4}, {3,
        6}, {37, 0, 4, 2, 7}, {41, 262, 2, 0, 9, 2, 0, 7, 2, 0, 5}, {41, 261, 
       2, 0, 9, 2, 0, 7, 2, 0, 10}, {6, 10, 9}, {36, 6, 5, 2, 1}, {4, 4, 
       2, -5}, {41, 257, 2, 0, 3, 2, 1, 1, 2, 1, 3}, {1}}, 
      Function[{lazyLists`Private`n, lazyLists`Private`d}, 
       Module[{
        lazyLists`Private`c = lazyLists`Private`n - 1, lazyLists`Private`q}, 
        1 + Table[
         lazyLists`Private`q = 
           Quotient[lazyLists`Private`c, lazyLists`Private`i]; 
          lazyLists`Private`c = Mod[lazyLists`Private`c, lazyLists`Private`i]; 
          lazyLists`Private`q, {lazyLists`Private`i, lazyLists`Private`d}]], 
       Listable], Evaluate], 2, 0, 0, 2, 1, 0, 2, 1, 1}, {1}}, 
   Function[{lazyLists`Private`n}, 
    CompiledFunction[{10, 11.3, 5596}, {
      Blank[Integer], {
       Blank[Integer], 1}}, {{2, 0, 0}, {2, 1, 0}, {2, 1, 
     3}}, {{0, {2, 0, 8}}, {-1, {2, 0, 1}}, {1, {2, 0, 3}}}, {0, 11, 0, 0, 
     4}, {{12, 0, 1, 9}, {33, 0, 2}, {6, 8, 6}, {35, 2, 2, 1}, {6, 8, 4}, {3, 
      6}, {37, 0, 4, 2, 7}, {41, 262, 2, 0, 9, 2, 0, 7, 2, 0, 5}, {41, 261, 2,
       0, 9, 2, 0, 7, 2, 0, 10}, {6, 10, 9}, {36, 6, 5, 2, 1}, {4, 4, 
      2, -5}, {41, 257, 2, 0, 3, 2, 1, 1, 2, 1, 3}, {1}}, 
     Function[{lazyLists`Private`n, lazyLists`Private`d}, 
      Module[{
       lazyLists`Private`c = lazyLists`Private`n - 1, lazyLists`Private`q}, 1 + 
       Table[lazyLists`Private`q = 
          Quotient[lazyLists`Private`c, lazyLists`Private`i]; 
         lazyLists`Private`c = Mod[lazyLists`Private`c, lazyLists`Private`i]; 
         lazyLists`Private`q, {lazyLists`Private`i, lazyLists`Private`d}]], 
      Listable], Evaluate][lazyLists`Private`n, {12, 6, 1}], Listable], 
   Evaluate],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[92]=",ExpressionUUID->"5e513f13-87d5-4d95-8681-ad1c18b1c347"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "25", ",", "13", ",", "36", ",", "16", ",", "14", ",", "16", ",", "36", ",",
    "33", ",", "1", ",", "23"}], "}"}]], "Output",
 CellLabel->"Out[93]=",ExpressionUUID->"60b9f368-d6ef-407f-ae30-040f83b2dd9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[94]=",ExpressionUUID->"de27143d-c6b0-43e8-9f3e-47468e3e9ba5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[95]=",ExpressionUUID->"c291dee5-6173-4b23-85a4-c5b3c9779b8f"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[96]=",ExpressionUUID->"2540c8b7-49df-4dfd-9aa3-b51f7eb3dabb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lazy file streams", \
"Subsubsection",ExpressionUUID->"6d9500cf-eaaf-4ac9-97d8-236f0b90d0fa"],

Cell["lazyLists can be used with InputStreams. First make a file:", \
"Text",ExpressionUUID->"f082c183-c495-4435-9420-7573f759251c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stmp", "=", 
   RowBox[{"OpenWrite", "[", "\"\<tmp\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{"Write", "[", 
  RowBox[{"stmp", ",", "a", ",", "b", ",", "c"}], "]"}], "\n", 
 RowBox[{"Write", "[", 
  RowBox[{"stmp", ",", "x"}], "]"}], "\n", 
 RowBox[{"Write", "[", 
  RowBox[{"stmp", ",", "\"\<Hello\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"stmp", ",", "\"\<Hello\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"stmp", ",", "\"\<Hello\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Close", "[", "stmp", "]"}]}], "Input",
 CellLabel->"In[97]:=",
 CellID->28621,ExpressionUUID->"56e7c7ce-37ef-4877-9931-7dd9f3a12e91"],

Cell[BoxData["\<\"tmp\"\>"], "Output",
 CellLabel->"Out[103]=",ExpressionUUID->"1101d537-142f-4725-9155-d7f77126c61f"]
}, Open  ]],

Cell["Open a reading stream and make a lazyList out of it:", \
"Text",ExpressionUUID->"a3290700-5172-4544-bd8e-a4ce7202ecbb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"stream", "=", 
      RowBox[{"OpenRead", "[", "\"\<tmp\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", "result"}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"result", "=", 
     RowBox[{"First", "@", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"lazyStream", "[", "stream", "]"}], ",", "3"}], "]"}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Close", "[", "stream", "]"}], ";", "\[IndentingNewLine]", 
    "result"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[104]:=",ExpressionUUID->"397a2c85-f736-4613-8c9b-d8a642960c89"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"abc", ",", "x", ",", "\<\"Hello\"\>"}], "}"}]], "Output",
 CellLabel->"Out[104]=",ExpressionUUID->"b3385b03-2510-4f20-a8ae-d0f8d9e5710f"]
}, Open  ]],

Cell["\<\
The stream will cut out automatically when it reaches the end of the file:\
\>", "Text",ExpressionUUID->"57ec74de-bf80-4038-9fb8-21b16a056923"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"stream", "=", 
      RowBox[{"OpenRead", "[", "\"\<tmp\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", "result"}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"result", "=", 
     RowBox[{"First", "@", 
      RowBox[{"TakeWhile", "[", 
       RowBox[{
        RowBox[{"lazyStream", "[", "stream", "]"}], ",", 
        RowBox[{"True", "&"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Close", "[", "stream", "]"}], ";", "\[IndentingNewLine]", 
    "result"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[105]:=",ExpressionUUID->"71fdd96b-ab00-400c-a4be-632c2ee366b4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "abc", ",", "x", ",", "\<\"Hello\"\>", ",", "\<\"Hello\"\>", 
   ",", "\<\"Hello\"\>", ",", "EndOfFile"}], "}"}]], "Output",
 CellLabel->"Out[105]=",ExpressionUUID->"9a30499d-0ef1-48e4-a2d0-0119fc063216"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Plus",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Times",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Power",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Divide",
  FontWeight->"Bold"],
 ", and ",
 StyleBox["Subtract ",
  FontWeight->"Bold"],
 "thread over lazyLists, though these functionalities are far less efficient \
than for ordinary lists and should probably be avoided if the same can be \
achieved with FoldList or Map"
}], "Text",ExpressionUUID->"d3f5e510-6511-42f7-bf7f-18d13a7c0060"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"First", " ", "@", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"lazyRange", "[", "]"}], "+", 
     RowBox[{"lazyRange", "[", "2", "]"}]}], ",", "5"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", " ", "@", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"2", "*", " ", 
      RowBox[{"lazyRange", "[", "]"}]}], "+", 
     RowBox[{"3", " ", 
      RowBox[{"lazyRange", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}]}], ",", "5"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", " ", "@", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"lazyRange", "[", "]"}], "^", 
     RowBox[{"lazyRange", "[", "]"}]}], ",", "5"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", " ", "@", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"Divide", "[", 
     RowBox[{"1", ",", 
      RowBox[{"lazyRange", "[", 
       RowBox[{"2", ",", "2"}], "]"}]}], "]"}], ",", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[106]:=",ExpressionUUID->"431c46dd-1989-4038-a8a6-287ac92d6e53"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "5", ",", "7", ",", "9", ",", "11"}], "}"}]], "Output",
 CellLabel->
  "Out[106]=",ExpressionUUID->"98a864ed-2700-4ae4-b716-2cb542f2d2af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "13", ",", "21", ",", "29", ",", "37"}], "}"}]], "Output",
 CellLabel->
  "Out[107]=",ExpressionUUID->"83c93f96-98d4-45db-84a1-d6a236af5723"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "27", ",", "256", ",", "3125"}], 
  "}"}]], "Output",
 CellLabel->
  "Out[108]=",ExpressionUUID->"f21e191d-3ece-4b1e-bb89-9aef4ef07711"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], ",", 
   FractionBox["1", "4"], ",", 
   FractionBox["1", "6"], ",", 
   FractionBox["1", "8"], ",", 
   FractionBox["1", "10"]}], "}"}]], "Output",
 CellLabel->"Out[109]=",ExpressionUUID->"48159444-3d5f-4d10-89d7-ad3febaccfbc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["lazyList operators", \
"Subsection",ExpressionUUID->"314c8f5e-1a86-4e86-9bd1-68842761416f"],

Cell[TextData[{
 StyleBox["Map",
  FontWeight->"Bold"],
 ", ",
 StyleBox["MapIndexed",
  FontWeight->"Bold"],
 ", ",
 StyleBox["FoldList",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Cases",
  FontWeight->"Bold"],
 ",",
 StyleBox[" Pick",
  FontWeight->"Bold"],
 ",",
 StyleBox[" ",
  FontWeight->"Bold"],
 "and ",
 StyleBox["Select",
  FontWeight->"Bold"],
 " work with lazyLists and return lazyLists. There is also ",
 StyleBox["lazyMapThread",
  FontWeight->"Bold"],
 ", which functions similar to MapThread. All of these functions can be \
combined together to generate more complex lazyLists."
}], "Text",ExpressionUUID->"2db4b7f0-d54f-42c4-8598-19597a08299a"],

Cell[CellGroupData[{

Cell["Map", \
"Subsubsection",ExpressionUUID->"25ea5f2b-c1e7-4656-9115-8c0a9c24f192"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Map", "[", 
  RowBox[{"Sqrt", ",", 
   RowBox[{"lazyRange", "[", 
    RowBox[{"0", ",", "2"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[110]:=",ExpressionUUID->"db26052a-0c7d-4de0-99a3-0b0a708b07d2"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"0", ",", 
   RowBox[{"Sqrt", "/@", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"lazyList", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"#0", "[", 
          RowBox[{
           RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
      ")"}], "[", 
     RowBox[{
      RowBox[{"2", "+", "0"}], ",", "2"}], "]"}]}]}], "]"}]], "Output",
 CellLabel->
  "Out[110]=",ExpressionUUID->"12499a47-86bc-4e72-b972-a18a020de5bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   SqrtBox["2"], ",", "2", ",", 
   SqrtBox["6"], ",", 
   RowBox[{"2", " ", 
    SqrtBox["2"]}]}], "}"}]], "Output",
 CellLabel->"Out[111]=",ExpressionUUID->"ed42838f-9634-48d6-b7f4-c978be38dfd6"]
}, Open  ]],

Cell["\<\
Mapping over a Map or generator will reduce to a single Map (or generator) of \
the composed functions:\
\>", "Text",ExpressionUUID->"e52b1dec-4abe-4156-8fd4-3878659a757e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Sqrt", "/@", 
  RowBox[{"Exp", "/@", 
   RowBox[{"Sin", "/@", 
    RowBox[{"lazyRange", "[", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Sqrt", "/@", 
  RowBox[{"Exp", "/@", 
   RowBox[{"lazyGenerator", "[", "Sin", "]"}]}]}]}], "Input",
 CellLabel->
  "In[112]:=",ExpressionUUID->"ecb21116-e6c8-44f8-9611-594b52bd7e50"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"Sin", "[", "1", "]"}], "2"]], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Sqrt", "@*", "Exp", "@*", "Sin"}], ")"}], "/@", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"lazyList", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"#0", "[", 
          RowBox[{
           RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
      ")"}], "[", 
     RowBox[{
      RowBox[{"1", "+", "1"}], ",", "1"}], "]"}]}]}], "]"}]], "Output",
 CellLabel->
  "Out[112]=",ExpressionUUID->"c19b37f3-640f-414b-9e87-bc5e2e55e6bf"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"Sin", "[", "1", "]"}], "2"]], ",", 
   RowBox[{"lazyLists`Private`twoSidedGenerator", "[", 
    RowBox[{
     RowBox[{"Sqrt", "@*", "Exp", "@*", "Sin"}], ",", 
     RowBox[{"1", "+", "1"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[113]=",ExpressionUUID->"68fa4ba5-7ef8-4340-a559-bf412681fc49"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fold", \
"Subsubsection",ExpressionUUID->"b293c8ba-17ea-40d2-9a5b-0d024f5a61e0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FoldList", "[", 
  RowBox[{"Plus", ",", "x0", ",", 
   RowBox[{"lazyRange", "[", 
    RowBox[{"n", ",", "m"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[114]:=",ExpressionUUID->"88d3c946-e148-4f02-8892-b1be9959da90"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"x0", ",", 
   RowBox[{"FoldList", "[", 
    RowBox[{"Plus", ",", 
     RowBox[{"x0", "+", "n"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"m", "+", "n"}], ",", "m"}], "]"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[114]=",ExpressionUUID->"339ebee5-d49d-4b69-987c-c70940a46fa8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x0", ",", 
   RowBox[{"n", "+", "x0"}], ",", 
   RowBox[{"m", "+", 
    RowBox[{"2", " ", "n"}], "+", "x0"}], ",", 
   RowBox[{
    RowBox[{"3", " ", "m"}], "+", 
    RowBox[{"3", " ", "n"}], "+", "x0"}], ",", 
   RowBox[{
    RowBox[{"6", " ", "m"}], "+", 
    RowBox[{"4", " ", "n"}], "+", "x0"}]}], "}"}]], "Output",
 CellLabel->"Out[115]=",ExpressionUUID->"d3cbe349-b705-4ebb-b4cc-5e93f26db8ba"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cases", \
"Subsubsection",ExpressionUUID->"3c7f4e74-23d1-40b0-ba20-1134f3f1a203"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", 
    RowBox[{"0", ",", 
     RowBox[{"2", "/", "3"}]}], "]"}], ",", "_Integer"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[116]:=",ExpressionUUID->"b0b0dea7-1808-4672-a86a-d9ce4333d960"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"0", ",", 
   RowBox[{"lazyLists`Private`case$21574", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"lazyList", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"#0", "[", 
          RowBox[{
           RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
      ")"}], "[", 
     RowBox[{
      RowBox[{
       FractionBox["2", "3"], "+", "0"}], ",", 
      FractionBox["2", "3"]}], "]"}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[116]=",ExpressionUUID->"e16c550a-67df-4374-a4f3-fab50c434505"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "2", ",", "4", ",", "6", ",", "8"}], "}"}]], "Output",
 CellLabel->"Out[117]=",ExpressionUUID->"e1b22e95-74e8-4252-9c30-0e7bed95069c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pick", \
"Subsubsection",ExpressionUUID->"f3a06a45-4dfb-4c77-a330-74be0c8e9361"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Pick", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", 
    RowBox[{"0", ",", "2"}], "]"}], ",", 
   RowBox[{"lazyRange", "[", 
    RowBox[{"0", ",", 
     RowBox[{"2", "/", "3"}]}], "]"}], ",", "_Integer"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[118]:=",ExpressionUUID->"02767e8a-5bbd-4578-a783-6b1ca449f3b0"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"0", ",", 
   RowBox[{"lazyLists`Private`pick$21575", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"2", "+", "0"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{
        FractionBox["2", "3"], "+", "0"}], ",", 
       FractionBox["2", "3"]}], "]"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[118]=",ExpressionUUID->"04cbeb9e-4176-4f6f-8a04-ac3db541911b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "6", ",", "12", ",", "18", ",", "24"}], "}"}]], "Output",
 CellLabel->"Out[119]=",ExpressionUUID->"63ebcb4e-c25f-4f6d-ba48-3445108c536d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select", \
"Subsubsection",ExpressionUUID->"67410976-9bef-4063-994a-da7ffc8607aa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", "]"}], ",", "OddQ"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[120]:=",ExpressionUUID->"f7cc65d1-b623-4858-860e-fb8bda6906cf"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"1", ",", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "1"}], ",", "1"}], "]"}], ",", "OddQ"}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->
  "Out[120]=",ExpressionUUID->"42c3c222-046c-4cce-abd2-60a45d5a7c86"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "7", ",", "9"}], "}"}]], "Output",
 CellLabel->"Out[121]=",ExpressionUUID->"f4be84e1-de1d-400a-9656-f25035bc1b9c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MapIndexed", \
"Subsubsection",ExpressionUUID->"165f8426-7fdc-4dd2-879f-7c449ccd6ae4"],

Cell[TextData[{
 StyleBox["MapIndexed",
  FontWeight->"Bold"],
 " allows you to map a function of 2 arguments over a lazyList. The 2nd \
argument is an integer that keeps track of the position in the list. Note \
that this is slightly different from the way MapIndexed works normally, which \
supplies a list containing the index to the second argument. "
}], "Text",ExpressionUUID->"46c8a02f-7fcf-4bfc-ab29-1b9988a542db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MapIndexed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
      RowBox[{"lazyRange", "[", 
       RowBox[{"2", ",", "2"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
    "5"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[122]:=",ExpressionUUID->"ab76f983-28b6-43cf-9633-09f130a5a988"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[122]=",ExpressionUUID->"74f54864-59fb-487e-be6e-5ec0b419f8d3"]
}, Open  ]],

Cell["\<\
MapIndexed has a third argument to specify the starting position. This is \
useful when passing a lazyList which has already been partially evaluated.\
\>", "Text",ExpressionUUID->"a1d52835-fdc6-4c94-8c49-8996fd82e507"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MapIndexed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
      RowBox[{"lazyRange", "[", "]"}], ",", "20"}], "]"}], ",", 
    "\[IndentingNewLine]", "5"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[123]:=",ExpressionUUID->"fc210aed-ccdd-4241-b891-65b6433f88ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "24"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[123]=",ExpressionUUID->"34275a2f-bee8-46f6-97ea-25c5d5de3dd4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["lazyMapThread", \
"Subsubsection",ExpressionUUID->"6527aab7-0b41-4f41-8386-669ecaa71c8b"],

Cell[TextData[{
 StyleBox["lazyMapThread",
  FontWeight->"Bold"],
 " is functionally similar to MapThread, except all arguments are fed as a \
List into the first slot of the mapped function:"
}], "Text",ExpressionUUID->"edc0cb50-690c-4cee-b084-17a3472acd11"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lazyMapThread", "[", 
     RowBox[{"f", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"lazyRange", "[", "]"}], ",", 
        RowBox[{"lazyRange", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", "5"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[124]:=",ExpressionUUID->"2f643a7b-e0c1-44f8-bfc1-340a161a0d8a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "6"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"4", ",", "8"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"5", ",", "10"}], "}"}], "]"}]}], "}"}]], "Output",
 CellLabel->"Out[124]=",ExpressionUUID->"6cd61f10-e273-44cd-8e85-f792874926a6"]
}, Open  ]],

Cell["Compare with regular MapThread:", \
"Text",ExpressionUUID->"c06c056b-c716-4d08-82f9-cdd01019726f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Range", "[", "5", "]"}], ",", 
     RowBox[{"2", 
      RowBox[{"Range", "[", "5", "]"}]}]}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[125]:=",ExpressionUUID->"3bbfeee5-cbb7-4e4d-8186-0d37f0b22777"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"2", ",", "4"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"3", ",", "6"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"4", ",", "8"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"5", ",", "10"}], "]"}]}], "}"}]], "Output",
 CellLabel->"Out[125]=",ExpressionUUID->"1038de76-8ac2-4df7-8557-94cb60e1e00f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Caveats", \
"Subsection",ExpressionUUID->"913456ae-86bc-474d-90bb-1fe719afec8e"],

Cell["\<\
When defining your own lazyLists, make sure the last part of the list does \
not evaluate to itself. Take etc. will not work correctly on such lists and \
stop iterating prematurely:\
\>", "Text",ExpressionUUID->"232911ec-716c-44a2-a324-124b95f3af23"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"badExample", " ", "=", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"lazyList", "[", 
     RowBox[{"1", ",", 
      RowBox[{"#0", "[", "]"}]}], "]"}], "]"}], "[", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"badExample", "===", 
  RowBox[{"Last", "[", "badExample", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", " ", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"badExample", ",", "20"}], "]"}]}]}], "Input",
 CellLabel->
  "In[126]:=",ExpressionUUID->"16b8e012-7427-4406-b801-d4e7e34f299e"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"1", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"1", ",", 
        RowBox[{"#0", "[", "]"}]}], "]"}], "&"}], ")"}], "[", "]"}]}], 
  "]"}]], "Output",
 CellLabel->
  "Out[126]=",ExpressionUUID->"5abf62ab-a2e1-4e23-9902-6dbf94a5679e"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[127]=",ExpressionUUID->"94010a9b-cd2c-4a95-8146-d378b6e0c2f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[128]=",ExpressionUUID->"94706972-d654-48ef-b1b3-53ee8b601a48"]
}, Open  ]],

Cell["\<\
Instead, you can add an iterator that increases with each evaluation. This \
iterator can also be used to keep track of the position in the lazy list:\
\>", "Text",ExpressionUUID->"24b81520-5eb3-4541-b793-4c68766f4c01"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"example", " ", "=", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"lazyList", "[", 
     RowBox[{"1", ",", 
      RowBox[{"#0", "[", 
       RowBox[{"#1", "+", "1"}], "]"}]}], "]"}], "]"}], "[", "1", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"example", "===", 
  RowBox[{"Last", "[", "example", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{"example", ",", "20"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"position", "=", 
  RowBox[{"Replace", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Last", "@", "%"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"_", ",", 
        RowBox[{
         RowBox[{"Function", "[", "__", "]"}], "[", "i_", "]"}]}], "]"}], 
      "\[RuleDelayed]", "i"}], "\[IndentingNewLine]", "}"}]}], 
   "]"}]}]}], "Input",
 CellLabel->
  "In[129]:=",ExpressionUUID->"44069107-bcb5-4d00-85bc-c9773bf4979b"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"1", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{"#1", "+", "1"}], "]"}]}], "]"}], "&"}], ")"}], "[", 
    RowBox[{"1", "+", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[129]=",ExpressionUUID->"6a2a62a3-99fc-42e1-a878-dc831739affc"],

Cell[BoxData["False"], "Output",
 CellLabel->
  "Out[130]=",ExpressionUUID->"b6eec8c0-9621-4d38-be71-9eb4a1678ad1"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"1", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{"#1", "+", "1"}], "]"}]}], "]"}], "&"}], ")"}], "[", 
      RowBox[{"20", "+", "1"}], "]"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[131]=",ExpressionUUID->"b1507ee0-5b78-408e-ba17-5913b34655a6"],

Cell[BoxData["21"], "Output",
 CellLabel->"Out[132]=",ExpressionUUID->"7b7dfe60-57dd-4d3b-a11b-e1fb47284fe5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{983, 839},
WindowMargins->{{Automatic, 377}, {Automatic, 40}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
ShowGroupOpener->True,
TrackCellChangeTimes->False,
Magnification:>1.3 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]

