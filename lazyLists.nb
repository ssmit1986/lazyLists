Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"$HistoryLength", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"\"\<lazyLists`*\>\"", ",", "\"\<lazyLists`Private`*\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "lazyLists`"}]}], "Input",
 CellLabel->"In[27]:=",ExpressionUUID->"2d6a87cf-3ef1-4832-b8b9-0995d6d1b646"],

Cell[CellGroupData[{

Cell["Usage messages for lazy list constructors and other symbols", \
"Section",ExpressionUUID->"ec4cc4aa-b2ff-4f5e-9ddc-c3f207f96586"],

Cell[CellGroupData[{

Cell["Constructors", \
"Subsection",ExpressionUUID->"270e0702-e686-4de6-bae4-7c5c59474557"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "lazyList"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyGenerator"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyRange"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyPowerRange"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyNestList"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyFixedPointList"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyPeriodicList"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyStream"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyTuples"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyConstantArray"}]}], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"8f1d3194-9e73-46ae-83d7-5e7cad595285"],

Cell[CellGroupData[{

Cell[BoxData["\<\"lazyList is a linked-list data structure that should \
contain 2 elements: the first is the first element, the second a held \
expression that will generate the next linked list when evaluated.\\nYou can \
extract these elements explicitely with First and Last/Rest. Part and Take \
have been overloaded with special functionalities when used on lazyList and \
will iteratively evaluate the tail to collect elements from the \
lazyList.\\nlazyList[list] or lazyList[Hold[var]] is a special constructor \
that generates a lazyList from an ordinary list\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info313746771661-9226092",ExpressionUUID->"b1d5acac-1ffb-4911-b7a3-\
7b40ad2980c5"],

Cell[BoxData["\<\"lazyGenerator[f, start, min, max, step] generates a \
lazyList that applies f to values {start, start + step, start + 2 step, ...} \
for values between min and max (which are allowed to be infinite).\\nWhen min \
and max are both infinite, symbolic values for start and step are \
allowed\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info323746771661-9226092",ExpressionUUID->"2926fd31-0e00-4ab2-b444-\
f34324c7da06"],

Cell[BoxData["\<\"lazyRange[] is a lazy representation of the Integers from 1 \
to \[Infinity]. lazyRange[min, delta] represents values values from min \
onwards in steps of delta.\\nlazyRange has no upper limit and is generally \
slightly faster than lazyGenerator\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info333746771661-9226092",ExpressionUUID->"ae0f1137-a4d9-46e2-8a34-\
3e29a4d4043d"],

Cell[BoxData["\<\"lazyPowerRange[min, r] is the infinite list {min, r \
\[Times] min, r^2 \[Times] min, ...}\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info343746771661-9226092",ExpressionUUID->"63d6b550-81e6-4d58-9a82-\
9d691b737f9b"],

Cell[BoxData["\<\"lazyNestList[f, elem] is the infinite list {elem, f[elem], \
f[f[elem]], ...} starting with elem and generated by iterating f repeatedly\"\
\>"], "Print", "PrintUsage",
 CellTags->
  "Info353746771661-9226092",ExpressionUUID->"64db6220-8106-4fce-b0b0-\
49780f4e184b"],

Cell[BoxData["\<\"lazyFixedPointList[f, elem, sameTest] nests f to elem until \
the result not longer changes according to sameTest\"\>"], "Print", \
"PrintUsage",
 CellTags->
  "Info363746771661-9226092",ExpressionUUID->"c9f518ac-1c7f-4387-9c91-\
db5e44e31102"],

Cell[BoxData["\<\"lazyPeriodicList[list] is an infinite lazyList that cycles \
through the values in list periodically\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info373746771661-9226092",ExpressionUUID->"04cd7622-9a31-41eb-ab66-\
5528a56dc7e0"],

Cell[BoxData["\<\"lazyStream[streamObject] creates a lazyList that streams \
from streamObject. These streams will stop automatically when EndOfFile is \
reached\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info383746771661-9226092",ExpressionUUID->"c50b8481-f95e-441f-be2a-\
3b40cf977f8b"],

Cell[BoxData["\<\"lazyTuples is a lazy version of Tuples with mostly the same \
syntax.\\nlazyTuples[n] is a special case that generates an infinite list of \
all n-tuples of integers \[GreaterEqual] 1\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info393746771661-9226092",ExpressionUUID->"b846ab6f-7a5f-4eba-86e7-\
47ecb63c0c47"],

Cell[BoxData["\<\"lazyConstantArray[elem] produces an infinite list of copies \
of elem\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info403746771662-9226092",ExpressionUUID->"30a1bed0-4105-4364-a7e2-\
20ed6b29042a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Operations on finite lazyLists", \
"Subsection",ExpressionUUID->"6d5d1031-631a-41cb-8e58-264d57f52254"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "lazyFiniteTake"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyFinitePart"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazySetState"}], "\[IndentingNewLine]", 
 RowBox[{"?", "partWhile"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyCatenate"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyPrependTo"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyAppendTo"}]}], "Input",
 CellLabel->"In[41]:=",ExpressionUUID->"0937c9c9-1b4b-4347-a8ce-1b460d985208"],

Cell[CellGroupData[{

Cell[BoxData["\<\"lazyFiniteTake[lz, spec] directly applies Take to finite \
lazyLists and periodic lazyLists without having to traverse the lazyList \
element-by-element. \\nIt is equivalent to Take[list, spec]\"\>"], "Print", \
"PrintUsage",
 CellTags->
  "Info413746771662-9226092",ExpressionUUID->"d1bbbdad-2c12-44d7-a1c7-\
97985b95ccbc"],

Cell[BoxData["\<\"lazyFinitePart[lz, i, j, k,...] directly extracts Part from \
finite and periodic lazyLists without having to traverse the lazyList \
element-by-element. \\nIt is equivalent to Part[list, i, j, k, ...]\"\>"], \
"Print", "PrintUsage",
 CellTags->
  "Info423746771662-9226092",ExpressionUUID->"6d851f29-eff8-4131-bbb8-\
7f6eb3a84a10"],

Cell[BoxData["\<\"lazySetState[lz, state] with lz a supported lazyList \
returns a lazyList at the specified state. \\nFinite lists, lazyPeriodicList, \
lists generated with lazyGenerator, lazy(Power)Range, and lazyNestList are \
supported.\\nMaps over supported lists are also supported\"\>"], "Print", \
"PrintUsage",
 CellTags->
  "Info433746771662-9226092",ExpressionUUID->"b5d61ac4-0979-4664-b83c-\
e2f44c79452e"],

Cell[BoxData["\<\"partWhile[lz, test] gives lazyList[elem, tail], with elem \
the last element in lz that passes test\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info443746771662-9226092",ExpressionUUID->"50759d0b-396c-46ab-a02b-\
3c9e27bb1d78"],

Cell[BoxData["\<\"lazyCatenate catenates lists of lazyLists, lazyLists of \
lists and lazyLists of lazyLists into one lazyList\"\>"], "Print", \
"PrintUsage",
 CellTags->
  "Info453746771662-9226092",ExpressionUUID->"7642c741-881b-4e87-b17d-\
7b280d84f22f"],

Cell[BoxData["\<\"lazyPrependTo[lz, element] can be used on lazyLists \
generated by lazyList[Hold[var]] or lazyList[list] to modify the underlying \
list.\\nIt returns a lazyList with the modified variable at the index where \
lz was originally\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info463746771662-9226092",ExpressionUUID->"be95f713-8e1f-41be-9c6a-\
acce0b3d2845"],

Cell[BoxData["\<\"lazyAppendTo[lz, element] can be used on lazyLists \
generated by lazyList[Hold[var]] or lazyList[list] to modify the underlying \
list.\\nIt returns a lazyList with the modified variable at the index where \
lz was originally\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info473746771662-9226092",ExpressionUUID->"0532512c-c79a-4979-8f72-\
a02182d08a83"]
}, Open  ]]
}, Open  ]],

Cell["System symbols that work with lazyLists:", \
"Text",ExpressionUUID->"587da714-8a8f-4437-8b8c-f88a92b7ff4e"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Part, Take",
 FontWeight->
  "Bold"]], "Item",ExpressionUUID->"aa5df912-6326-4bba-a487-5ea8a0dabd1e"],

Cell[TextData[StyleBox["Append, Prepend",
 FontWeight->
  "Bold"]], "Item",ExpressionUUID->"55d513a0-9ded-47b3-8b29-544559fc0a22"],

Cell[TextData[{
 StyleBox["Nothing",
  FontWeight->"Bold"],
 " (vanishes automatically)"
}], "Item",ExpressionUUID->"a158d074-1c49-48c4-90f3-ae554edfd93f"],

Cell[TextData[StyleBox["Map, MapIndexed",
 FontWeight->
  "Bold"]], "Item",ExpressionUUID->"8306afa4-283f-4205-bdb6-633fd57a2348"],

Cell[TextData[StyleBox["Cases, Pick, Select",
 FontWeight->
  "Bold"]], "Item",ExpressionUUID->"68d71363-255e-4cd4-b43e-c14b37190c6d"],

Cell[TextData[StyleBox["FoldList, FoldPairList",
 FontWeight->
  "Bold"]], "Item",ExpressionUUID->"46b07827-0aac-43c0-9d23-c68beb6d63ae"],

Cell[TextData[StyleBox["Plus, Times, Divide, Subtract, Power",
 FontWeight->
  "Bold"]], "Item",ExpressionUUID->"7185f435-bdb8-4348-94ca-13bed28fae34"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Special functions", \
"Subsection",ExpressionUUID->"8161cb60-2662-464e-bd05-1ed7918a050f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "lazyMapThread"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyTranspose"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyPartMap"}]}], "Input",
 CellLabel->"In[48]:=",ExpressionUUID->"966ecd04-15a3-4c9a-b904-32be5271d7a0"],

Cell[CellGroupData[{

Cell[BoxData["\<\"lazyMapThread[f, {lz1, lz2, ...}] is similar to MapThread, \
except all elements from the lazyLists are fed to the first slot of f as a \
regular List\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info483746771662-9226092",ExpressionUUID->"b045195a-6558-45ce-92c2-\
b01672d444dc"],

Cell[BoxData["\<\"lazyTranspose[{lz1, lz2, ...}] creates a lazyList with \
tuples of elements from lz1, lz2, etc. \\nEquivalent to \
lazyMapThread[Identity, {lz1, lz2, ...}]\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info493746771663-9226092",ExpressionUUID->"e900c9f7-0c0d-469d-aeed-\
7a17a54da011"],

Cell[BoxData["\<\"lazyPartMap[l, {i, j, k, ...}] is equivalent to Map[Part[l, \
{#}]&, {i, j, k, ...}] but faster\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info503746771663-9226092",ExpressionUUID->"2d1447e1-e317-4e0f-a9df-\
d9d7d4142311"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Implementation details and other functions", \
"Subsection",ExpressionUUID->"2afa4dd0-09a8-4f37-b66b-767769b7a1f0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", 
  "$lazyIterationLimit"}], "\[IndentingNewLine]", "$lazyIterationLimit"}], \
"Input",
 CellLabel->"In[51]:=",ExpressionUUID->"d8833260-c2e5-4791-808b-7f6f92e54cfe"],

Cell[BoxData["\<\"Iteration limit used for finding successive elements in a \
lazy list\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info513746771663-9226092",ExpressionUUID->"481dfecd-6981-490f-8126-\
b2ec4dbf01c7"],

Cell[BoxData["\[Infinity]"], "Output",
 CellLabel->"Out[52]=",ExpressionUUID->"93b75865-3cb1-436e-bf0a-c0ee968777fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "bulkExtractElementsUsingIndexList"}], "\[IndentingNewLine]", 
 RowBox[{"?", "rangeTuplesAtPositions"}], "\[IndentingNewLine]", 
 RowBox[{"?", "nextIntegerTuple"}]}], "Input",
 CellLabel->"In[53]:=",ExpressionUUID->"cb70b7ac-11e0-4c24-9c10-811140f4999d"],

Cell[CellGroupData[{

Cell[BoxData["\<\"bulkExtractElementsUsingIndexList[lists, indices] converts \
elements from Tuples[Range /@ Length /@ lists] into elements from \
Tuples[lists]\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info533746771663-9226092",ExpressionUUID->"139448cc-6e67-43d7-ab4e-\
7b82a971ded0"],

Cell[BoxData["\<\"rangeTuplesAtPositions[Length /@ lists] is a \
CompiledFunction that directly generates elements of Tuples[Range /@ Length \
/@ lists]\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info543746771663-9226092",ExpressionUUID->"4f085d8b-6114-4808-8810-\
227c441ab9c3"],

Cell[BoxData["\<\"nextIntegerTuple[{int1, int2, ...}] generates the next \
integer tuple in a canonical order\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info553746771663-9226092",ExpressionUUID->"59ab8784-d5b9-496f-8a06-\
9a5c379082ec"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Usage examples", \
"Section",ExpressionUUID->"79b459a2-40b2-4d85-ad2a-91269059057f"],

Cell[CellGroupData[{

Cell["Creating lazyLists and extracting elements from them", \
"Subsection",ExpressionUUID->"9cdf5a73-58b8-496b-a090-8a5dfff3450d"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"lazyRange", "[", 
     RowBox[{"start", ",", " ", "step"}], "]"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "995a7677-cbcb-4c20-957f-a733d117f3e4"],
 " are the basic constructor for equally-space infinite lazyLists. Both \
arguments of lazyRange default to 1 when omitted. Thus,",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"lazyRange", "[", "]"}]}], TraditionalForm]],ExpressionUUID->
  "a8408cdc-c5a0-4bfa-8e2e-8c21d5eb651f"],
 " represents the positive integers. Successive integers can be extracted by \
repeatedly applying ",
 StyleBox["Last",
  FontWeight->"Bold"],
 " or ",
 StyleBox["Rest",
  FontWeight->"Bold"],
 ":"
}], "Text",ExpressionUUID->"1a112eb4-0971-4789-9386-f0b04d8aa1e0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lazyRange", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Last", "@", "%"}], "\[IndentingNewLine]", 
 RowBox[{"Rest", "@", "%"}]}], "Input",
 CellLabel->"In[56]:=",ExpressionUUID->"dab87c82-c933-47c1-b843-edd59f2e403c"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"1", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"1", "+", "1"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[56]=",ExpressionUUID->"c721f33e-3cca-4e28-b916-eae705412999"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"2", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"1", "+", "2"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[57]=",ExpressionUUID->"820449d9-2dbc-4172-ae7a-8ab64a29ee80"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"3", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"1", "+", "3"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[58]=",ExpressionUUID->"2e3942ef-fcae-4cdb-b91c-8193b25bebfa"]
}, Open  ]],

Cell[TextData[{
 StyleBox["lazyPowerRange[start, r]",
  FontWeight->"Bold"],
 " similarly creates a range of powers. Both lazyRange and lazyPowerRange can \
be symbolic:"
}], "Text",ExpressionUUID->"d47e9905-2b75-4b30-8f46-e31f3b1be6a7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lazyRange", "[", 
  RowBox[{"start", ",", "step"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Last", "@", "%"}], "\[IndentingNewLine]", 
 RowBox[{"lazyPowerRange", "[", 
  RowBox[{"start", ",", "r"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Last", "@", "%"}]}], "Input",
 CellLabel->"In[59]:=",ExpressionUUID->"430bd9f9-0ffd-4088-bed6-c2b3221739b1"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"start", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"step", "+", "start"}], ",", "step"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[59]=",ExpressionUUID->"5b7cfbe9-5b59-4bda-9e9e-e278c54e9c08"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"start", "+", "step"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"step", "+", 
      RowBox[{"(", 
       RowBox[{"start", "+", "step"}], ")"}]}], ",", "step"}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[60]=",ExpressionUUID->"0a85731b-c5ff-4d76-a541-3c76fe2b7fdb"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"start", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", " ", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"r", " ", "start"}], ",", "r"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[61]=",ExpressionUUID->"da741af4-e4fc-41b5-a757-0c92bbbed7ef"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"r", " ", "start"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", " ", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"r", " ", 
      RowBox[{"(", 
       RowBox[{"r", " ", "start"}], ")"}]}], ",", "r"}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[62]=",ExpressionUUID->"f27cb9fe-4c32-4dc7-94ca-919c5273c893"]
}, Open  ]],

Cell[TextData[{
 "Nesting Last is not very efficient. Instead, use special functionalities of \
",
 StyleBox["Take",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Part",
  FontWeight->"Bold"],
 " to continuously evaluate the tail of lazy list until the required elements \
have been found. "
}], "Text",ExpressionUUID->"c60618e2-1470-4fc2-98cd-8097bfc68e7d"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"Part", "[", 
     RowBox[{"lz", ",", " ", "n"}], "]"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "530b8710-c51f-4480-95ea-a1943c15abd7"],
 " of a lazyList returns the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]],ExpressionUUID->
  "a2ee4c5a-3790-4c4f-b079-8c24b67948cc"],
 " element, whereas",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{" ", 
     RowBox[{"Part", "[", 
      RowBox[{"lz", ",", " ", 
       RowBox[{"{", "n", "}"}]}], "]"}]}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "621ebb6e-42a3-498a-992e-31a2370d61bf"],
 " returns a lazyList containing the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]],ExpressionUUID->
  "9e85a72e-cd2e-472d-b039-32d152c5d678"],
 " element and the tail of the lazyList. This allows you to keep extracting \
further elements from the returned lazyList without losing progress. The \
lazyList does not keep track of position for efficiency reasons. This is up \
to the user."
}], "Text",ExpressionUUID->"7f5f6d4d-7f2f-4fb4-958f-2fabd9c6b849"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", "]"}], ",", "4"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", "]"}], ",", 
   RowBox[{"{", "4", "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Last", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Rest", "[", "%%", "]"}]}], "Input",
 CellLabel->"In[63]:=",ExpressionUUID->"62f4563c-892f-4239-8057-70dc5511ffaf"],

Cell[BoxData["4"], "Output",
 CellLabel->"Out[63]=",ExpressionUUID->"f24e3263-cca6-4b63-8762-4db7f444c796"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"4", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"1", "+", "4"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[64]=",ExpressionUUID->"03add6b4-d2cc-4298-be92-eb17c352975e"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"5", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"1", "+", "5"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[65]=",ExpressionUUID->"f1253c33-812c-4472-b278-c3353676cb51"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"5", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"1", "+", "5"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[66]=",ExpressionUUID->"2a958ec4-d878-4358-bc3b-617c51c4ca71"]
}, Open  ]],

Cell[TextData[{
 "Multiple indices can be extracted in one go. In this case, the extracted \
elements will go in the first element of the returned lazyList while the tail \
will be left in the state of the highest visited index. ",
 StyleBox["Span",
  FontWeight->"Bold"],
 " is also supported for integers:"
}], "Text",ExpressionUUID->"b80e232f-0514-4341-9156-760672a0e40a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", " ", "10", ",", " ", "5"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", "]"}], ",", 
   RowBox[{"10", ";;", "2", ";;", 
    RowBox[{"-", "2"}]}]}], "]"}]}], "Input",
 CellLabel->"In[67]:=",ExpressionUUID->"34dac2ad-2f9f-4764-b2c2-1e8b2142915d"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "10", ",", "5"}], "}"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"10", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "10"}], ",", "1"}], "]"}]}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[67]=",ExpressionUUID->"b1a5ec1c-90c4-4536-b226-023c7a35ef44"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "8", ",", "6", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"10", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "10"}], ",", "1"}], "]"}]}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[68]=",ExpressionUUID->"27578c72-e037-4035-a2a1-240fe835ee37"]
}, Open  ]],

Cell[TextData[{
 StyleBox["lazyPartMap",
  FontWeight->"Bold"],
 " extracts values at particular indices while also retaining the tails at \
those positions:"
}], "Text",ExpressionUUID->"e9468ffe-b246-46a6-82e3-cce5359f2e50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lazyPartMap", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", "]"}], ",", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "22", ",", "4"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[69]:=",ExpressionUUID->"f1a4df16-3571-403e-9fa6-237293e18a55"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"lazyList", "[", 
    RowBox[{"2", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "2"}], ",", "1"}], "]"}]}], "]"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"6", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "6"}], ",", "1"}], "]"}]}], "]"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"10", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "10"}], ",", "1"}], "]"}]}], "]"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"14", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "14"}], ",", "1"}], "]"}]}], "]"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"18", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "18"}], ",", "1"}], "]"}]}], "]"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"22", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "22"}], ",", "1"}], "]"}]}], "]"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[69]=",ExpressionUUID->"de940136-67e2-4270-b76c-758d7549c6de"]
}, Open  ]],

Cell["\<\
Attempting to extract a part that doesn\[CloseCurlyQuote]t exist from a \
finite lazyList will yield a message and return $Failed:\
\>", "Text",ExpressionUUID->"3989a517-8b84-4212-9e72-43c697532a27"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lz", " ", "=", " ", 
   RowBox[{"lazyList", "[", 
    RowBox[{"Range", "[", "4", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"lz", "[", 
  RowBox[{"[", "5", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"lz", "[", 
  RowBox[{"[", 
   RowBox[{"{", "5", "}"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"lz", "[", 
  RowBox[{"[", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"lz", "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;", "5"}], "]"}], "]"}]}], "Input",
 CellLabel->"In[70]:=",ExpressionUUID->"32163113-6f5c-4fd9-8bf8-56f7acf65b56"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"5\\\"}]\\) of \\!\\(\\*RowBox[{\\\"lazyList\\\
\", \\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", \
RowBox[{\\\"lazyLists`Private`lazyFiniteList\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \
\\\",\\\", \\\"4\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"1\\\", \\\"+\\\", \
\\\"1\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}]\\) does not exist.\"",2,71,4,
   16514359115163126255,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[70]:=",ExpressionUUID->"260aaaef-db77-463e-a811-69f3ff73c2d7"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->"Out[71]=",ExpressionUUID->"420e3731-f353-4ebc-a0b5-89f379abaf01"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"5\\\"}]\\) of \\!\\(\\*RowBox[{\\\"lazyList\\\
\", \\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", \
RowBox[{\\\"lazyLists`Private`lazyFiniteList\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \
\\\",\\\", \\\"4\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"1\\\", \\\"+\\\", \
\\\"1\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}]\\) does not exist.\"",2,72,5,
   16514359115163126255,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[70]:=",ExpressionUUID->"56297f14-2c35-4109-9b8a-36bc62f3521d"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->"Out[72]=",ExpressionUUID->"5e9ece79-ee96-4bc1-8a62-5b5cdb459951"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"4\\\"}]\\) of \\!\\(\\*RowBox[{\\\"lazyList\\\
\", \\\"[\\\", RowBox[{\\\"2\\\", \\\",\\\", \
RowBox[{\\\"lazyLists`Private`lazyFiniteList\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \
\\\",\\\", \\\"4\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"2\\\", \\\"+\\\", \
\\\"1\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}]\\) does not exist.\"",2,73,6,
   16514359115163126255,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[70]:=",ExpressionUUID->"cf887467-4eaf-4f9c-8171-5b35631bb9b0"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->"Out[73]=",ExpressionUUID->"0433ebce-9207-4bbd-a141-0513cd3f591d"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"5\\\"}]\\) of \\!\\(\\*RowBox[{\\\"lazyList\\\
\", \\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", \
RowBox[{\\\"lazyLists`Private`lazyFiniteList\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \
\\\",\\\", \\\"4\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"1\\\", \\\"+\\\", \
\\\"1\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}]\\) does not exist.\"",2,74,7,
   16514359115163126255,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[70]:=",ExpressionUUID->"c246689f-ef41-4894-bcc6-7674e33169a0"],

Cell[BoxData["$Failed"], "Output",
 CellLabel->"Out[74]=",ExpressionUUID->"c276342e-5ae5-4438-b4f0-80210158e29b"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Take",
  FontWeight->"Bold"],
 " of lazyList returns lazyList. The first element is a list of the extracted \
elements. The tail is a lazyList at the point where take stopped. Note that \
there will be an overlap of 1 if you continue extracting elements form the \
returned lazyList (this is necessary to avoid unnecessary evaluations of \
elements)."
}], "Text",ExpressionUUID->"66aa0271-c1d7-444e-bd61-b1bc2b426edf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"lazyRange", "[", "]"}], ",", "4"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"First", "[", "list", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Last", "[", "list", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"Last", "[", "list", "]"}], ",", "5"}], "]"}]}], "Input",
 CellLabel->"In[75]:=",ExpressionUUID->"0deb31ae-48a0-4c10-b1c5-60e740712aa2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellLabel->"Out[76]=",ExpressionUUID->"22f68913-d1d2-4cb6-9c6f-a7bacaaf7c56"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"4", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"1", "+", "4"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[77]=",ExpressionUUID->"99a7002b-eb41-4c55-8fe6-cfaee2a6dcde"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"8", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "8"}], ",", "1"}], "]"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[78]=",ExpressionUUID->"7565a6bd-87b1-4cdb-921e-b93ba63966c3"]
}, Open  ]],

Cell["It is possible to specify a lower and upper index for Take:", \
"Text",ExpressionUUID->"8a0ddc07-8ca8-415e-9861-4912dc4f0514"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "10"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[79]:=",ExpressionUUID->"65961842-2921-4b5c-bbac-e02cfc7d40ba"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10"}], "}"}], 
   ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"10", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "10"}], ",", "1"}], "]"}]}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[79]=",ExpressionUUID->"7deceda0-62d6-4572-a01a-aa3b5f2ceac5"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5"}], "}"}], 
   ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"10", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "10"}], ",", "1"}], "]"}]}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[80]=",ExpressionUUID->"02d1dea4-c147-4f40-a391-85847d9e5a65"]
}, Open  ]],

Cell["\<\
Take will not issue a message if indices are requested beyond the length of \
the lazyList:\
\>", "Text",ExpressionUUID->"54f32590-2da2-49e5-b01e-8657a6c320f2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Take", "[", 
  RowBox[{"lz", ",", "5"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{"lz", ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{"lz", ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "10"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{"lz", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[81]:=",ExpressionUUID->"ab6d13e6-fbcc-488f-9ed1-1029e38d203f"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"lazyList", "[", "]"}]}], "]"}]], "Output",
 CellLabel->"Out[81]=",ExpressionUUID->"b1a7ccf9-8cc7-4e14-8340-55cc29a543f7"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"lazyList", "[", "]"}]}], "]"}]], "Output",
 CellLabel->"Out[82]=",ExpressionUUID->"29945d19-46e2-4a8d-b621-ca9b2848889a"],

Cell[BoxData[
 RowBox[{"lazyList", "[", "]"}]], "Output",
 CellLabel->"Out[83]=",ExpressionUUID->"12acb051-d686-4348-b830-4ee0b6d9b7f5"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}], ",", 
   RowBox[{"lazyList", "[", "]"}]}], "]"}]], "Output",
 CellLabel->"Out[84]=",ExpressionUUID->"966d2d71-ccf8-4458-a5f5-8205411283f0"]
}, Open  ]],

Cell[TextData[{
 StyleBox["TakeWhile",
  FontWeight->"Bold"],
 " also works with lazyLists. Note that the tail of the returned lazyList \
contains the first element that didn\[CloseCurlyQuote]t pass the test:"
}], "Text",ExpressionUUID->"d9a560d3-261a-4f9c-bb6c-955eabdcb76c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TakeWhile", "[", 
  RowBox[{
   RowBox[{"lazyPowerRange", "[", 
    RowBox[{"2", ",", "2"}], "]"}], ",", 
   RowBox[{
    RowBox[{"#", "<", "100"}], "&"}]}], "]"}]], "Input",
 CellLabel->"In[85]:=",ExpressionUUID->"81c528c1-fbff-4d04-adb4-9a8335001936"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "8", ",", "16", ",", "32", ",", "64"}], "}"}],
    ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"128", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", " ", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"2", " ", "128"}], ",", "2"}], "]"}]}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[85]=",ExpressionUUID->"594a6ccc-4a7b-42dc-901f-66902389cb1d"]
}, Open  ]],

Cell[TextData[{
 "If only the last element that passed the test is required, use ",
 StyleBox["partWhile",
  FontWeight->"Bold"],
 ":"
}], "Text",ExpressionUUID->"b92f4fa2-8bae-4df7-87ce-7995b2782773"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"partWhile", "[", 
  RowBox[{
   RowBox[{"lazyPowerRange", "[", 
    RowBox[{"2", ",", "2"}], "]"}], ",", 
   RowBox[{
    RowBox[{"#", "<", "100"}], "&"}]}], "]"}]], "Input",
 CellLabel->"In[86]:=",ExpressionUUID->"5edbdbc1-387e-4e11-9422-ece4121c89e4"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"64", ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"128", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", " ", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"2", " ", "128"}], ",", "2"}], "]"}]}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[86]=",ExpressionUUID->"a55dd71e-84da-494b-8ce2-93b0544ea4d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Converting normal lists into lazyLists", \
"Subsubsection",ExpressionUUID->"e9acfd96-1276-4453-b2ce-ffbd20c0719e"],

Cell["\<\
Normal lists can be converted into lazyLists by wrapping lazyList around \
them. The list is stored in the tail and is streamed element-by-element:\
\>", "Text",ExpressionUUID->"115e41b9-6140-442b-806c-1dc1bda77a77"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lazyList", "[", 
  RowBox[{"Fibonacci", "[", 
   RowBox[{"Range", "[", "10", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "5"}], "]"}]}]}], "Input",
 CellLabel->"In[87]:=",ExpressionUUID->"a71ae506-2558-4576-96a7-cd81d08eff10"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"1", ",", 
   RowBox[{"lazyLists`Private`lazyFiniteList", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13", ",", 
       "21", ",", "34", ",", "55"}], "}"}], ",", 
     RowBox[{"1", "+", "1"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[87]=",ExpressionUUID->"16b3dd39-1ee2-4317-9276-30e635580445"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}]], "Output",
 CellLabel->"Out[88]=",ExpressionUUID->"1669929d-83cf-4a54-bbd2-b14bcbe6ad5d"]
}, Open  ]],

Cell["\<\
It is also possible to turn a symbol that refers to a list into a lazyList by \
wrapping Hold around it. This will store a reference to that list in the \
lazyList, meaning that if you change the source list, the lazyList will \
change as well:\
\>", "Text",ExpressionUUID->"49cab4cf-9bc5-40f6-b882-1a4b1090df44"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fibList", "=", 
  RowBox[{"Fibonacci", "[", 
   RowBox[{"Range", "[", "10", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"finiteLz", "=", 
  RowBox[{"lazyList", "[", 
   RowBox[{"Hold", "[", "fibList", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"finiteLz", ",", "All"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fibList", " ", "=", " ", 
  RowBox[{"Fibonacci", "[", 
   RowBox[{"Range", "[", "20", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"finiteLz", ",", "All"}], "]"}]}]}], "Input",
 CellLabel->"In[89]:=",ExpressionUUID->"ddb15fbb-3cb6-4cd4-933f-c1f27036e5d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13", ",", "21",
    ",", "34", ",", "55"}], "}"}]], "Output",
 CellLabel->"Out[89]=",ExpressionUUID->"81f69679-18d8-4728-91d1-3f39306b002c"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"1", ",", 
   RowBox[{"lazyLists`Private`lazyFiniteList", "[", 
    RowBox[{"fibList", ",", 
     RowBox[{"1", "+", "1"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[90]=",ExpressionUUID->"fa60173a-e194-41d6-a1ff-3a45b8cafe3f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13", ",", "21",
    ",", "34", ",", "55"}], "}"}]], "Output",
 CellLabel->"Out[91]=",ExpressionUUID->"6d9fa63c-686e-46ae-87e1-ba8546f30038"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13", ",", "21",
    ",", "34", ",", "55", ",", "89", ",", "144", ",", "233", ",", "377", ",", 
   "610", ",", "987", ",", "1597", ",", "2584", ",", "4181", ",", "6765"}], 
  "}"}]], "Output",
 CellLabel->"Out[92]=",ExpressionUUID->"7ba5dc48-269e-4f2a-9baa-2bd7dff78e84"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13", ",", "21",
    ",", "34", ",", "55", ",", "89", ",", "144", ",", "233", ",", "377", ",", 
   "610", ",", "987", ",", "1597", ",", "2584", ",", "4181", ",", "6765"}], 
  "}"}]], "Output",
 CellLabel->"Out[93]=",ExpressionUUID->"c3ce7f18-8794-4acf-ae47-e063e2f44af0"]
}, Open  ]],

Cell["\<\
The advantage of this approach is that the lazyList will have a smaller \
memory footprint and can be passed into other functions without the need to \
copy over large amounts of data:\
\>", "Text",ExpressionUUID->"65a024ec-b95f-4db8-9335-42474bfd2ace"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fibList", "=", 
   RowBox[{"Fibonacci", "[", 
    RowBox[{"Range", "[", "1000", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lazyList", "[", "fibList", "]"}], "//", 
  "ByteCount"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lazyList", "[", 
   RowBox[{"Hold", "[", "fibList", "]"}], "]"}], "//", 
  "ByteCount"}]}], "Input",
 CellLabel->"In[94]:=",ExpressionUUID->"6dc85e7e-3e1f-4218-913b-93b68a69ee2c"],

Cell[BoxData["89160"], "Output",
 CellLabel->"Out[95]=",ExpressionUUID->"cf9950d2-8eed-4d64-8fd6-7b56beb1d840"],

Cell[BoxData["216"], "Output",
 CellLabel->"Out[96]=",ExpressionUUID->"1fc2d4c0-7158-4445-83e1-b82c34ddde6d"]
}, Open  ]],

Cell[TextData[{
 StyleBox["lazyFinitePart",
  FontWeight->"Bold"],
 " and ",
 StyleBox["lazyFiniteTake",
  FontWeight->"Bold"],
 " can be used to extract parts from lazyLists directly from the underlying \
symbol without having to traverse the lazyList:"
}], "Text",ExpressionUUID->"faf5e77f-060d-427c-a054-f7015d144306"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lazyFinitePart", "[", 
   RowBox[{"finiteLz", ",", "4"}], "]"}], " ", "===", " ", 
  RowBox[{"Part", "[", 
   RowBox[{"fibList", ",", "4"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lazyFiniteTake", "[", 
   RowBox[{"finiteLz", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}]}], "]"}], "===", 
  RowBox[{"Take", "[", 
   RowBox[{"fibList", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}]}], "]"}]}]}], "Input",
 CellLabel->"In[97]:=",ExpressionUUID->"1e24ba46-7d8b-4e06-87a9-4207f4abd148"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[97]=",ExpressionUUID->"5a778b8e-250c-4f5d-ac92-4705613ae726"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[98]=",ExpressionUUID->"663df8f6-fbf9-45d6-b584-dff649b95a12"]
}, Open  ]],

Cell[TextData[{
 StyleBox["lazySetState",
  FontWeight->"Bold"],
 " can be used to directly move a finite lazyList to a given index without \
traversing. Also supports going to the last index directly:"
}], "Text",ExpressionUUID->"804de8df-4c8c-44d9-9302-8e8e55b8935d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lazySetState", "[", 
  RowBox[{"finiteLz", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellLabel->"In[99]:=",ExpressionUUID->"823d9361-a12a-41f0-94a7-227f8178948c"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
  "434665576869374564356885276750406258025646605173717804024817290895365554179\
490518904038798400792551692959225930803226347752096896232398733224711616429964\
40906533187938298969649928516003704476137795166849228875", ",", 
   RowBox[{"lazyLists`Private`lazyFiniteList", "[", 
    RowBox[{"fibList", ",", 
     RowBox[{"1000", "+", "1"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[99]=",ExpressionUUID->"16f2f2f4-987f-42ac-9812-e47d3ccbc083"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transposition", \
"Subsubsection",ExpressionUUID->"f81aa9ee-aac7-4de5-bb4e-3a6e43e71b37"],

Cell[TextData[{
 "lazyLists can be transposed with ",
 StyleBox["lazyTranspose",
  FontWeight->"Bold"],
 ":"
}], "Text",ExpressionUUID->"c76a374a-4a99-4e7e-89a6-b031331f12d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lazyTranspose", "[", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lazyRange", "[", "]"}], ",", 
       RowBox[{"lazyConstantArray", "[", "0", "]"}]}], "}"}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "5"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[100]:=",ExpressionUUID->"01271068-9a2f-4f9f-bdc4-c0b467f0c7b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[100]=",ExpressionUUID->"bf39f7b0-8ce0-4eba-9cb3-2c03904fe903"]
}, Open  ]],

Cell["\<\
Normal lists will be cast to lazyLists and the shortest lazyList will \
determine the length of the transpose:\
\>", "Text",ExpressionUUID->"72730567-d1aa-438e-80e6-bdc843e464c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lazyTranspose", "[", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lazyRange", "[", "]"}], ",", 
       RowBox[{"Range", "[", "5", "]"}]}], "}"}], "\[IndentingNewLine]", 
     "]"}], ",", "\[IndentingNewLine]", "All"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->
  "In[101]:=",ExpressionUUID->"5e806e20-4a64-41f3-aff9-29bc7a95d35e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[101]=",ExpressionUUID->"3acfc892-b495-4f77-ba10-7ed7a15ca871"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lazy generator", \
"Subsubsection",ExpressionUUID->"26898ac6-d54e-450a-a936-857ee5fc5b92"],

Cell[TextData[{
 StyleBox["lazyGenerator",
  FontWeight->"Bold"],
 " is used to generate lazyLists from a generating function in much the same \
way as Table. It has 5 arguments: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"lazyGenerator", "[", 
    RowBox[{
    "fun", ",", " ", "start", ",", " ", "min", ",", " ", "max", ",", " ", 
     "step"}], "]"}], TraditionalForm]],ExpressionUUID->
  "4d0fa8ac-3001-48d3-90e0-697b8ca3e5a3"]
}], "Text",ExpressionUUID->"091a7650-9a36-4c83-987b-e4b754a39857"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["fun", TraditionalForm]],ExpressionUUID->
  "0224669c-b117-4ae9-b79e-00a105d14d99"],
 " the generating function"
}], "Item",ExpressionUUID->"127b423b-e334-4122-8740-ad04296ed7c5"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["start", TraditionalForm]],ExpressionUUID->
  "03d24386-0c6c-4a65-8c91-4cb9f816d482"],
 " the starting value to apply the function to. Defaults to 1"
}], "Item",ExpressionUUID->"28bd2c1a-daa5-4650-a0b8-ee46a1046a75"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"min", ",", " ", "max"}], TraditionalForm]],ExpressionUUID->
  "7ef99663-e50a-454e-8161-f090c09e8f65"],
 " The minimum values fun can be applied to. Default to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "\[Infinity]"}], TraditionalForm]],ExpressionUUID->
  "7d85d512-abf4-4551-aa9e-950b8128004d"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"+", "\[Infinity]"}], TraditionalForm]],ExpressionUUID->
  "21231119-7098-4895-b137-49b3daa5ccb4"]
}], "Item",ExpressionUUID->"507dfb61-60fe-4375-94ae-bbda9b21f2cd"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["step", TraditionalForm]],ExpressionUUID->
  "dc5325ce-8947-4333-9383-014dd4cbe392"],
 " the step size with which to increase the iterator of the table after each \
step. Defaults to 1"
}], "Item",ExpressionUUID->"a64d6517-5c3f-4592-88c7-50f1c70777c8"]
}, Open  ]],

Cell["\<\
The simplest form of lazyGenerator just specifies the function:\
\>", "Text",ExpressionUUID->"bd0674b1-8f96-4da1-9da1-6a8c201faba7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"infiniteInBothDirections", " ", "=", " ", 
  RowBox[{"lazyGenerator", "[", "f", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"infiniteInBothDirections", ",", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[102]:=",ExpressionUUID->"cdb0de3c-6d7d-45d4-b18d-c463f687a508"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"lazyLists`Private`twoSidedGenerator", "[", 
    RowBox[{"f", ",", 
     RowBox[{"1", "+", "1"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[102]=",ExpressionUUID->"90a25b9c-c3d6-4c8f-b619-0b75420e4a19"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}], ",", 
   RowBox[{"f", "[", "5", "]"}]}], "}"}]], "Output",
 CellLabel->"Out[103]=",ExpressionUUID->"3d3abdfd-c117-4862-842d-0cf02be5e0a9"]
}, Open  ]],

Cell["\<\
If the min and max limits are infinite, you can do symbolic steps:\
\>", "Text",ExpressionUUID->"2ee55deb-c936-404c-9dfc-eb155afb151a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"symbolicGenerator", " ", "=", " ", 
  RowBox[{"lazyGenerator", "[", 
   RowBox[{"f", ",", " ", "start", ",", " ", 
    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]", ",", "step"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"symbolicGenerator", ",", " ", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[104]:=",ExpressionUUID->"1fa6793f-bf16-4356-b0a4-72b0956494dc"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"f", "[", "start", "]"}], ",", 
   RowBox[{"lazyLists`Private`twoSidedGenerator", "[", 
    RowBox[{"f", ",", 
     RowBox[{"start", "+", "step"}], ",", "step"}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[104]=",ExpressionUUID->"f571adb0-1844-4a1c-809c-ae6e3f5fa647"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "start", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"start", "+", "step"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"start", "+", 
     RowBox[{"2", " ", "step"}]}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"start", "+", 
     RowBox[{"3", " ", "step"}]}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"start", "+", 
     RowBox[{"4", " ", "step"}]}], "]"}]}], "}"}]], "Output",
 CellLabel->"Out[105]=",ExpressionUUID->"08c8a6a0-732c-4d5f-82b5-4fa8f30eee5e"]
}, Open  ]],

Cell["\<\
If limits are specified, the start and step have to be numeric. Take will \
automatically stop when a limit is reached:\
\>", "Text",ExpressionUUID->"ec412910-8086-4f94-8383-07ef4488ff6c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lazyGenerator", "[", 
     RowBox[{"f", ",", " ", "2", ",", " ", "1", ",", "10", ",", "2"}], "]"}], 
    ",", "\[IndentingNewLine]", "50"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->
  "In[106]:=",ExpressionUUID->"5f275465-d56b-4871-b8e1-19eda807544d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}], ",", 
   RowBox[{"f", "[", "6", "]"}], ",", 
   RowBox[{"f", "[", "8", "]"}], ",", 
   RowBox[{"f", "[", "10", "]"}]}], "}"}]], "Output",
 CellLabel->"Out[106]=",ExpressionUUID->"b4ef2703-a25a-43f3-b772-5e14d2a39cd6"]
}, Open  ]],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"TakeWhile", "[", "lz", "]"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "5ef15816-5a91-457d-87f1-6bfc8c368bce"],
 " or ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"Take", "[", 
     RowBox[{"lz", ",", " ", "All"}], "]"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "df8b5647-ceb4-40a6-8546-b85db73f7c86"],
 " to get all elements (this is equivalent to ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"TakeWhile", "[", 
     RowBox[{"lz", ",", " ", 
      RowBox[{"True", "&"}]}], "]"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "93ec8546-4913-4b08-892f-746a3eb3fc29"],
 ":"
}], "Text",ExpressionUUID->"5ff88c39-01f2-4ab6-b749-d72d1662889e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"lazyGenerator", "[", 
    RowBox[{"f", ",", " ", "2", ",", " ", "1", ",", "10", ",", "2"}], "]"}], 
   ",", "All"}], "]"}]], "Input",
 CellLabel->
  "In[107]:=",ExpressionUUID->"f95caa4d-79ed-4271-813e-a3cbaf3060e4"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "2", "]"}], ",", 
     RowBox[{"f", "[", "4", "]"}], ",", 
     RowBox[{"f", "[", "6", "]"}], ",", 
     RowBox[{"f", "[", "8", "]"}], ",", 
     RowBox[{"f", "[", "10", "]"}]}], "}"}], ",", 
   RowBox[{"lazyList", "[", "]"}]}], "]"}]], "Output",
 CellLabel->"Out[107]=",ExpressionUUID->"c89d9825-c619-4cc5-98f8-912e283ae3c6"]
}, Open  ]],

Cell[TextData[{
 "To get the last element, you can use ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Part", "[", 
    RowBox[{"lz", ",", " ", 
     RowBox[{"-", "1"}]}], "]"}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"42b40688-4095-4c24-b499-6195a78c4afe"],
 " syntax (other negative numbers are not supported), which uses ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"partWhile", "[", 
     RowBox[{"lz", ",", " ", 
      RowBox[{"True", "&"}]}], "]"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "c585d10f-f65b-4db7-bb97-246fb11e6ba8"],
 " (the function can be omitted since it defaults to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"True", "&"}], TraditionalForm]],ExpressionUUID->
  "4da4a18c-ddb2-452e-bbc5-878522a59d1e"],
 ")"
}], "Text",ExpressionUUID->"bd342ce3-8dd8-4686-bfc1-ddc6bda67a4f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"partWhile", "[", 
  RowBox[{"lazyGenerator", "[", 
   RowBox[{"f", ",", " ", "2", ",", " ", "1", ",", "10", ",", "2"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lazyGenerator", "[", 
   RowBox[{"f", ",", " ", "2", ",", " ", "1", ",", "10", ",", "2"}], "]"}], 
  "[", 
  RowBox[{"[", 
   RowBox[{"{", 
    RowBox[{"-", "1"}], "}"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lazyGenerator", "[", 
   RowBox[{"f", ",", " ", "2", ",", " ", "1", ",", "10", ",", "2"}], "]"}], 
  "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]}], "Input",
 CellLabel->
  "In[108]:=",ExpressionUUID->"fb320931-5a9d-4d89-91a0-5e4a8dbd0744"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"f", "[", "10", "]"}], ",", 
   RowBox[{"lazyList", "[", "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[108]=",ExpressionUUID->"044f5c6b-6b03-4a90-879e-2f1830a1f540"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"f", "[", "10", "]"}], ",", 
   RowBox[{"lazyList", "[", "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[109]=",ExpressionUUID->"0653ebfc-99c6-48e6-ad9a-c07af7e98b9f"],

Cell[BoxData[
 RowBox[{"f", "[", "10", "]"}]], "Output",
 CellLabel->"Out[110]=",ExpressionUUID->"95428d87-f6e2-4305-9940-2769cd5e5cb9"]
}, Open  ]],

Cell[TextData[{
 StyleBox["lazySetState",
  FontWeight->"Bold"],
 " can be used with lazyGenerator lists. It override the current position of \
the generator and reset it to the given value. Notice that this means that \
this can create a completely different generator if it is set to a value the \
original would never visit. The step size and min/max values are retained:"
}], "Text",ExpressionUUID->"1e034299-8ca5-4d23-a766-3a7fb63544ce"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"l", " ", "=", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"lazyGenerator", "[", 
     RowBox[{"f", ",", " ", "2", ",", " ", "1", ",", "10", ",", "2"}], "]"}], 
    ",", "3"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"lazySetState", "[", 
    RowBox[{
     RowBox[{"Last", "[", "l", "]"}], ",", "3"}], "]"}], ",", 
   "\[IndentingNewLine]", "3"}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->
  "In[111]:=",ExpressionUUID->"cd734a99-8091-4dc1-8e3e-b6f7adc74e54"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "2", "]"}], ",", 
     RowBox[{"f", "[", "4", "]"}], ",", 
     RowBox[{"f", "[", "6", "]"}]}], "}"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{
     RowBox[{"f", "[", "6", "]"}], ",", 
     RowBox[{"lazyLists`Private`finiteGenerator", "[", 
      RowBox[{"f", ",", 
       RowBox[{"6", "+", "2"}], ",", "1", ",", "10", ",", "2"}], "]"}]}], 
    "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[111]=",ExpressionUUID->"cef07850-6708-460c-99b1-6d6cbd20eecb"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "3", "]"}], ",", 
     RowBox[{"f", "[", "5", "]"}], ",", 
     RowBox[{"f", "[", "7", "]"}]}], "}"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{
     RowBox[{"f", "[", "7", "]"}], ",", 
     RowBox[{"lazyLists`Private`finiteGenerator", "[", 
      RowBox[{"f", ",", 
       RowBox[{"7", "+", "2"}], ",", "1", ",", "10", ",", "2"}], "]"}]}], 
    "]"}]}], "]"}]], "Output",
 CellLabel->"Out[112]=",ExpressionUUID->"b98ac5a8-58a2-4100-bf83-78c8f870caec"]
}, Open  ]],

Cell["\<\
This also works with lazyRange, lazyPowerRange, and lazyNestList. \
lazySetState effectively re-creates these lists with a new starting value:\
\>", "Text",ExpressionUUID->"75e339ce-7d36-4821-a9c4-78a0c90eccd1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lazySetState", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", 
    RowBox[{"start", ",", " ", "step"}], "]"}], ",", "newStart"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"lazySetState", "[", 
  RowBox[{
   RowBox[{"lazyPowerRange", "[", 
    RowBox[{"start", ",", "r"}], "]"}], ",", "newStart"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"lazySetState", "[", 
  RowBox[{
   RowBox[{"lazyNestList", "[", 
    RowBox[{"f", ",", "start"}], "]"}], ",", "newStart"}], "]"}]}], "Input",
 CellLabel->
  "In[113]:=",ExpressionUUID->"49d0ed21-a0e9-422e-975e-ec265be2c6ac"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"newStart", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"step", "+", "newStart"}], ",", "step"}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->
  "Out[113]=",ExpressionUUID->"b2abd735-b43c-4090-afcd-280485a6eb5d"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"newStart", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", " ", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"r", " ", "newStart"}], ",", "r"}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[114]=",ExpressionUUID->"6efa2edc-d875-46b6-ad57-d5476cba37c2"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"newStart", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"f", "[", "#1", "]"}], ",", 
          RowBox[{"#2", "+", "1"}]}], "]"}]}], "]"}], "&"}], ")"}], "[", 
    RowBox[{
     RowBox[{"f", "[", "newStart", "]"}], ",", 
     RowBox[{"2", "+", "1"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[115]=",ExpressionUUID->"dfc72ffa-de2d-4a9f-8fee-5178d4f86944"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lazy Tuples", \
"Subsubsection",ExpressionUUID->"7a197ea5-ea97-4df5-882d-2ec92934d03b"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"lazyTuples", "[", 
     RowBox[{"{", 
      RowBox[{"list1", ",", " ", "list2", ",", " ", "..."}], "}"}], "]"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "0a9c259e-ec44-4809-aff7-cfacdf98b639"],
 " generates a lazyList form of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"Tuples", "[", 
     RowBox[{"{", 
      RowBox[{"list1", ",", " ", "list2", ",", " ", "..."}], "}"}], "]"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "b7d74634-6d98-4401-b345-6ccbd5062c08"],
 ". It is generated with a lazyGenerator, so ",
 StyleBox["lazySetState",
  FontWeight->"Bold"],
 " works with ",
 StyleBox["lazyTuples",
  FontWeight->"Bold"],
 ":"
}], "Text",ExpressionUUID->"be3b7eb7-42ab-4d0b-b67a-268bc608ec98"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lists", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "u", ",", " ", "v", ",", "w", ",", "x", ",", " ", "y", ",", " ", "z"}], 
      "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lzTup", " ", "=", " ", 
   RowBox[{"lazyTuples", "[", "lists", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"lzTup", ",", "10"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"Tuples", "[", "lists", "]"}], ",", "10"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"lazySetState", "[", 
  RowBox[{"lzTup", ",", "20"}], "]"}]}], "Input",
 CellLabel->
  "In[116]:=",ExpressionUUID->"5c822fe4-d3b7-4570-97dc-39b7f55775af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "z"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "x"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[118]=",ExpressionUUID->"a8a7c6f1-29a3-4ab4-9497-f184d855c69b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "z"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "x"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[119]=",ExpressionUUID->"b1f93b35-c6a3-4f6b-a4d6-7281602eadb0"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"b", ",", "2", ",", "v"}], "}"}], ",", 
   RowBox[{"lazyLists`Private`finiteGenerator", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"MapThread", "[", 
        RowBox[{"Part", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"u", ",", "v", ",", "w", ",", "x", ",", "y", ",", "z"}],
               "}"}]}], "}"}], ",", "#1"}], "}"}]}], "]"}], "&"}], "@*", 
      InterpretationBox[
       RowBox[{
        TagBox["CompiledFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                  Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", "_Integer", "}"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                  Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", "_Integer", "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "lazyLists`Private`n", "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"lazyLists`Private`c$", "=", 
                    RowBox[{"lazyLists`Private`n", "-", "1"}]}], ",", 
                    "lazyLists`Private`q$"}], "}"}], ",", 
                    RowBox[{"1", "+", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"lazyLists`Private`q$", "=", 
                    RowBox[{"Quotient", "[", 
                    
                    RowBox[{"lazyLists`Private`c$", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    RowBox[{"lazyLists`Private`c$", "=", 
                    RowBox[{"Mod", "[", 
                    
                    RowBox[{"lazyLists`Private`c$", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    "lazyLists`Private`q$"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"lazyLists`Private`i", ",", 
                    RowBox[{"{", 
                    RowBox[{"12", ",", "6", ",", "1"}], "}"}]}], "}"}]}], 
                    "]"}]}]}], "]"}], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       CompiledFunction[{10, 11.3, 5596}, {
         Blank[Integer]}, {{2, 0, 0}, {2, 1, 
        2}}, {{0, {2, 0, 8}}, {{12, 6, 1}, {2, 1, 0}}, {-1, {2, 0, 1}}, {
         1, {2, 0, 3}}}, {0, 11, 0, 0, 
        4}, {{12, 0, 1, 9}, {42, "CopyTensor", 2, 1, 0, 2, 1, 2}, {33, 2, 
         2}, {6, 8, 6}, {35, 2, 2, 3}, {6, 8, 4}, {3, 6}, {37, 2, 4, 2, 7}, {
         41, 262, 2, 0, 9, 2, 0, 7, 2, 0, 5}, {41, 261, 2, 0, 9, 2, 0, 7, 2, 
         0, 10}, {6, 10, 9}, {36, 6, 5, 2, 3}, {4, 4, 2, -5}, {41, 257, 2, 0, 
         3, 2, 1, 3, 2, 1, 2}, {1}}, 
        Function[{lazyLists`Private`n}, 
         Module[{
          lazyLists`Private`c$ = lazyLists`Private`n - 1, 
           lazyLists`Private`q$}, 1 + 
          Table[
           lazyLists`Private`q$ = 
             Quotient[lazyLists`Private`c$, lazyLists`Private`i]; 
            lazyLists`Private`c$ = 
             Mod[lazyLists`Private`c$, lazyLists`Private`i]; 
            lazyLists`Private`q$, {lazyLists`Private`i, {12, 6, 1}}]], 
         Listable], Evaluate],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}], ",", 
     RowBox[{"20", "+", "1"}], ",", "1", ",", "36", ",", "1"}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[120]=",ExpressionUUID->"b1762ed2-bf30-473b-b89b-1ee441ff219e"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"lazyTuples", "[", 
     RowBox[{"list", " ", ",", " ", "tupleLength"}], "]"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "52153906-1e36-4050-a5d1-cffa6f06212c"],
 " also works:"
}], "Text",ExpressionUUID->"c75a909d-d8f9-4086-95d5-538e82069ca1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"Tuples", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "6"}], "]"}], ",", 
   "10"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"lazyTuples", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "6"}], "]"}], ",", 
    "10"}], "]"}]}]}], "Input",
 CellLabel->
  "In[121]:=",ExpressionUUID->"857df8f9-654a-41c9-b169-fe69f6e34ad7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "a", ",", "a"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "a", ",", "b"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "a", ",", "c"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "b", ",", "a"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "b", ",", "b"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "b", ",", "c"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "c", ",", "a"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "c", ",", "b"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "c", ",", "c"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "b", ",", "a", ",", "a"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->
  "Out[121]=",ExpressionUUID->"d6743e20-1aa1-432b-8324-baf6cfc12e3f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "a", ",", "a"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "a", ",", "b"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "a", ",", "c"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "b", ",", "a"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "b", ",", "b"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "b", ",", "c"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "c", ",", "a"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "c", ",", "b"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "c", ",", "c"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "b", ",", "a", ",", "a"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[122]=",ExpressionUUID->"ae7834ba-c683-4394-8021-330ff20cda63"]
}, Open  ]],

Cell["\<\
lazyTuples works with held symbols, which is useful when dealing with large \
lists since this will prevent large amounts of data from being copied over \
and also prevents the full list from being displayed in the tail of the \
lazyList:\
\>", "Text",ExpressionUUID->"572d1fac-1428-4fd3-bf76-3511a3d4043c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"largeLists", " ", "=", " ", 
   RowBox[{"Range", "/@", 
    RowBox[{"{", 
     RowBox[{"50000", ",", "40000", ",", "60000", ",", "80000"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"lazyTuples", "[", "largeLists", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lazyTuples", "[", 
  RowBox[{"Hold", "[", "largeLists", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "10"}], "]"}]}]}], "Input",
 CellLabel->
  "In[123]:=",ExpressionUUID->"64d9a187-5a22-4ad8-aeb6-78eb11f9595a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"lazyList", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
           RowBox[{"lazyLists`Private`rightSidedGenerator", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"MapThread", "[", 
                RowBox[{"Part", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], "}"}], ",", "#1"}], "}"}]}], 
                "]"}], "&"}], "@*", 
              InterpretationBox[
               RowBox[{
                TagBox["CompiledFunction",
                 "SummaryHead"], "[", 
                
                DynamicModuleBox[{Typeset`open$$ = False, 
                 Typeset`embedState$$ = "Ready"}, 
                 TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", "_Integer", "}"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", "_Integer", "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "lazyLists`Private`n", "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"lazyLists`Private`c$", "=", 
                    RowBox[{"lazyLists`Private`n", "-", "1"}]}], ",", 
                    "lazyLists`Private`q$"}], "}"}], ",", 
                    RowBox[{"1", "+", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"lazyLists`Private`q$", "=", 
                    RowBox[{"Quotient", "[", 
                    
                    RowBox[{"lazyLists`Private`c$", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    RowBox[{"lazyLists`Private`c$", "=", 
                    RowBox[{"Mod", "[", 
                    
                    RowBox[{"lazyLists`Private`c$", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    "lazyLists`Private`q$"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"lazyLists`Private`i", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"192000000000000", ",", "4800000000", ",", 
                    "80000", ",", "1"}], "}"}]}], "}"}]}], "]"}]}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]},
                  "SummaryPanel"],
                 DynamicModuleValues:>{}], "]"}],
               CompiledFunction[{10, 11.3, 5596}, {
                 Blank[Integer]}, {{2, 0, 0}, {2, 1, 
                2}}, {{0, {2, 0, 8}}, {{192000000000000, 4800000000, 80000, 
                  1}, {2, 1, 0}}, {-1, {2, 0, 1}}, {1, {2, 0, 3}}}, {0, 11, 0,
                 0, 4}, {{12, 0, 1, 9}, {
                 42, "CopyTensor", 2, 1, 0, 2, 1, 2}, {33, 2, 2}, {6, 8, 6}, {
                 35, 2, 2, 3}, {6, 8, 4}, {3, 6}, {37, 2, 4, 2, 7}, {41, 262, 
                 2, 0, 9, 2, 0, 7, 2, 0, 5}, {41, 261, 2, 0, 9, 2, 0, 7, 2, 0,
                  10}, {6, 10, 9}, {36, 6, 5, 2, 3}, {4, 4, 2, -5}, {41, 257, 
                 2, 0, 3, 2, 1, 3, 2, 1, 2}, {1}}, 
                Function[{lazyLists`Private`n}, 
                 
                 Module[{
                  lazyLists`Private`c$ = lazyLists`Private`n - 1, 
                   lazyLists`Private`q$}, 1 + 
                  Table[lazyLists`Private`q$ = 
                    Quotient[lazyLists`Private`c$, lazyLists`Private`i]; 
                    lazyLists`Private`c$ = 
                    Mod[lazyLists`Private`c$, lazyLists`Private`i]; 
                    lazyLists`Private`q$, {
                    lazyLists`Private`i, {192000000000000, 4800000000, 80000, 
                    1}}]], Listable], Evaluate],
               Editable->False,
               SelectWithContents->True,
               Selectable->False]}], ",", 
             RowBox[{"1", "+", "1"}], ",", "1", ",", "1"}], "]"}]}], "]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{85., {4., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{72., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 124, 16514359115163126255, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{84., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 124, 16514359115163126255, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{63., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 124, 16514359115163126255, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{107., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16514359115163126255 === $SessionID, 
   Out[124], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->
  "Out[124]=",ExpressionUUID->"33734cc6-0a79-4a00-a95b-2304040cfa48"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"lazyLists`Private`rightSidedGenerator", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"MapThread", "[", 
        RowBox[{"Part", ",", 
         RowBox[{"{", 
          RowBox[{"largeLists", ",", "#1"}], "}"}]}], "]"}], "&"}], "@*", 
      InterpretationBox[
       RowBox[{
        TagBox["CompiledFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                  Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", "_Integer", "}"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                  Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", "_Integer", "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "lazyLists`Private`n", "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"lazyLists`Private`c$", "=", 
                    RowBox[{"lazyLists`Private`n", "-", "1"}]}], ",", 
                    "lazyLists`Private`q$"}], "}"}], ",", 
                    RowBox[{"1", "+", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"lazyLists`Private`q$", "=", 
                    RowBox[{"Quotient", "[", 
                    
                    RowBox[{"lazyLists`Private`c$", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    RowBox[{"lazyLists`Private`c$", "=", 
                    RowBox[{"Mod", "[", 
                    
                    RowBox[{"lazyLists`Private`c$", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    "lazyLists`Private`q$"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"lazyLists`Private`i", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"192000000000000", ",", "4800000000", ",", 
                    "80000", ",", "1"}], "}"}]}], "}"}]}], "]"}]}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       CompiledFunction[{10, 11.3, 5596}, {
         Blank[Integer]}, {{2, 0, 0}, {2, 1, 
        2}}, {{0, {2, 0, 8}}, {{192000000000000, 4800000000, 80000, 1}, {2, 1,
           0}}, {-1, {2, 0, 1}}, {1, {2, 0, 3}}}, {0, 11, 0, 0, 
        4}, {{12, 0, 1, 9}, {42, "CopyTensor", 2, 1, 0, 2, 1, 2}, {33, 2, 
         2}, {6, 8, 6}, {35, 2, 2, 3}, {6, 8, 4}, {3, 6}, {37, 2, 4, 2, 7}, {
         41, 262, 2, 0, 9, 2, 0, 7, 2, 0, 5}, {41, 261, 2, 0, 9, 2, 0, 7, 2, 
         0, 10}, {6, 10, 9}, {36, 6, 5, 2, 3}, {4, 4, 2, -5}, {41, 257, 2, 0, 
         3, 2, 1, 3, 2, 1, 2}, {1}}, 
        Function[{lazyLists`Private`n}, 
         Module[{
          lazyLists`Private`c$ = lazyLists`Private`n - 1, 
           lazyLists`Private`q$}, 1 + 
          Table[lazyLists`Private`q$ = 
             Quotient[lazyLists`Private`c$, lazyLists`Private`i]; 
            lazyLists`Private`c$ = 
             Mod[lazyLists`Private`c$, lazyLists`Private`i]; 
            lazyLists`Private`q$, {
            lazyLists`Private`i, {192000000000000, 4800000000, 80000, 1}}]], 
         Listable], Evaluate],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}], ",", 
     RowBox[{"1", "+", "1"}], ",", "1", ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[125]=",ExpressionUUID->"10cd94a5-5edb-4092-8418-beb7ba677681"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[126]=",ExpressionUUID->"7a8762d7-98b6-4740-b05b-86afc39f1f76"]
}, Open  ]],

Cell["Performance is roughly equal:", \
"Text",ExpressionUUID->"6ad83d6f-b3eb-4d9b-8d0a-d4803fce9d2d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"lazyTuples", "[", "largeLists", "]"}], ",", "100000"}], "]"}], 
   ";"}], "//", "RepeatedTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"lazyTuples", "[", 
      RowBox[{"Hold", "[", "largeLists", "]"}], "]"}], ",", "100000"}], "]"}],
    ";"}], "//", "RepeatedTiming"}]}], "Input",
 CellLabel->
  "In[127]:=",ExpressionUUID->"7797c505-283e-44fe-8288-25de541eb115"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9025733115470131462`2.", ",", "Null"}], "}"}]], "Output",
 CellLabel->
  "Out[127]=",ExpressionUUID->"2cf1e489-d84d-4df3-9e58-53c543531654"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8766742702820580213`4.", ",", "Null"}], "}"}]], "Output",
 CellLabel->"Out[128]=",ExpressionUUID->"187befa6-de4a-488e-acde-d2ea287b7846"]
}, Open  ]],

Cell[TextData[{
 "Additionally, ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"lazyTuples", "[", 
     RowBox[{"{", 
      RowBox[{"int1", ",", " ", "int2", ",", "int3", ",", " ", "..."}], "}"}],
      "]"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "4d1a323a-e9c4-466d-8d16-e3ee7cdb203a"],
 " generates the lazy form of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"Tuples", "[", 
     RowBox[{"Range", "/@", 
      RowBox[{"{", 
       RowBox[{"int1", ",", " ", "int2", ",", "int3", ",", " ", "..."}], 
       "}"}]}], "]"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "721929f7-8144-4e39-ace1-4d839e9d7dc0"],
 ". This form is very handy, because the general case of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"lazyTuples", "[", 
     RowBox[{"{", 
      RowBox[{"list1", ",", " ", "list2", ",", " ", "..."}], "}"}], "]"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "cbab4707-e095-4d05-8958-ac62e99f4141"],
 " can be easily reduced to this simpler form by substituting the integers \
with elements from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"list1", ",", " ", "list2", ",", " ", "..."}], "}"}], 
   TraditionalForm]],ExpressionUUID->"e479e6ed-cd36-476f-9b15-d2a2f59aa3b6"]
}], "Text",ExpressionUUID->"af0b444f-eef9-4deb-a375-a8ce20bed78a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"integers", " ", "=", 
   RowBox[{"Length", "/@", "lists"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"integerLzTup", "=", 
  RowBox[{"lazyTuples", "[", "integers", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"indices", " ", "=", " ", 
  RowBox[{"First", "@", 
   RowBox[{"Take", "[", 
    RowBox[{"integerLzTup", ",", "10"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"Tuples", "[", 
    RowBox[{"Range", "/@", "integers"}], "]"}], ",", "10"}], "]"}]}], "Input",
 CellLabel->
  "In[129]:=",ExpressionUUID->"b2a2a167-b703-47ec-b403-e71deae5282a"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"lazyLists`Private`finiteGenerator", "[", 
    RowBox[{
     InterpretationBox[
      RowBox[{
       TagBox["CompiledFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Thickness[0.038461538461538464`], {
                   FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                 AspectRatio -> 1, ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                 Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", "_Integer", "}"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Thickness[0.038461538461538464`], {
                   FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                 AspectRatio -> 1, ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                 Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", "_Integer", "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "lazyLists`Private`n", "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"lazyLists`Private`c$", "=", 
                    RowBox[{"lazyLists`Private`n", "-", "1"}]}], ",", 
                    "lazyLists`Private`q$"}], "}"}], ",", 
                    RowBox[{"1", "+", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"lazyLists`Private`q$", "=", 
                    RowBox[{"Quotient", "[", 
                    
                    RowBox[{"lazyLists`Private`c$", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    RowBox[{"lazyLists`Private`c$", "=", 
                    RowBox[{"Mod", "[", 
                    
                    RowBox[{"lazyLists`Private`c$", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    "lazyLists`Private`q$"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"lazyLists`Private`i", ",", 
                    RowBox[{"{", 
                    RowBox[{"12", ",", "6", ",", "1"}], "}"}]}], "}"}]}], 
                    "]"}]}]}], "]"}], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      CompiledFunction[{10, 11.3, 5596}, {
        Blank[Integer]}, {{2, 0, 0}, {2, 1, 
       2}}, {{0, {2, 0, 8}}, {{12, 6, 1}, {2, 1, 0}}, {-1, {2, 0, 1}}, {
        1, {2, 0, 3}}}, {0, 11, 0, 0, 
       4}, {{12, 0, 1, 9}, {42, "CopyTensor", 2, 1, 0, 2, 1, 2}, {33, 2, 2}, {
        6, 8, 6}, {35, 2, 2, 3}, {6, 8, 4}, {3, 6}, {37, 2, 4, 2, 7}, {41, 
        262, 2, 0, 9, 2, 0, 7, 2, 0, 5}, {41, 261, 2, 0, 9, 2, 0, 7, 2, 0, 
        10}, {6, 10, 9}, {36, 6, 5, 2, 3}, {4, 4, 2, -5}, {41, 257, 2, 0, 3, 
        2, 1, 3, 2, 1, 2}, {1}}, 
       Function[{lazyLists`Private`n}, 
        Module[{
         lazyLists`Private`c$ = lazyLists`Private`n - 1, 
          lazyLists`Private`q$}, 1 + 
         Table[lazyLists`Private`q$ = 
            Quotient[lazyLists`Private`c$, lazyLists`Private`i]; 
           lazyLists`Private`c$ = 
            Mod[lazyLists`Private`c$, lazyLists`Private`i]; 
           lazyLists`Private`q$, {lazyLists`Private`i, {12, 6, 1}}]], 
        Listable], Evaluate],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     RowBox[{"1", "+", "1"}], ",", "1", ",", "36", ",", "1"}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->
  "Out[130]=",ExpressionUUID->"206d86e5-207a-4ff3-b106-dd27d012096b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[131]=",ExpressionUUID->"c39d6b3c-481d-4b58-aaf6-6fda065db26f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[132]=",ExpressionUUID->"b0b925f1-2cf4-4c13-9b9d-74d360114228"]
}, Open  ]],

Cell[TextData[{
 "Replacing the indices from ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"lazyTuples", "[", "integers", "]"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "d0c88d11-314f-421c-97d0-af85943f94e2"],
 " with elements from ",
 Cell[BoxData[
  FormBox["lists", TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"9cbbab75-761e-4489-9d97-720899683120"],
 " can be done with ",
 StyleBox["bulkExtractElementsUsingIndexList",
  FontWeight->"Bold"],
 ", which uses ",
 StyleBox["Extract",
  FontWeight->"Bold"],
 ":"
}], "Text",ExpressionUUID->"4cff0ad7-883b-4e4a-aa83-d0bab0896d34"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"bulkExtractElementsUsingIndexList", "[", "\[IndentingNewLine]", 
  RowBox[{"lists", ",", "\[IndentingNewLine]", "indices"}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"Tuples", "[", "lists", "]"}], ",", "10"}], "]"}]}], "Input",
 CellLabel->
  "In[133]:=",ExpressionUUID->"30ab54c6-37c9-461d-a28a-d719e2850ac6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "z"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "x"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[133]=",ExpressionUUID->"c3a601f8-7ed6-430b-b289-4ea132548f46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "z"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "x"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[134]=",ExpressionUUID->"ef465073-7fab-4597-9366-10d989592564"]
}, Open  ]],

Cell["This function also works with held symbols:", \
"Text",ExpressionUUID->"603e3c3d-5264-4b1d-8348-291899842c1a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bulkExtractElementsUsingIndexList", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Hold", "[", "lists", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Hold", "[", "indices", "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->
  "In[135]:=",ExpressionUUID->"0945acd9-b6a3-4f88-acc3-75755590d6be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "z"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "v"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "w"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2", ",", "x"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[135]=",ExpressionUUID->"fba5191d-84f0-4326-889d-fe2898fc3dac"]
}, Open  ]],

Cell[TextData[{
 StyleBox["bulkExtractElementsUsingIndexList",
  FontWeight->"Bold"],
 " also works for indices generated with ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"lazyTuples", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "list", "]"}], "]"}], ",", "tupLength"}], "]"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "03e05b84-f635-4e36-a0f0-03606fc1e6ea"],
 ", though you need to specify the length of the tuples generated:"
}], "Text",ExpressionUUID->"f2d4071b-8b8a-42e1-bcc1-fd60938914c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list", "=", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"tupLength", "=", "3"}], ",", "\[IndentingNewLine]", "indices"}],
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"indices", "=", 
     RowBox[{"First", "@", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"lazyTuples", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "list", "]"}], "]"}], ",", "tupLength"}], 
         "]"}], ",", "10"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "indices", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "@", 
     RowBox[{"bulkExtractElementsUsingIndexList", "[", "\[IndentingNewLine]", 
      RowBox[{
      "list", ",", "\[IndentingNewLine]", "indices", ",", 
       "\[IndentingNewLine]", "tupLength"}], "\[IndentingNewLine]", "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "@", 
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Tuples", "[", 
        RowBox[{"list", ",", "tupLength"}], "]"}], ",", "10"}], "]"}]}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[136]:=",ExpressionUUID->"43124aa8-3a3d-4dea-957a-6fac34f0d61b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}]}], "}"}]], "Print",
 CellLabel->
  "During evaluation of \
In[136]:=",ExpressionUUID->"9021f323-9069-4092-ac1d-6fb67cd200e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "e"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "e"}], "}"}]}], "}"}]], "Print",
 CellLabel->
  "During evaluation of \
In[136]:=",ExpressionUUID->"c3882c79-f615-4340-9d7c-6c03e7f958a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "e"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "e"}], "}"}]}], "}"}]], "Print",
 CellLabel->
  "During evaluation of \
In[136]:=",ExpressionUUID->"775eaab2-f7ef-4c9d-9028-c87e5de089b3"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox["lazyTuples",
  FontWeight->"Bold"],
 " has options to specify the starting point in the list and the step size \
with which to traverse it:"
}], "Text",ExpressionUUID->"3dfb3249-6b07-4b15-b052-1e556c742813"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Options", "[", "lazyTuples", "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"lazyTuples", "[", 
     RowBox[{"integers", ",", " ", 
      RowBox[{"\"\<Start\>\"", "\[Rule]", " ", "10"}], ",", " ", 
      RowBox[{"\"\<StepSize\>\"", "\[Rule]", " ", "2"}]}], "]"}], ",", "6"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"Tuples", "[", 
    RowBox[{"Range", "/@", "integers"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20", ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellLabel->
  "In[137]:=",ExpressionUUID->"a018e5d0-7d7c-4b4d-ba6b-fda9b4773692"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"StepSize\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"Start\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"FiniteIndexCutoff\"\>", "\[Rule]", "10000000000"}]}], 
  "}"}]], "Output",
 CellLabel->
  "Out[137]=",ExpressionUUID->"c66b248e-6d62-490f-9b5f-25044da8e4ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[138]=",ExpressionUUID->"a7ca2f3e-a01a-497f-913c-700b914f8cd3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[139]=",ExpressionUUID->"6ffb3579-2751-4bf5-b81c-580451414a17"]
}, Open  ]],

Cell[TextData[{
 "The basis for lazyTuples is the function that generates the elements of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"lazyTuples", "[", "integers", "]"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "6f88da6e-fd5e-4edf-b7e3-8dd47465147c"],
 ". You can invoke it directly with ",
 StyleBox["rangeTuplesAtPositions",
  FontWeight->"Bold"],
 ", which returns a listable compiled function (or a regular function if \
machine integers are insufficient for the problem):"
}], "Text",ExpressionUUID->"45dd6e62-9a31-4e4f-9b7c-c6c204e476a4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tuplesGenerator", " ", "=", " ", 
  RowBox[{
  "rangeTuplesAtPositions", "[", "integers", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"randomPositions", " ", "=", " ", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"Times", "@@", "integers"}]}], "}"}], ",", "10"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"tuplesGenerator", "[", "randomPositions", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"Tuples", "[", 
    RowBox[{"Range", "/@", "integers"}], "]"}], ",", "randomPositions"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"%%", "\[Equal]", "%"}]}], "Input",
 CellLabel->
  "In[140]:=",ExpressionUUID->"2b0d041f-a811-4982-a9d5-1f40f27928db"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", "_Integer", "}"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                   LineBreakWithin -> False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", "_Integer", "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "lazyLists`Private`n", "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"lazyLists`Private`c$", "=", 
                    RowBox[{"lazyLists`Private`n", "-", "1"}]}], ",", 
                    "lazyLists`Private`q$"}], "}"}], ",", 
                    RowBox[{"1", "+", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"lazyLists`Private`q$", "=", 
                    RowBox[{"Quotient", "[", 
                    
                    RowBox[{"lazyLists`Private`c$", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    RowBox[{"lazyLists`Private`c$", "=", 
                    RowBox[{"Mod", "[", 
                    
                    RowBox[{"lazyLists`Private`c$", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    "lazyLists`Private`q$"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"lazyLists`Private`i", ",", 
                    RowBox[{"{", 
                    RowBox[{"12", ",", "6", ",", "1"}], "}"}]}], "}"}]}], 
                    "]"}]}]}], "]"}], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{10, 11.3, 5596}, {
    Blank[Integer]}, {{2, 0, 0}, {2, 1, 
   2}}, {{0, {2, 0, 8}}, {{12, 6, 1}, {2, 1, 0}}, {-1, {2, 0, 1}}, {
    1, {2, 0, 3}}}, {0, 11, 0, 0, 
   4}, {{12, 0, 1, 9}, {42, "CopyTensor", 2, 1, 0, 2, 1, 2}, {33, 2, 2}, {6, 
    8, 6}, {35, 2, 2, 3}, {6, 8, 4}, {3, 6}, {37, 2, 4, 2, 7}, {41, 262, 2, 0,
     9, 2, 0, 7, 2, 0, 5}, {41, 261, 2, 0, 9, 2, 0, 7, 2, 0, 10}, {6, 10, 
    9}, {36, 6, 5, 2, 3}, {4, 4, 2, -5}, {41, 257, 2, 0, 3, 2, 1, 3, 2, 1, 
    2}, {1}}, 
   Function[{lazyLists`Private`n}, 
    Module[{
     lazyLists`Private`c$ = lazyLists`Private`n - 1, lazyLists`Private`q$}, 1 + 
     Table[lazyLists`Private`q$ = 
        Quotient[lazyLists`Private`c$, lazyLists`Private`i]; 
       lazyLists`Private`c$ = Mod[lazyLists`Private`c$, lazyLists`Private`i]; 
       lazyLists`Private`q$, {lazyLists`Private`i, {12, 6, 1}}]], Listable], 
   Evaluate],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[140]=",ExpressionUUID->"4155302f-f639-497e-9740-2318c5b477a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "32", ",", "25", ",", "21", ",", "33", ",", "8", ",", "24", ",", "11", ",", 
   "31", ",", "22", ",", "14"}], "}"}]], "Output",
 CellLabel->
  "Out[141]=",ExpressionUUID->"09873bc0-83b7-46d8-aa32-e39113ebbf15"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[142]=",ExpressionUUID->"28c34a21-4ce4-490c-b2a3-f714d9f1526a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[143]=",ExpressionUUID->"5ea1e0b5-ce09-42dd-95d7-f758c970322e"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[144]=",ExpressionUUID->"3ddd9488-357c-4034-9242-91dc7524b1e2"]
}, Open  ]],

Cell[TextData[{
 "Note that very large lazyLists of tuples will be represented as infinitely \
large in order to not have to carry a big integer around. In the example \
below, the former list uses ",
 StyleBox["finiteGenerator",
  FontWeight->"Bold"],
 " while the latter uses ",
 StyleBox["rightSidedGenerator",
  FontWeight->"Bold"],
 " (which is unbounded). This means that large lazyTuples can give unexpected \
errors when you try to advance them to an ill-defined position with ",
 StyleBox["lazySetState",
  FontWeight->"Bold"],
 ". "
}], "Text",ExpressionUUID->"5b2acdb3-03b5-4cc0-9973-41f73f4b9630"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lazyTuples", "[", 
  RowBox[{
   RowBox[{"Range", "[", "100", "]"}], ",", "2"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"lazyTuples", "[", 
  RowBox[{
   RowBox[{"Range", "[", "100", "]"}], ",", "20"}], "]"}]}], "Input",
 CellLabel->
  "In[145]:=",ExpressionUUID->"0e89572c-64bd-4c36-a906-e6b723affb4b"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"lazyLists`Private`finiteGenerator", "[", 
    RowBox[{
     InterpretationBox[
      RowBox[{
       TagBox["CompiledFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Thickness[0.038461538461538464`], {
                   FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                 AspectRatio -> 1, ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                 Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", "_Integer", "}"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Thickness[0.038461538461538464`], {
                   FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                 AspectRatio -> 1, ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                 Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", "_Integer", "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "lazyLists`Private`n", "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"lazyLists`Private`c$", "=", 
                    RowBox[{"lazyLists`Private`n", "-", "1"}]}], ",", 
                    "lazyLists`Private`q$"}], "}"}], ",", 
                    RowBox[{"1", "+", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"lazyLists`Private`q$", "=", 
                    RowBox[{"Quotient", "[", 
                    
                    RowBox[{"lazyLists`Private`c$", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    RowBox[{"lazyLists`Private`c$", "=", 
                    RowBox[{"Mod", "[", 
                    
                    RowBox[{"lazyLists`Private`c$", ",", 
                    "lazyLists`Private`i"}], "]"}]}], ";", 
                    "lazyLists`Private`q$"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"lazyLists`Private`i", ",", 
                    RowBox[{"{", 
                    RowBox[{"100", ",", "1"}], "}"}]}], "}"}]}], "]"}]}]}], 
                    "]"}], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      CompiledFunction[{10, 11.3, 5596}, {
        Blank[Integer]}, {{2, 0, 0}, {2, 1, 
       2}}, {{{100, 1}, {2, 1, 0}}, {0, {2, 0, 8}}, {-1, {2, 0, 1}}, {
        1, {2, 0, 3}}}, {0, 11, 0, 0, 
       4}, {{12, 0, 1, 9}, {42, "CopyTensor", 2, 1, 0, 2, 1, 2}, {33, 2, 2}, {
        6, 8, 6}, {35, 2, 2, 3}, {6, 8, 4}, {3, 6}, {37, 2, 4, 2, 7}, {41, 
        262, 2, 0, 9, 2, 0, 7, 2, 0, 5}, {41, 261, 2, 0, 9, 2, 0, 7, 2, 0, 
        10}, {6, 10, 9}, {36, 6, 5, 2, 3}, {4, 4, 2, -5}, {41, 257, 2, 0, 3, 
        2, 1, 3, 2, 1, 2}, {1}}, 
       Function[{lazyLists`Private`n}, 
        Module[{
         lazyLists`Private`c$ = lazyLists`Private`n - 1, 
          lazyLists`Private`q$}, 1 + 
         Table[lazyLists`Private`q$ = 
            Quotient[lazyLists`Private`c$, lazyLists`Private`i]; 
           lazyLists`Private`c$ = 
            Mod[lazyLists`Private`c$, lazyLists`Private`i]; 
           lazyLists`Private`q$, {lazyLists`Private`i, {100, 1}}]], Listable],
        Evaluate],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     RowBox[{"1", "+", "1"}], ",", "1", ",", "10000", ",", "1"}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->
  "Out[145]=",ExpressionUUID->"7be8a6f0-39d2-4f0c-a5f9-032624ff0bda"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"lazyLists`Private`rightSidedGenerator", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"Null", ",", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"lazyLists`Private`c", "=", 
            RowBox[{"#1", "-", "1"}]}], ",", "lazyLists`Private`q"}], "}"}], 
         ",", 
         RowBox[{"1", "+", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"lazyLists`Private`q", ",", "lazyLists`Private`c"}], 
               "}"}], "=", 
              RowBox[{"QuotientRemainder", "[", 
               RowBox[{"lazyLists`Private`c", ",", "lazyLists`Private`i"}], 
               "]"}]}], ";", "lazyLists`Private`q"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "lazyLists`Private`i", ",", "lazyLists`Private`baseVar$42626"}], 
             "}"}]}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", "Listable", "}"}]}], "]"}], ",", 
     RowBox[{"1", "+", "1"}], ",", "1", ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[146]=",ExpressionUUID->"88da7b18-3f5b-4c38-b8a0-cbf6afb0dae4"]
}, Open  ]],

Cell[TextData[{
 "This behaviour can be controlled with the ",
 Cell[BoxData[
  FormBox["\"\<FiniteIndexCutoff\>\"", TraditionalForm]],ExpressionUUID->
  "e64d3c12-b8f3-4272-ad32-a7a8bf80f0e2"],
 " option:"
}], "Text",ExpressionUUID->"1a08f7a2-daa4-411b-a50d-53e3b3940e90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lazyTuples", "[", 
  RowBox[{
   RowBox[{"Range", "[", "100", "]"}], ",", "20", ",", 
   RowBox[{"\"\<FiniteIndexCutoff\>\"", "\[Rule]", " ", "\[Infinity]"}]}], 
  "]"}]], "Input",
 CellLabel->
  "In[147]:=",ExpressionUUID->"2c38b85b-e0d7-4f1e-87c2-397b992f2958"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"lazyLists`Private`finiteGenerator", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"Null", ",", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"lazyLists`Private`c", "=", 
            RowBox[{"#1", "-", "1"}]}], ",", "lazyLists`Private`q"}], "}"}], 
         ",", 
         RowBox[{"1", "+", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"lazyLists`Private`q", ",", "lazyLists`Private`c"}], 
               "}"}], "=", 
              RowBox[{"QuotientRemainder", "[", 
               RowBox[{"lazyLists`Private`c", ",", "lazyLists`Private`i"}], 
               "]"}]}], ";", "lazyLists`Private`q"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "lazyLists`Private`i", ",", "lazyLists`Private`baseVar$42626"}], 
             "}"}]}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", "Listable", "}"}]}], "]"}], ",", 
     RowBox[{"1", "+", "1"}], ",", "1", ",", 
     "10000000000000000000000000000000000000000", ",", "1"}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->"Out[147]=",ExpressionUUID->"c3860338-e9bc-4614-b326-0f0024bbb82f"]
}, Open  ]],

Cell[TextData[{
 "Finally, there is the special case ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"lazyTuples", "[", "n", "]"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "9fff24fa-5558-44f7-8ffe-905d7daedd98"],
 ", which is an infinite lazyList that generates all n-tuples of positive \
integers:"
}], "Text",ExpressionUUID->"395ef5f8-2805-4660-be78-c3dae52b8407"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"infTuples", "=", 
   RowBox[{"lazyTuples", "[", "4", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"infTuples", ",", "75"}], "]"}]}]}], "Input",
 CellLabel->
  "In[148]:=",ExpressionUUID->"563961ab-ad80-4e49-9cc7-22dda1b09952"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "5", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[149]=",ExpressionUUID->"e541457f-7ca2-4189-a8c3-cb7519c45f54"]
}, Open  ]],

Cell[TextData[{
 "Check that it agrees with ",
 StyleBox["Tuples",
  FontWeight->"Bold"],
 " for tuples that sum to less than 9. Note that ",
 StyleBox["Tuples",
  FontWeight->"Bold"],
 " generates elements in a different order, so we have to sort first when we \
compare:"
}], "Text",ExpressionUUID->"bb515a1d-5b56-40e1-8eb9-be80829a9e54"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sort", "@", 
   RowBox[{"Select", "[", 
    RowBox[{"%", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Total", "[", "#", "]"}], "<", "9"}], "&"}]}], "]"}]}], "===", 
  RowBox[{"Sort", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Tuples", "[", 
      RowBox[{
       RowBox[{"Range", "[", "10", "]"}], ",", "4"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Total", "[", "#", "]"}], "<", "9"}], "&"}]}], 
    "]"}]}]}]], "Input",
 CellLabel->
  "In[150]:=",ExpressionUUID->"45f4a44a-c327-4163-8fc5-6d00fc6578cf"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[150]=",ExpressionUUID->"1f17123a-1114-46c1-bd00-4226dc33fc1b"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"lazyTuples", "[", "n", "]"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "5a330b88-90c5-469b-bdd9-0c1008b6418e"],
 " is implemented as a ",
 StyleBox["lazyNestList",
  FontWeight->"Bold"],
 ", so you can set its state by specifying the tuple where you want to start. \
This can even be a tuple of different length:"
}], "Text",ExpressionUUID->"babf8f36-be29-40fb-87b7-a4b63476bf93"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lazySetState", "[", 
  RowBox[{"infTuples", ",", " ", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "50"}], "]"}]}]}], "Input",
 CellLabel->
  "In[151]:=",ExpressionUUID->"64826d1a-7bf3-40cc-82ab-9615e483ce5d"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{
           InterpretationBox[
            RowBox[{
             TagBox["CompiledFunction",
              "SummaryHead"], "[", 
             
             DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
              "Ready"}, 
              TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "lazyLists`Private`tuple", "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"lazyLists`Private`list", "=", 
                    RowBox[{"lazyLists`Private`tuple", "-", "1"}]}], ",", 
                    "lazyLists`Private`first"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"lazyLists`Private`first", "=", 
                    RowBox[{"First", "[", "lazyLists`Private`list", "]"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"lazyLists`Private`first", "\[Equal]", 
                    RowBox[{"Total", "[", "lazyLists`Private`list", "]"}]}], 
                    ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "lazyLists`Private`list", "]"}], 
                    "-", "1"}], "}"}]}], "]"}], ",", 
                    RowBox[{"lazyLists`Private`first", "+", "2"}]}], "]"}], 
                    ",", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, ImageSize -> {{1, 
                    300}, Automatic}], LineBreakWithin -> False], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "Combinatorica`Private`l", "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Combinatorica`Private`n", "=", 
                    RowBox[{"Plus", "@@", "Combinatorica`Private`l"}]}], ",", 
                    
                    RowBox[{"Combinatorica`Private`nl", "=", 
                    "Combinatorica`Private`l"}], ",", 
                    RowBox[{"Combinatorica`Private`t", "=", 
                    RowBox[{"Length", "[", "Combinatorica`Private`l", "]"}]}],
                     ",", "Combinatorica`Private`i"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Combinatorica`Private`l", "\[LeftDoubleBracket]",
                     "Combinatorica`Private`t", "\[RightDoubleBracket]"}], 
                    "\[Equal]", "0"}], ",", 
                    RowBox[{"Combinatorica`Private`t", "--"}]}], "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"Combinatorica`Private`nl", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"Combinatorica`Private`t", "-", "1"}], 
                    "\[RightDoubleBracket]"}], "++"}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Combinatorica`Private`nl", 
                    "\[LeftDoubleBracket]", "Combinatorica`Private`i", 
                    "\[RightDoubleBracket]"}], "=", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Combinatorica`Private`i", ",", 
                    "Combinatorica`Private`t", ",", 
                    RowBox[{"Length", "[", "Combinatorica`Private`l", "]"}]}],
                     "}"}]}], "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"Combinatorica`Private`nl", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"Length", "[", "Combinatorica`Private`l", "]"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{"Plus", "@@", 
                    RowBox[{"Take", "[", 
                    RowBox[{"Combinatorica`Private`l", ",", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", "Combinatorica`Private`l", "]"}], 
                    "-", "Combinatorica`Private`t", "+", "1"}], ")"}]}]}], 
                    "]"}]}], "-", "1"}]}], ";", 
                    "Combinatorica`Private`nl"}]}], "]"}], ImageSize -> {{1, 
                    500}, Automatic}, BaselinePosition -> Baseline, 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True], "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{10, 11.3, 5468}, {{
                    Blank[Integer], 1}}, {{2, 1, 0}, {2, 1, 
                    2}}, {{0, {2, 0, 0}}, {-1, {2, 0, 9}}, {1, {2, 0, 8}}}, {
                    1, 14, 0, 0, 5}, {{42, "CopyTensor", 2, 1, 0, 2, 1, 2}, {
                    6, 0, 2}, {33, 2, 7}, {6, 0, 12}, {3, 4}, {37, 2, 12, 2, 
                    5}, {12, 2, 5, 10}, {6, 10, 2}, {4, 12, 7, -3}, {
                    42, "CopyTensor", 2, 1, 0, 2, 1, 2}, {33, 0, 12}, {38, 0, 
                    0, 12, 0, 6}, {24, 6, 0, 0}, {2, 0, 5}, {6, 12, 6}, {41, 
                    258, 2, 0, 6, 2, 0, 8, 2, 0, 4}, {6, 4, 12}, {3, -6}, {12,
                     12, 9, 6}, {38, 2, 0, 6, 0, 4}, {12, 12, 9, 6}, {12, 4, 
                    8, 7}, {39, 2, 0, 6, 0, 7}, {33, 0, 6}, {
                    42, "IteratorCountI", 2, 0, 12, 2, 0, 6, 2, 0, 10}, {6, 9,
                     6}, {3, 3}, {12, 12, 6, 5}, {39, 2, 0, 5, 0, 0}, {4, 6, 
                    10, -2}, {33, 0, 7}, {33, 0, 3}, {18, 12, 10}, {12, 3, 10,
                     8, 3}, {18, 3, 10}, {42, "Take", 2, 1, 0, 2, 0, 0, 2, 0, 
                    10, 2, 1, 4}, {6, 0, 10}, {33, 4, 5}, {6, 0, 13}, {3, 
                    4}, {37, 4, 13, 2, 1}, {12, 10, 1, 11}, {6, 11, 10}, {4, 
                    13, 5, -3}, {12, 10, 9, 10}, {39, 2, 0, 7, 0, 10}, {1}}, 
                    Function[{Combinatorica`Private`l}, 
                    
                    Module[{Combinatorica`Private`n = 
                    Apply[Plus, Combinatorica`Private`l], 
                    Combinatorica`Private`nl = Combinatorica`Private`l, 
                    Combinatorica`Private`t = Length[Combinatorica`Private`l],
                     Combinatorica`Private`i}, 
                    While[Part[Combinatorica`Private`l, 
                    Combinatorica`Private`t] == 0, 
                    Decrement[Combinatorica`Private`t]]; Increment[
                    Part[
                    Combinatorica`Private`nl, Combinatorica`Private`t - 1]]; 
                    Do[Part[Combinatorica`Private`nl, 
                    Combinatorica`Private`i] = 0, {
                    Combinatorica`Private`i, Combinatorica`Private`t, 
                    Length[Combinatorica`Private`l]}]; 
                    Part[Combinatorica`Private`nl, 
                    Length[Combinatorica`Private`l]] = Apply[Plus, 
                    Take[
                    Combinatorica`Private`l, -(Length[
                    Combinatorica`Private`l] - Combinatorica`Private`t + 1)]] - 
                    1; Combinatorica`Private`nl]], Evaluate], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                    "[", "lazyLists`Private`list", "]"}]}]}], "]"}]}]}], 
                    "]"}], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[Typeset`open$$], ImageSize -> Automatic]},
               "SummaryPanel"],
              DynamicModuleValues:>{}], "]"}],
            CompiledFunction[{10, 11.3, 7516}, {{
               Blank[Integer], 1}}, {{2, 1, 0}, {2, 1, 
             4}}, {{0, {2, 0, 8}}, {2, {2, 0, 10}}, {-1, {2, 0, 0}}, {
              12, {2, 0, 3}}, {1, {2, 0, 1}}}, {2, 17, 0, 0, 
             8}, {{41, 257, 2, 0, 0, 2, 1, 0, 2, 1, 1}, {38, 1, 0, 1, 0, 2}, {
              42, "TotalAll", 2, 1, 1, 2, 0, 3, 2, 0, 4}, {24, 2, 4, 0}, {2, 
              0, 15}, {33, 1, 6}, {12, 6, 0, 6}, {6, 8, 9}, {35, 6, 2, 2}, {6,
               8, 7}, {3, 2}, {36, 9, 1, 2, 2}, {4, 7, 6, -1}, {12, 2, 10, 
              5}, {34, 1, 1, 0, 2, 3}, {34, 1, 1, 3, 0, 4}, {
              42, "Insert", 2, 1, 2, -2, 0, 5, 2, 2, 4, 2, 1, 5}, {
              42, "CopyTensor", 2, 1, 5, 2, 1, 4}, {3, 50}, {
              42, "CopyTensor", 2, 1, 1, 2, 1, 2}, {
              42, "CopyTensor", 2, 1, 2, 2, 1, 4}, {6, 8, 12}, {33, 4, 9}, {6,
               8, 15}, {3, 4}, {37, 4, 15, 2, 7}, {12, 12, 7, 13}, {6, 13, 
              12}, {4, 15, 9, -3}, {42, "CopyTensor", 2, 1, 2, 2, 1, 4}, {33, 
              2, 15}, {38, 2, 0, 15, 0, 11}, {24, 11, 8, 1}, {2, 1, 5}, {6, 
              15, 11}, {41, 258, 2, 0, 11, 2, 0, 1, 2, 0, 6}, {6, 6, 15}, {
              3, -6}, {12, 15, 0, 11}, {38, 4, 0, 11, 0, 6}, {12, 15, 0, 
              11}, {12, 6, 1, 9}, {39, 4, 0, 11, 0, 9}, {33, 2, 11}, {
              42, "IteratorCountI", 2, 0, 15, 2, 0, 11, 2, 0, 13}, {6, 0, 
              11}, {3, 3}, {12, 15, 11, 7}, {39, 4, 0, 7, 0, 8}, {4, 11, 
              13, -2}, {33, 2, 9}, {33, 2, 5}, {18, 15, 13}, {12, 5, 13, 1, 
              5}, {18, 5, 13}, {
              42, "Take", 2, 1, 2, 2, 0, 8, 2, 0, 13, 2, 1, 7}, {6, 8, 13}, {
              33, 7, 7}, {6, 8, 16}, {3, 4}, {37, 7, 16, 2, 4}, {12, 13, 4, 
              14}, {6, 14, 13}, {4, 16, 7, -3}, {12, 13, 0, 13}, {39, 4, 0, 9,
               0, 13}, {41, 257, 2, 0, 1, 2, 1, 4, 2, 1, 3}, {
              42, "CopyTensor", 2, 1, 3, 2, 1, 4}, {1}}, 
             Function[{lazyLists`Private`tuple}, 
              
              Module[{lazyLists`Private`list = lazyLists`Private`tuple - 1, 
                lazyLists`Private`first}, 
               lazyLists`Private`first = First[lazyLists`Private`list]; 
               If[lazyLists`Private`first == Total[lazyLists`Private`list], 
                 Append[
                  Table[1, {Length[lazyLists`Private`list] - 1}], 
                  lazyLists`Private`first + 2], 1 + 
                 CompiledFunction[{10, 11.3, 5468}, {{
                    Blank[Integer], 1}}, {{2, 1, 0}, {2, 1, 
                   2}}, {{0, {2, 0, 0}}, {-1, {2, 0, 9}}, {1, {2, 0, 8}}}, {1,
                    14, 0, 0, 
                   5}, {{42, "CopyTensor", 2, 1, 0, 2, 1, 2}, {6, 0, 2}, {33, 
                    2, 7}, {6, 0, 12}, {3, 4}, {37, 2, 12, 2, 5}, {12, 2, 5, 
                    10}, {6, 10, 2}, {4, 12, 7, -3}, {
                    42, "CopyTensor", 2, 1, 0, 2, 1, 2}, {33, 0, 12}, {38, 0, 
                    0, 12, 0, 6}, {24, 6, 0, 0}, {2, 0, 5}, {6, 12, 6}, {41, 
                    258, 2, 0, 6, 2, 0, 8, 2, 0, 4}, {6, 4, 12}, {3, -6}, {12,
                     12, 9, 6}, {38, 2, 0, 6, 0, 4}, {12, 12, 9, 6}, {12, 4, 
                    8, 7}, {39, 2, 0, 6, 0, 7}, {33, 0, 6}, {
                    42, "IteratorCountI", 2, 0, 12, 2, 0, 6, 2, 0, 10}, {6, 9,
                     6}, {3, 3}, {12, 12, 6, 5}, {39, 2, 0, 5, 0, 0}, {4, 6, 
                    10, -2}, {33, 0, 7}, {33, 0, 3}, {18, 12, 10}, {12, 3, 10,
                     8, 3}, {18, 3, 10}, {
                    42, "Take", 2, 1, 0, 2, 0, 0, 2, 0, 10, 2, 1, 4}, {6, 0, 
                    10}, {33, 4, 5}, {6, 0, 13}, {3, 4}, {37, 4, 13, 2, 1}, {
                    12, 10, 1, 11}, {6, 11, 10}, {4, 13, 5, -3}, {12, 10, 9, 
                    10}, {39, 2, 0, 7, 0, 10}, {1}}, 
                   Function[{Combinatorica`Private`l}, 
                    
                    Module[{
                    Combinatorica`Private`n = 
                    Apply[Plus, Combinatorica`Private`l], 
                    Combinatorica`Private`nl = Combinatorica`Private`l, 
                    Combinatorica`Private`t = Length[Combinatorica`Private`l],
                     Combinatorica`Private`i}, 
                    While[Part[
                    Combinatorica`Private`l, Combinatorica`Private`t] == 0, 
                    Decrement[Combinatorica`Private`t]]; Increment[
                    Part[
                    Combinatorica`Private`nl, Combinatorica`Private`t - 1]]; 
                    Do[Part[
                    Combinatorica`Private`nl, Combinatorica`Private`i] = 0, {
                    Combinatorica`Private`i, Combinatorica`Private`t, 
                    Length[Combinatorica`Private`l]}]; 
                    Part[Combinatorica`Private`nl, 
                    Length[Combinatorica`Private`l]] = Apply[Plus, 
                    Take[
                    Combinatorica`Private`l, -(
                    Length[Combinatorica`Private`l] - Combinatorica`Private`t + 
                    1)]] - 1; Combinatorica`Private`nl]], Evaluate][
                  lazyLists`Private`list]]]], Evaluate],
            Editable->False,
            SelectWithContents->True,
            Selectable->False], "[", "#1", "]"}], ",", 
          RowBox[{"#2", "+", "1"}]}], "]"}]}], "]"}], "&"}], ")"}], "[", 
    RowBox[{
     RowBox[{
      InterpretationBox[
       RowBox[{
        TagBox["CompiledFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                  Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                  Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "lazyLists`Private`tuple", "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"lazyLists`Private`list", "=", 
                    RowBox[{"lazyLists`Private`tuple", "-", "1"}]}], ",", 
                    "lazyLists`Private`first"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"lazyLists`Private`first", "=", 
                    RowBox[{"First", "[", "lazyLists`Private`list", "]"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"lazyLists`Private`first", "\[Equal]", 
                    RowBox[{"Total", "[", "lazyLists`Private`list", "]"}]}], 
                    ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "lazyLists`Private`list", "]"}], 
                    "-", "1"}], "}"}]}], "]"}], ",", 
                    RowBox[{"lazyLists`Private`first", "+", "2"}]}], "]"}], 
                    ",", 
                    RowBox[{"1", "+", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, ImageSize -> {{1, 
                    300}, Automatic}], LineBreakWithin -> False], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                    5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                    11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                    4.337966249999999}, {13.193201874999998`, 
                    4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                    13.688201874999999`, 8.29796625}, {12.82453, 
                    5.289294374999999}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                    AspectRatio -> 1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "Combinatorica`Private`l", "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Combinatorica`Private`n", "=", 
                    RowBox[{"Plus", "@@", "Combinatorica`Private`l"}]}], ",", 
                    
                    RowBox[{"Combinatorica`Private`nl", "=", 
                    "Combinatorica`Private`l"}], ",", 
                    RowBox[{"Combinatorica`Private`t", "=", 
                    RowBox[{"Length", "[", "Combinatorica`Private`l", "]"}]}],
                     ",", "Combinatorica`Private`i"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Combinatorica`Private`l", "\[LeftDoubleBracket]",
                     "Combinatorica`Private`t", "\[RightDoubleBracket]"}], 
                    "\[Equal]", "0"}], ",", 
                    RowBox[{"Combinatorica`Private`t", "--"}]}], "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"Combinatorica`Private`nl", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"Combinatorica`Private`t", "-", "1"}], 
                    "\[RightDoubleBracket]"}], "++"}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Combinatorica`Private`nl", 
                    "\[LeftDoubleBracket]", "Combinatorica`Private`i", 
                    "\[RightDoubleBracket]"}], "=", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Combinatorica`Private`i", ",", 
                    "Combinatorica`Private`t", ",", 
                    RowBox[{"Length", "[", "Combinatorica`Private`l", "]"}]}],
                     "}"}]}], "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"Combinatorica`Private`nl", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"Length", "[", "Combinatorica`Private`l", "]"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{"Plus", "@@", 
                    RowBox[{"Take", "[", 
                    RowBox[{"Combinatorica`Private`l", ",", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", "Combinatorica`Private`l", "]"}], 
                    "-", "Combinatorica`Private`t", "+", "1"}], ")"}]}]}], 
                    "]"}]}], "-", "1"}]}], ";", 
                    "Combinatorica`Private`nl"}]}], "]"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    CompiledFunction[{10, 11.3, 5468}, {{
                    Blank[Integer], 1}}, {{2, 1, 0}, {2, 1, 
                    2}}, {{0, {2, 0, 0}}, {-1, {2, 0, 9}}, {1, {2, 0, 8}}}, {
                    1, 14, 0, 0, 5}, {{42, "CopyTensor", 2, 1, 0, 2, 1, 2}, {
                    6, 0, 2}, {33, 2, 7}, {6, 0, 12}, {3, 4}, {37, 2, 12, 2, 
                    5}, {12, 2, 5, 10}, {6, 10, 2}, {4, 12, 7, -3}, {
                    42, "CopyTensor", 2, 1, 0, 2, 1, 2}, {33, 0, 12}, {38, 0, 
                    0, 12, 0, 6}, {24, 6, 0, 0}, {2, 0, 5}, {6, 12, 6}, {41, 
                    258, 2, 0, 6, 2, 0, 8, 2, 0, 4}, {6, 4, 12}, {3, -6}, {12,
                     12, 9, 6}, {38, 2, 0, 6, 0, 4}, {12, 12, 9, 6}, {12, 4, 
                    8, 7}, {39, 2, 0, 6, 0, 7}, {33, 0, 6}, {
                    42, "IteratorCountI", 2, 0, 12, 2, 0, 6, 2, 0, 10}, {6, 9,
                     6}, {3, 3}, {12, 12, 6, 5}, {39, 2, 0, 5, 0, 0}, {4, 6, 
                    10, -2}, {33, 0, 7}, {33, 0, 3}, {18, 12, 10}, {12, 3, 10,
                     8, 3}, {18, 3, 10}, {
                    42, "Take", 2, 1, 0, 2, 0, 0, 2, 0, 10, 2, 1, 4}, {6, 0, 
                    10}, {33, 4, 5}, {6, 0, 13}, {3, 4}, {37, 4, 13, 2, 1}, {
                    12, 10, 1, 11}, {6, 11, 10}, {4, 13, 5, -3}, {12, 10, 9, 
                    10}, {39, 2, 0, 7, 0, 10}, {1}}, 
                    Function[{Combinatorica`Private`l}, 
                    
                    Module[{Combinatorica`Private`n = 
                    Apply[Plus, Combinatorica`Private`l], 
                    Combinatorica`Private`nl = Combinatorica`Private`l, 
                    Combinatorica`Private`t = Length[Combinatorica`Private`l],
                     Combinatorica`Private`i}, 
                    While[Part[Combinatorica`Private`l, 
                    Combinatorica`Private`t] == 0, 
                    Decrement[Combinatorica`Private`t]]; Increment[
                    Part[
                    Combinatorica`Private`nl, Combinatorica`Private`t - 1]]; 
                    Do[Part[Combinatorica`Private`nl, 
                    Combinatorica`Private`i] = 0, {
                    Combinatorica`Private`i, Combinatorica`Private`t, 
                    Length[Combinatorica`Private`l]}]; 
                    Part[Combinatorica`Private`nl, 
                    Length[Combinatorica`Private`l]] = Apply[Plus, 
                    Take[
                    Combinatorica`Private`l, -(Length[
                    Combinatorica`Private`l] - Combinatorica`Private`t + 1)]] - 
                    1; Combinatorica`Private`nl]], Evaluate], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                    "[", "lazyLists`Private`list", "]"}]}]}], "]"}]}]}], 
                    "]"}], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       CompiledFunction[{10, 11.3, 7516}, {{
          Blank[Integer], 1}}, {{2, 1, 0}, {2, 1, 
        4}}, {{0, {2, 0, 8}}, {2, {2, 0, 10}}, {-1, {2, 0, 0}}, {
         12, {2, 0, 3}}, {1, {2, 0, 1}}}, {2, 17, 0, 0, 
        8}, {{41, 257, 2, 0, 0, 2, 1, 0, 2, 1, 1}, {38, 1, 0, 1, 0, 2}, {
         42, "TotalAll", 2, 1, 1, 2, 0, 3, 2, 0, 4}, {24, 2, 4, 0}, {2, 0, 
         15}, {33, 1, 6}, {12, 6, 0, 6}, {6, 8, 9}, {35, 6, 2, 2}, {6, 8, 
         7}, {3, 2}, {36, 9, 1, 2, 2}, {4, 7, 6, -1}, {12, 2, 10, 5}, {34, 1, 
         1, 0, 2, 3}, {34, 1, 1, 3, 0, 4}, {
         42, "Insert", 2, 1, 2, -2, 0, 5, 2, 2, 4, 2, 1, 5}, {
         42, "CopyTensor", 2, 1, 5, 2, 1, 4}, {3, 50}, {
         42, "CopyTensor", 2, 1, 1, 2, 1, 2}, {
         42, "CopyTensor", 2, 1, 2, 2, 1, 4}, {6, 8, 12}, {33, 4, 9}, {6, 8, 
         15}, {3, 4}, {37, 4, 15, 2, 7}, {12, 12, 7, 13}, {6, 13, 12}, {4, 15,
          9, -3}, {42, "CopyTensor", 2, 1, 2, 2, 1, 4}, {33, 2, 15}, {38, 2, 
         0, 15, 0, 11}, {24, 11, 8, 1}, {2, 1, 5}, {6, 15, 11}, {41, 258, 2, 
         0, 11, 2, 0, 1, 2, 0, 6}, {6, 6, 15}, {3, -6}, {12, 15, 0, 11}, {38, 
         4, 0, 11, 0, 6}, {12, 15, 0, 11}, {12, 6, 1, 9}, {39, 4, 0, 11, 0, 
         9}, {33, 2, 11}, {
         42, "IteratorCountI", 2, 0, 15, 2, 0, 11, 2, 0, 13}, {6, 0, 11}, {3, 
         3}, {12, 15, 11, 7}, {39, 4, 0, 7, 0, 8}, {4, 11, 13, -2}, {33, 2, 
         9}, {33, 2, 5}, {18, 15, 13}, {12, 5, 13, 1, 5}, {18, 5, 13}, {
         42, "Take", 2, 1, 2, 2, 0, 8, 2, 0, 13, 2, 1, 7}, {6, 8, 13}, {33, 7,
          7}, {6, 8, 16}, {3, 4}, {37, 7, 16, 2, 4}, {12, 13, 4, 14}, {6, 14, 
         13}, {4, 16, 7, -3}, {12, 13, 0, 13}, {39, 4, 0, 9, 0, 13}, {41, 257,
          2, 0, 1, 2, 1, 4, 2, 1, 3}, {42, "CopyTensor", 2, 1, 3, 2, 1, 4}, {
         1}}, 
        Function[{lazyLists`Private`tuple}, 
         Module[{
          lazyLists`Private`list = lazyLists`Private`tuple - 1, 
           lazyLists`Private`first}, 
          lazyLists`Private`first = First[lazyLists`Private`list]; 
          If[lazyLists`Private`first == Total[lazyLists`Private`list], 
            Append[
             Table[1, {Length[lazyLists`Private`list] - 1}], 
             lazyLists`Private`first + 2], 1 + 
            CompiledFunction[{10, 11.3, 5468}, {{
                Blank[Integer], 1}}, {{2, 1, 0}, {2, 1, 
              2}}, {{0, {2, 0, 0}}, {-1, {2, 0, 9}}, {1, {2, 0, 8}}}, {1, 14, 
              0, 0, 5}, {{42, "CopyTensor", 2, 1, 0, 2, 1, 2}, {6, 0, 2}, {33,
                2, 7}, {6, 0, 12}, {3, 4}, {37, 2, 12, 2, 5}, {12, 2, 5, 
               10}, {6, 10, 2}, {4, 12, 7, -3}, {
               42, "CopyTensor", 2, 1, 0, 2, 1, 2}, {33, 0, 12}, {38, 0, 0, 
               12, 0, 6}, {24, 6, 0, 0}, {2, 0, 5}, {6, 12, 6}, {41, 258, 2, 
               0, 6, 2, 0, 8, 2, 0, 4}, {6, 4, 12}, {3, -6}, {12, 12, 9, 6}, {
               38, 2, 0, 6, 0, 4}, {12, 12, 9, 6}, {12, 4, 8, 7}, {39, 2, 0, 
               6, 0, 7}, {33, 0, 6}, {
               42, "IteratorCountI", 2, 0, 12, 2, 0, 6, 2, 0, 10}, {6, 9, 
               6}, {3, 3}, {12, 12, 6, 5}, {39, 2, 0, 5, 0, 0}, {4, 6, 
               10, -2}, {33, 0, 7}, {33, 0, 3}, {18, 12, 10}, {12, 3, 10, 8, 
               3}, {18, 3, 10}, {
               42, "Take", 2, 1, 0, 2, 0, 0, 2, 0, 10, 2, 1, 4}, {6, 0, 10}, {
               33, 4, 5}, {6, 0, 13}, {3, 4}, {37, 4, 13, 2, 1}, {12, 10, 1, 
               11}, {6, 11, 10}, {4, 13, 5, -3}, {12, 10, 9, 10}, {39, 2, 0, 
               7, 0, 10}, {1}}, 
              Function[{Combinatorica`Private`l}, 
               
               Module[{
                Combinatorica`Private`n = 
                 Apply[Plus, Combinatorica`Private`l], 
                 Combinatorica`Private`nl = Combinatorica`Private`l, 
                 Combinatorica`Private`t = Length[Combinatorica`Private`l], 
                 Combinatorica`Private`i}, 
                While[Part[Combinatorica`Private`l, Combinatorica`Private`t] == 
                  0, 
                  Decrement[Combinatorica`Private`t]]; Increment[
                  Part[
                  Combinatorica`Private`nl, Combinatorica`Private`t - 1]]; 
                Do[Part[Combinatorica`Private`nl, Combinatorica`Private`i] = 
                  0, {Combinatorica`Private`i, Combinatorica`Private`t, 
                   Length[Combinatorica`Private`l]}]; 
                Part[Combinatorica`Private`nl, 
                   Length[Combinatorica`Private`l]] = Apply[Plus, 
                    Take[
                    Combinatorica`Private`l, -(
                    Length[Combinatorica`Private`l] - Combinatorica`Private`t + 
                    1)]] - 1; Combinatorica`Private`nl]], Evaluate][
             lazyLists`Private`list]]]], Evaluate],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", 
      RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}], "]"}], ",", 
     RowBox[{"2", "+", "1"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[151]=",ExpressionUUID->"8a725b73-4d3a-4811-9ab8-f26ff12cf1ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[152]=",ExpressionUUID->"10192814-a4c3-4f8b-beac-0b66e260b6ea"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lazy file streams", \
"Subsubsection",ExpressionUUID->"6d9500cf-eaaf-4ac9-97d8-236f0b90d0fa"],

Cell["lazyLists can be used with InputStreams. First make a file:", \
"Text",ExpressionUUID->"f082c183-c495-4435-9420-7573f759251c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stmp", "=", 
   RowBox[{"OpenWrite", "[", "\"\<tmp\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{"Write", "[", 
  RowBox[{"stmp", ",", "a", ",", "b", ",", "c"}], "]"}], "\n", 
 RowBox[{"Write", "[", 
  RowBox[{"stmp", ",", "x"}], "]"}], "\n", 
 RowBox[{"Write", "[", 
  RowBox[{"stmp", ",", "\"\<Hello\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"stmp", ",", "\"\<Hello\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"stmp", ",", "\"\<Hello\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Close", "[", "stmp", "]"}]}], "Input",
 CellLabel->"In[153]:=",
 CellID->28621,ExpressionUUID->"56e7c7ce-37ef-4877-9931-7dd9f3a12e91"],

Cell[BoxData["\<\"tmp\"\>"], "Output",
 CellLabel->"Out[159]=",ExpressionUUID->"84d6cae0-53ff-4589-9d52-fff72b0a9246"]
}, Open  ]],

Cell["Open a reading stream and make a lazyList out of it:", \
"Text",ExpressionUUID->"a3290700-5172-4544-bd8e-a4ce7202ecbb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"stream", "=", 
      RowBox[{"OpenRead", "[", "\"\<tmp\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", "result"}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"result", "=", 
     RowBox[{"First", "@", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"lazyStream", "[", "stream", "]"}], ",", "3"}], "]"}]}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Close", "[", "stream", "]"}], ";", "\[IndentingNewLine]", 
    "result"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[160]:=",ExpressionUUID->"397a2c85-f736-4613-8c9b-d8a642960c89"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"abc", ",", "x", ",", "\<\"Hello\"\>"}], "}"}]], "Output",
 CellLabel->"Out[160]=",ExpressionUUID->"cde53920-03a4-4c33-a031-0d69cac6217b"]
}, Open  ]],

Cell["\<\
The stream will cut out automatically when it reaches the end of the file:\
\>", "Text",ExpressionUUID->"57ec74de-bf80-4038-9fb8-21b16a056923"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"stream", "=", 
      RowBox[{"OpenRead", "[", "\"\<tmp\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", "result"}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"result", "=", 
     RowBox[{"First", "@", 
      RowBox[{"TakeWhile", "[", 
       RowBox[{
        RowBox[{"lazyStream", "[", "stream", "]"}], ",", 
        RowBox[{"True", "&"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Close", "[", "stream", "]"}], ";", "\[IndentingNewLine]", 
    "result"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[161]:=",ExpressionUUID->"71fdd96b-ab00-400c-a4be-632c2ee366b4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "abc", ",", "x", ",", "\<\"Hello\"\>", ",", "\<\"Hello\"\>", 
   ",", "\<\"Hello\"\>", ",", "EndOfFile"}], "}"}]], "Output",
 CellLabel->"Out[161]=",ExpressionUUID->"1ed04159-d447-4199-9079-c6c5883e13c9"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Plus",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Times",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Power",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Divide",
  FontWeight->"Bold"],
 ", and ",
 StyleBox["Subtract ",
  FontWeight->"Bold"],
 "thread over lazyLists, though these functionalities are far less efficient \
than for ordinary lists and should probably be avoided if the same can be \
achieved with FoldList or Map"
}], "Text",ExpressionUUID->"d3f5e510-6511-42f7-bf7f-18d13a7c0060"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"First", " ", "@", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"lazyRange", "[", "]"}], "+", 
     RowBox[{"lazyRange", "[", "2", "]"}]}], ",", "5"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", " ", "@", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"2", "*", " ", 
      RowBox[{"lazyRange", "[", "]"}]}], "+", 
     RowBox[{"3", " ", 
      RowBox[{"lazyRange", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}]}], ",", "5"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", " ", "@", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"lazyRange", "[", "]"}], "^", 
     RowBox[{"lazyRange", "[", "]"}]}], ",", "5"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", " ", "@", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"Divide", "[", 
     RowBox[{"1", ",", 
      RowBox[{"lazyRange", "[", 
       RowBox[{"2", ",", "2"}], "]"}]}], "]"}], ",", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[162]:=",ExpressionUUID->"431c46dd-1989-4038-a8a6-287ac92d6e53"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "5", ",", "7", ",", "9", ",", "11"}], "}"}]], "Output",
 CellLabel->
  "Out[162]=",ExpressionUUID->"a13e0dd7-8597-4548-a449-72ccd62e1497"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "13", ",", "21", ",", "29", ",", "37"}], "}"}]], "Output",
 CellLabel->
  "Out[163]=",ExpressionUUID->"86a3c9b1-63c4-4be6-ae7c-08144ce532ad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "27", ",", "256", ",", "3125"}], 
  "}"}]], "Output",
 CellLabel->
  "Out[164]=",ExpressionUUID->"26d7b6f8-8bd0-4fb1-a41e-d0d17f429a99"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], ",", 
   FractionBox["1", "4"], ",", 
   FractionBox["1", "6"], ",", 
   FractionBox["1", "8"], ",", 
   FractionBox["1", "10"]}], "}"}]], "Output",
 CellLabel->"Out[165]=",ExpressionUUID->"e77ea2a2-50dc-4ae9-b35d-61d3a292b676"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["lazyList operators", \
"Subsection",ExpressionUUID->"314c8f5e-1a86-4e86-9bd1-68842761416f"],

Cell[TextData[{
 StyleBox["Map",
  FontWeight->"Bold"],
 ", ",
 StyleBox["MapIndexed",
  FontWeight->"Bold"],
 ", ",
 StyleBox["FoldList",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Cases",
  FontWeight->"Bold"],
 ",",
 StyleBox[" Pick",
  FontWeight->"Bold"],
 ",",
 StyleBox[" ",
  FontWeight->"Bold"],
 "and ",
 StyleBox["Select",
  FontWeight->"Bold"],
 " work with lazyLists and return lazyLists. There is also ",
 StyleBox["lazyMapThread",
  FontWeight->"Bold"],
 ", which functions similar to MapThread. All of these functions can be \
combined together to generate more complex lazyLists."
}], "Text",ExpressionUUID->"2db4b7f0-d54f-42c4-8598-19597a08299a"],

Cell[CellGroupData[{

Cell["Map", \
"Subsubsection",ExpressionUUID->"25ea5f2b-c1e7-4656-9115-8c0a9c24f192"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Map", "[", 
  RowBox[{"Sqrt", ",", 
   RowBox[{"lazyRange", "[", 
    RowBox[{"0", ",", "2"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[166]:=",ExpressionUUID->"db26052a-0c7d-4de0-99a3-0b0a708b07d2"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"0", ",", 
   RowBox[{"Sqrt", "/@", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"lazyList", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"#0", "[", 
          RowBox[{
           RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
      ")"}], "[", 
     RowBox[{
      RowBox[{"2", "+", "0"}], ",", "2"}], "]"}]}]}], "]"}]], "Output",
 CellLabel->
  "Out[166]=",ExpressionUUID->"6c46bac3-3be0-4fb7-8a2e-b97bc112a0f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   SqrtBox["2"], ",", "2", ",", 
   SqrtBox["6"], ",", 
   RowBox[{"2", " ", 
    SqrtBox["2"]}]}], "}"}]], "Output",
 CellLabel->"Out[167]=",ExpressionUUID->"203692d3-45f3-4397-84ac-b02930da832e"]
}, Open  ]],

Cell["\<\
Mapping over a Map or generator will reduce to a single Map (or generator) of \
the composed functions:\
\>", "Text",ExpressionUUID->"e52b1dec-4abe-4156-8fd4-3878659a757e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Sqrt", "/@", 
  RowBox[{"Exp", "/@", 
   RowBox[{"Sin", "/@", 
    RowBox[{"lazyRange", "[", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Sqrt", "/@", 
  RowBox[{"Exp", "/@", 
   RowBox[{"lazyGenerator", "[", "Sin", "]"}]}]}]}], "Input",
 CellLabel->
  "In[168]:=",ExpressionUUID->"ecb21116-e6c8-44f8-9611-594b52bd7e50"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"Sin", "[", "1", "]"}], "2"]], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Sqrt", "@*", "Exp", "@*", "Sin"}], ")"}], "/@", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"lazyList", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"#0", "[", 
          RowBox[{
           RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
      ")"}], "[", 
     RowBox[{
      RowBox[{"1", "+", "1"}], ",", "1"}], "]"}]}]}], "]"}]], "Output",
 CellLabel->
  "Out[168]=",ExpressionUUID->"be14da40-e009-4be0-a0e0-6fa2eec2a8eb"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"Sin", "[", "1", "]"}], "2"]], ",", 
   RowBox[{"lazyLists`Private`twoSidedGenerator", "[", 
    RowBox[{
     RowBox[{"Sqrt", "@*", "Exp", "@*", "Sin"}], ",", 
     RowBox[{"1", "+", "1"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[169]=",ExpressionUUID->"a72ccdf9-62dc-47d7-9baf-6017dea6f72c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fold", \
"Subsubsection",ExpressionUUID->"b293c8ba-17ea-40d2-9a5b-0d024f5a61e0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FoldList", "[", 
  RowBox[{"Plus", ",", "x0", ",", 
   RowBox[{"lazyRange", "[", 
    RowBox[{"n", ",", "m"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[170]:=",ExpressionUUID->"88d3c946-e148-4f02-8892-b1be9959da90"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"x0", ",", 
   RowBox[{"FoldList", "[", 
    RowBox[{"Plus", ",", 
     RowBox[{"x0", "+", "n"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"m", "+", "n"}], ",", "m"}], "]"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[170]=",ExpressionUUID->"d4a878f3-63e3-4405-a967-eccdfcd89855"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x0", ",", 
   RowBox[{"n", "+", "x0"}], ",", 
   RowBox[{"m", "+", 
    RowBox[{"2", " ", "n"}], "+", "x0"}], ",", 
   RowBox[{
    RowBox[{"3", " ", "m"}], "+", 
    RowBox[{"3", " ", "n"}], "+", "x0"}], ",", 
   RowBox[{
    RowBox[{"6", " ", "m"}], "+", 
    RowBox[{"4", " ", "n"}], "+", "x0"}]}], "}"}]], "Output",
 CellLabel->"Out[171]=",ExpressionUUID->"208167b5-44c9-43f6-909a-1b165b8e13a8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cases", \
"Subsubsection",ExpressionUUID->"3c7f4e74-23d1-40b0-ba20-1134f3f1a203"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", 
    RowBox[{"0", ",", 
     RowBox[{"2", "/", "3"}]}], "]"}], ",", "_Integer"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[172]:=",ExpressionUUID->"b0b0dea7-1808-4672-a86a-d9ce4333d960"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"0", ",", 
   RowBox[{"lazyLists`Private`case$42661", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"lazyList", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"#0", "[", 
          RowBox[{
           RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
      ")"}], "[", 
     RowBox[{
      RowBox[{
       FractionBox["2", "3"], "+", "0"}], ",", 
      FractionBox["2", "3"]}], "]"}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[172]=",ExpressionUUID->"22310e26-b97c-4d6e-bdae-2bf330fce0fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "2", ",", "4", ",", "6", ",", "8"}], "}"}]], "Output",
 CellLabel->"Out[173]=",ExpressionUUID->"0ca54f5c-1b7c-4d2a-bd20-8eaf5a5e6efb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pick", \
"Subsubsection",ExpressionUUID->"f3a06a45-4dfb-4c77-a330-74be0c8e9361"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Pick", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", 
    RowBox[{"0", ",", "2"}], "]"}], ",", 
   RowBox[{"lazyRange", "[", 
    RowBox[{"0", ",", 
     RowBox[{"2", "/", "3"}]}], "]"}], ",", "_Integer"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[174]:=",ExpressionUUID->"02767e8a-5bbd-4578-a783-6b1ca449f3b0"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"0", ",", 
   RowBox[{"lazyLists`Private`pick$42662", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"2", "+", "0"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{
        FractionBox["2", "3"], "+", "0"}], ",", 
       FractionBox["2", "3"]}], "]"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[174]=",ExpressionUUID->"cde64e3c-f68b-4fbd-8595-151717d3665c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "6", ",", "12", ",", "18", ",", "24"}], "}"}]], "Output",
 CellLabel->"Out[175]=",ExpressionUUID->"619a64e8-2bd4-44e8-af2d-6d12d1188308"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select", \
"Subsubsection",ExpressionUUID->"67410976-9bef-4063-994a-da7ffc8607aa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", "]"}], ",", "OddQ"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[176]:=",ExpressionUUID->"f7cc65d1-b623-4858-860e-fb8bda6906cf"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"1", ",", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "1"}], ",", "1"}], "]"}], ",", "OddQ"}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->
  "Out[176]=",ExpressionUUID->"4beecf16-88af-45a6-a079-babf7330e6d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "7", ",", "9"}], "}"}]], "Output",
 CellLabel->"Out[177]=",ExpressionUUID->"ecf46c5c-f742-4bee-b83f-6853268a0dd5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MapIndexed", \
"Subsubsection",ExpressionUUID->"165f8426-7fdc-4dd2-879f-7c449ccd6ae4"],

Cell[TextData[{
 StyleBox["MapIndexed",
  FontWeight->"Bold"],
 " allows you to map a function of 2 arguments over a lazyList. The 2nd \
argument is an integer that keeps track of the position in the list. Note \
that this is slightly different from the way MapIndexed works normally, which \
supplies a list containing the index to the second argument. "
}], "Text",ExpressionUUID->"46c8a02f-7fcf-4bfc-ab29-1b9988a542db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MapIndexed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
      RowBox[{"lazyRange", "[", 
       RowBox[{"2", ",", "2"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
    "5"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[178]:=",ExpressionUUID->"ab76f983-28b6-43cf-9633-09f130a5a988"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[178]=",ExpressionUUID->"d38c018d-3fa0-42f0-9b58-bda24b88b170"]
}, Open  ]],

Cell["\<\
MapIndexed has a third argument to specify the starting position. This is \
useful when passing a lazyList which has already been partially evaluated.\
\>", "Text",ExpressionUUID->"a1d52835-fdc6-4c94-8c49-8996fd82e507"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MapIndexed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
      RowBox[{"lazyRange", "[", "]"}], ",", "20"}], "]"}], ",", 
    "\[IndentingNewLine]", "5"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[179]:=",ExpressionUUID->"fc210aed-ccdd-4241-b891-65b6433f88ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "24"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[179]=",ExpressionUUID->"33cbcae6-f4d2-4e52-a732-391c087ff63e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["lazyMapThread", \
"Subsubsection",ExpressionUUID->"6527aab7-0b41-4f41-8386-669ecaa71c8b"],

Cell[TextData[{
 StyleBox["lazyMapThread",
  FontWeight->"Bold"],
 " is functionally similar to MapThread, except all arguments are fed as a \
List into the first slot of the mapped function:"
}], "Text",ExpressionUUID->"edc0cb50-690c-4cee-b084-17a3472acd11"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lazyMapThread", "[", 
     RowBox[{"f", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"lazyRange", "[", "]"}], ",", 
        RowBox[{"lazyRange", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", "5"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[180]:=",ExpressionUUID->"2f643a7b-e0c1-44f8-bfc1-340a161a0d8a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "6"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"4", ",", "8"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"5", ",", "10"}], "}"}], "]"}]}], "}"}]], "Output",
 CellLabel->"Out[180]=",ExpressionUUID->"ad54cbd8-e056-4313-a9e0-6801bc3fb45a"]
}, Open  ]],

Cell["Compare with regular MapThread:", \
"Text",ExpressionUUID->"c06c056b-c716-4d08-82f9-cdd01019726f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Range", "[", "5", "]"}], ",", 
     RowBox[{"2", 
      RowBox[{"Range", "[", "5", "]"}]}]}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[181]:=",ExpressionUUID->"3bbfeee5-cbb7-4e4d-8186-0d37f0b22777"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"2", ",", "4"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"3", ",", "6"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"4", ",", "8"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"5", ",", "10"}], "]"}]}], "}"}]], "Output",
 CellLabel->"Out[181]=",ExpressionUUID->"471b3ab5-6637-4644-8b9e-449e8499ef19"]
}, Open  ]],

Cell["Normal lists are cast into lazyLists:", \
"Text",ExpressionUUID->"acc9e6ba-d672-4771-add0-558a0a3cdef0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lazyMapThread", "[", 
     RowBox[{"f", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"lazyRange", "[", "]"}], ",", 
        RowBox[{"Range", "[", "5", "]"}]}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", "All"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[182]:=",ExpressionUUID->"455fa1d3-c1b1-4389-a06c-4ccf905f7260"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"5", ",", "5"}], "}"}], "]"}]}], "}"}]], "Output",
 CellLabel->"Out[182]=",ExpressionUUID->"3178d21b-0cbb-44cd-8792-82e36af69245"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["lazyCatenate", \
"Subsubsection",ExpressionUUID->"15c98d8f-4fa4-44bb-92d2-870aaeeb5c77"],

Cell[TextData[{
 StyleBox["lazyCatenate",
  FontWeight->"Bold"],
 " flattens one layer of list and returns a lazyList. It flattens normal \
lists and lazyLists or a combination of the two."
}], "Text",ExpressionUUID->"de458fb0-39f6-4576-9462-640072f2004d"],

Cell["List of lists:", \
"Text",ExpressionUUID->"0a52c93f-0a2b-4168-9bff-f00120e1eaa6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lazyCatenate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "All"}], "]"}]}]}], "Input",
 CellLabel->
  "In[183]:=",ExpressionUUID->"9105bad9-cd46-425e-af41-4aa8407d5ea4"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"1", ",", 
   RowBox[{"lazyLists`Private`lazyFiniteList", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"1", "+", "1"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[183]=",ExpressionUUID->"40660bd8-b0e9-43d4-b490-bf2a0306d377"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellLabel->"Out[184]=",ExpressionUUID->"78671e14-ed54-48af-b04c-9e8d1f86791c"]
}, Open  ]],

Cell["List of lazyLists:", \
"Text",ExpressionUUID->"af81ce7a-88ba-4d66-b048-3e975300c89b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", " ", "@", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"lazyCatenate", "@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lazyGenerator", "[", 
        RowBox[{"f", ",", "1", ",", "1", ",", "5"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"lazyGenerator", "[", 
        RowBox[{"g", ",", "1", ",", "1", ",", "5"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", "All"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[185]:=",ExpressionUUID->"11a1ab93-76ad-4f4a-a663-e7c39f728213"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}], ",", 
   RowBox[{"f", "[", "5", "]"}], ",", 
   RowBox[{"g", "[", "1", "]"}], ",", 
   RowBox[{"g", "[", "2", "]"}], ",", 
   RowBox[{"g", "[", "3", "]"}], ",", 
   RowBox[{"g", "[", "4", "]"}], ",", 
   RowBox[{"g", "[", "5", "]"}]}], "}"}]], "Output",
 CellLabel->"Out[185]=",ExpressionUUID->"8234c0ba-ae9c-4c58-98f8-5a9360d00dcc"]
}, Open  ]],

Cell["lazyList of lists:", \
"Text",ExpressionUUID->"bbb77a42-f148-444e-bc2e-4a413a9de2a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"lazyCatenate", "@", 
     RowBox[{"lazyGenerator", "[", 
      RowBox[{"Range", ",", "1", ",", "1", ",", "5"}], "]"}]}], ",", "All"}], 
   "]"}]}]], "Input",
 CellLabel->
  "In[186]:=",ExpressionUUID->"a45957dd-a3b6-4f04-92ea-2898edac89a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "1", ",", "2", ",", "3", ",", "1", ",", "2", 
   ",", "3", ",", "4", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
  "}"}]], "Output",
 CellLabel->"Out[186]=",ExpressionUUID->"fb429300-e378-447f-98b1-31ce0917ba0a"]
}, Open  ]],

Cell["lazyList of lazyLists:", \
"Text",ExpressionUUID->"947adea4-d5e0-46ca-88b9-4c4947b51d46"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lazyCatenate", "@", 
     RowBox[{"lazyGenerator", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"lazyGenerator", "[", 
         RowBox[{
          SubscriptBox["f", "#"], ",", "#", ",", "#", ",", 
          RowBox[{"#", "+", "3"}]}], "]"}], "&"}], ",", "1", ",", "1", ",", 
       "5"}], "]"}]}], ",", "\[IndentingNewLine]", "All"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[187]:=",ExpressionUUID->"46fa24bb-403e-4fed-abfc-a7712c99c106"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["f", "1"], "[", "1", "]"}], ",", 
   RowBox[{
    SubscriptBox["f", "1"], "[", "2", "]"}], ",", 
   RowBox[{
    SubscriptBox["f", "1"], "[", "3", "]"}], ",", 
   RowBox[{
    SubscriptBox["f", "1"], "[", "4", "]"}], ",", 
   RowBox[{
    SubscriptBox["f", "2"], "[", "2", "]"}], ",", 
   RowBox[{
    SubscriptBox["f", "2"], "[", "3", "]"}], ",", 
   RowBox[{
    SubscriptBox["f", "2"], "[", "4", "]"}], ",", 
   RowBox[{
    SubscriptBox["f", "2"], "[", "5", "]"}], ",", 
   RowBox[{
    SubscriptBox["f", "3"], "[", "3", "]"}], ",", 
   RowBox[{
    SubscriptBox["f", "3"], "[", "4", "]"}], ",", 
   RowBox[{
    SubscriptBox["f", "3"], "[", "5", "]"}], ",", 
   RowBox[{
    SubscriptBox["f", "3"], "[", "6", "]"}], ",", 
   RowBox[{
    SubscriptBox["f", "4"], "[", "4", "]"}], ",", 
   RowBox[{
    SubscriptBox["f", "4"], "[", "5", "]"}], ",", 
   RowBox[{
    SubscriptBox["f", "4"], "[", "6", "]"}], ",", 
   RowBox[{
    SubscriptBox["f", "4"], "[", "7", "]"}], ",", 
   RowBox[{
    SubscriptBox["f", "5"], "[", "5", "]"}], ",", 
   RowBox[{
    SubscriptBox["f", "5"], "[", "6", "]"}], ",", 
   RowBox[{
    SubscriptBox["f", "5"], "[", "7", "]"}], ",", 
   RowBox[{
    SubscriptBox["f", "5"], "[", "8", "]"}]}], "}"}]], "Output",
 CellLabel->"Out[187]=",ExpressionUUID->"878cd05b-852b-4ded-a0eb-b8faf9d35d74"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Caveats", \
"Subsection",ExpressionUUID->"913456ae-86bc-474d-90bb-1fe719afec8e"],

Cell["\<\
When defining your own lazyLists, make sure the last part of the list does \
not evaluate to itself. Take etc. will not work correctly on such lists and \
stop iterating prematurely:\
\>", "Text",ExpressionUUID->"232911ec-716c-44a2-a324-124b95f3af23"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"badExample", " ", "=", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"lazyList", "[", 
     RowBox[{"1", ",", 
      RowBox[{"#0", "[", "]"}]}], "]"}], "]"}], "[", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"badExample", "===", 
  RowBox[{"Last", "[", "badExample", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", " ", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"badExample", ",", "20"}], "]"}]}]}], "Input",
 CellLabel->
  "In[188]:=",ExpressionUUID->"16b8e012-7427-4406-b801-d4e7e34f299e"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"1", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"1", ",", 
        RowBox[{"#0", "[", "]"}]}], "]"}], "&"}], ")"}], "[", "]"}]}], 
  "]"}]], "Output",
 CellLabel->
  "Out[188]=",ExpressionUUID->"03e731b0-a1ec-4170-8e59-29496fc968be"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[189]=",ExpressionUUID->"91b60eaa-14c3-4be9-877b-cd8fcae91fb0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[190]=",ExpressionUUID->"f3370731-2791-42bd-bcae-c53eea5f80ca"]
}, Open  ]],

Cell["\<\
Instead, you can add an iterator that increases with each evaluation. This \
iterator can also be used to keep track of the position in the lazy list:\
\>", "Text",ExpressionUUID->"24b81520-5eb3-4541-b793-4c68766f4c01"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"example", " ", "=", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"lazyList", "[", 
     RowBox[{"1", ",", 
      RowBox[{"#0", "[", 
       RowBox[{"#1", "+", "1"}], "]"}]}], "]"}], "]"}], "[", "1", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"example", "===", 
  RowBox[{"Last", "[", "example", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{"example", ",", "20"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"position", "=", 
  RowBox[{"Replace", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Last", "@", "%"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"_", ",", 
        RowBox[{
         RowBox[{"Function", "[", "__", "]"}], "[", "i_", "]"}]}], "]"}], 
      "\[RuleDelayed]", "i"}], "\[IndentingNewLine]", "}"}]}], 
   "]"}]}]}], "Input",
 CellLabel->
  "In[191]:=",ExpressionUUID->"44069107-bcb5-4d00-85bc-c9773bf4979b"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"1", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{"#1", "+", "1"}], "]"}]}], "]"}], "&"}], ")"}], "[", 
    RowBox[{"1", "+", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[191]=",ExpressionUUID->"99a7f2e1-4b80-4d1c-af1c-bcacd05649e5"],

Cell[BoxData["False"], "Output",
 CellLabel->
  "Out[192]=",ExpressionUUID->"ec7aebd7-8604-4a2a-aa42-09d29073396c"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"1", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{"#1", "+", "1"}], "]"}]}], "]"}], "&"}], ")"}], "[", 
      RowBox[{"20", "+", "1"}], "]"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[193]=",ExpressionUUID->"ebe49296-0efa-46f9-9348-d2657db6a9e9"],

Cell[BoxData["21"], "Output",
 CellLabel->"Out[194]=",ExpressionUUID->"6d1c2bfb-c357-4ec6-bc8a-ac3df7c39b67"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{983, 839},
WindowMargins->{{Automatic, 377}, {Automatic, 40}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
ShowGroupOpener->True,
TrackCellChangeTimes->False,
Magnification:>1.3 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]

